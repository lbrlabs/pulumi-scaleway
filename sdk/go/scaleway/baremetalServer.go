// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package scaleway

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type BaremetalServer struct {
	pulumi.CustomResourceState

	// Some description to associate to the server, max 255 characters
	Description pulumi.StringPtrOutput `pulumi:"description"`
	Domain      pulumi.StringOutput    `pulumi:"domain"`
	// Hostname of the server
	Hostname pulumi.StringPtrOutput       `pulumi:"hostname"`
	Ips      BaremetalServerIpArrayOutput `pulumi:"ips"`
	// Name of the server
	Name pulumi.StringOutput `pulumi:"name"`
	// ID or name of the server offer
	Offer pulumi.StringOutput `pulumi:"offer"`
	// ID of the server offer
	OfferId pulumi.StringOutput `pulumi:"offerId"`
	// The organization_id you want to attach the resource to
	OrganizationId pulumi.StringOutput `pulumi:"organizationId"`
	// The base image of the server
	Os pulumi.StringOutput `pulumi:"os"`
	// The base image ID of the server
	OsId pulumi.StringOutput `pulumi:"osId"`
	// The project_id you want to attach the resource to
	ProjectId pulumi.StringOutput `pulumi:"projectId"`
	// Array of SSH key IDs allowed to SSH to the server
	SshKeyIds pulumi.StringArrayOutput `pulumi:"sshKeyIds"`
	// Array of tags to associate with the server
	Tags pulumi.StringArrayOutput `pulumi:"tags"`
	// The zone you want to attach the resource to
	Zone pulumi.StringOutput `pulumi:"zone"`
}

// NewBaremetalServer registers a new resource with the given unique name, arguments, and options.
func NewBaremetalServer(ctx *pulumi.Context,
	name string, args *BaremetalServerArgs, opts ...pulumi.ResourceOption) (*BaremetalServer, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Offer == nil {
		return nil, errors.New("invalid value for required argument 'Offer'")
	}
	if args.Os == nil {
		return nil, errors.New("invalid value for required argument 'Os'")
	}
	if args.SshKeyIds == nil {
		return nil, errors.New("invalid value for required argument 'SshKeyIds'")
	}
	opts = pkgResourceDefaultOpts(opts)
	var resource BaremetalServer
	err := ctx.RegisterResource("scaleway:index/baremetalServer:BaremetalServer", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetBaremetalServer gets an existing BaremetalServer resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetBaremetalServer(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *BaremetalServerState, opts ...pulumi.ResourceOption) (*BaremetalServer, error) {
	var resource BaremetalServer
	err := ctx.ReadResource("scaleway:index/baremetalServer:BaremetalServer", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering BaremetalServer resources.
type baremetalServerState struct {
	// Some description to associate to the server, max 255 characters
	Description *string `pulumi:"description"`
	Domain      *string `pulumi:"domain"`
	// Hostname of the server
	Hostname *string             `pulumi:"hostname"`
	Ips      []BaremetalServerIp `pulumi:"ips"`
	// Name of the server
	Name *string `pulumi:"name"`
	// ID or name of the server offer
	Offer *string `pulumi:"offer"`
	// ID of the server offer
	OfferId *string `pulumi:"offerId"`
	// The organization_id you want to attach the resource to
	OrganizationId *string `pulumi:"organizationId"`
	// The base image of the server
	Os *string `pulumi:"os"`
	// The base image ID of the server
	OsId *string `pulumi:"osId"`
	// The project_id you want to attach the resource to
	ProjectId *string `pulumi:"projectId"`
	// Array of SSH key IDs allowed to SSH to the server
	SshKeyIds []string `pulumi:"sshKeyIds"`
	// Array of tags to associate with the server
	Tags []string `pulumi:"tags"`
	// The zone you want to attach the resource to
	Zone *string `pulumi:"zone"`
}

type BaremetalServerState struct {
	// Some description to associate to the server, max 255 characters
	Description pulumi.StringPtrInput
	Domain      pulumi.StringPtrInput
	// Hostname of the server
	Hostname pulumi.StringPtrInput
	Ips      BaremetalServerIpArrayInput
	// Name of the server
	Name pulumi.StringPtrInput
	// ID or name of the server offer
	Offer pulumi.StringPtrInput
	// ID of the server offer
	OfferId pulumi.StringPtrInput
	// The organization_id you want to attach the resource to
	OrganizationId pulumi.StringPtrInput
	// The base image of the server
	Os pulumi.StringPtrInput
	// The base image ID of the server
	OsId pulumi.StringPtrInput
	// The project_id you want to attach the resource to
	ProjectId pulumi.StringPtrInput
	// Array of SSH key IDs allowed to SSH to the server
	SshKeyIds pulumi.StringArrayInput
	// Array of tags to associate with the server
	Tags pulumi.StringArrayInput
	// The zone you want to attach the resource to
	Zone pulumi.StringPtrInput
}

func (BaremetalServerState) ElementType() reflect.Type {
	return reflect.TypeOf((*baremetalServerState)(nil)).Elem()
}

type baremetalServerArgs struct {
	// Some description to associate to the server, max 255 characters
	Description *string `pulumi:"description"`
	// Hostname of the server
	Hostname *string `pulumi:"hostname"`
	// Name of the server
	Name *string `pulumi:"name"`
	// ID or name of the server offer
	Offer string `pulumi:"offer"`
	// The base image of the server
	Os string `pulumi:"os"`
	// The project_id you want to attach the resource to
	ProjectId *string `pulumi:"projectId"`
	// Array of SSH key IDs allowed to SSH to the server
	SshKeyIds []string `pulumi:"sshKeyIds"`
	// Array of tags to associate with the server
	Tags []string `pulumi:"tags"`
	// The zone you want to attach the resource to
	Zone *string `pulumi:"zone"`
}

// The set of arguments for constructing a BaremetalServer resource.
type BaremetalServerArgs struct {
	// Some description to associate to the server, max 255 characters
	Description pulumi.StringPtrInput
	// Hostname of the server
	Hostname pulumi.StringPtrInput
	// Name of the server
	Name pulumi.StringPtrInput
	// ID or name of the server offer
	Offer pulumi.StringInput
	// The base image of the server
	Os pulumi.StringInput
	// The project_id you want to attach the resource to
	ProjectId pulumi.StringPtrInput
	// Array of SSH key IDs allowed to SSH to the server
	SshKeyIds pulumi.StringArrayInput
	// Array of tags to associate with the server
	Tags pulumi.StringArrayInput
	// The zone you want to attach the resource to
	Zone pulumi.StringPtrInput
}

func (BaremetalServerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*baremetalServerArgs)(nil)).Elem()
}

type BaremetalServerInput interface {
	pulumi.Input

	ToBaremetalServerOutput() BaremetalServerOutput
	ToBaremetalServerOutputWithContext(ctx context.Context) BaremetalServerOutput
}

func (*BaremetalServer) ElementType() reflect.Type {
	return reflect.TypeOf((**BaremetalServer)(nil)).Elem()
}

func (i *BaremetalServer) ToBaremetalServerOutput() BaremetalServerOutput {
	return i.ToBaremetalServerOutputWithContext(context.Background())
}

func (i *BaremetalServer) ToBaremetalServerOutputWithContext(ctx context.Context) BaremetalServerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BaremetalServerOutput)
}

// BaremetalServerArrayInput is an input type that accepts BaremetalServerArray and BaremetalServerArrayOutput values.
// You can construct a concrete instance of `BaremetalServerArrayInput` via:
//
//	BaremetalServerArray{ BaremetalServerArgs{...} }
type BaremetalServerArrayInput interface {
	pulumi.Input

	ToBaremetalServerArrayOutput() BaremetalServerArrayOutput
	ToBaremetalServerArrayOutputWithContext(context.Context) BaremetalServerArrayOutput
}

type BaremetalServerArray []BaremetalServerInput

func (BaremetalServerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*BaremetalServer)(nil)).Elem()
}

func (i BaremetalServerArray) ToBaremetalServerArrayOutput() BaremetalServerArrayOutput {
	return i.ToBaremetalServerArrayOutputWithContext(context.Background())
}

func (i BaremetalServerArray) ToBaremetalServerArrayOutputWithContext(ctx context.Context) BaremetalServerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BaremetalServerArrayOutput)
}

// BaremetalServerMapInput is an input type that accepts BaremetalServerMap and BaremetalServerMapOutput values.
// You can construct a concrete instance of `BaremetalServerMapInput` via:
//
//	BaremetalServerMap{ "key": BaremetalServerArgs{...} }
type BaremetalServerMapInput interface {
	pulumi.Input

	ToBaremetalServerMapOutput() BaremetalServerMapOutput
	ToBaremetalServerMapOutputWithContext(context.Context) BaremetalServerMapOutput
}

type BaremetalServerMap map[string]BaremetalServerInput

func (BaremetalServerMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*BaremetalServer)(nil)).Elem()
}

func (i BaremetalServerMap) ToBaremetalServerMapOutput() BaremetalServerMapOutput {
	return i.ToBaremetalServerMapOutputWithContext(context.Background())
}

func (i BaremetalServerMap) ToBaremetalServerMapOutputWithContext(ctx context.Context) BaremetalServerMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BaremetalServerMapOutput)
}

type BaremetalServerOutput struct{ *pulumi.OutputState }

func (BaremetalServerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BaremetalServer)(nil)).Elem()
}

func (o BaremetalServerOutput) ToBaremetalServerOutput() BaremetalServerOutput {
	return o
}

func (o BaremetalServerOutput) ToBaremetalServerOutputWithContext(ctx context.Context) BaremetalServerOutput {
	return o
}

// Some description to associate to the server, max 255 characters
func (o BaremetalServerOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BaremetalServer) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

func (o BaremetalServerOutput) Domain() pulumi.StringOutput {
	return o.ApplyT(func(v *BaremetalServer) pulumi.StringOutput { return v.Domain }).(pulumi.StringOutput)
}

// Hostname of the server
func (o BaremetalServerOutput) Hostname() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BaremetalServer) pulumi.StringPtrOutput { return v.Hostname }).(pulumi.StringPtrOutput)
}

func (o BaremetalServerOutput) Ips() BaremetalServerIpArrayOutput {
	return o.ApplyT(func(v *BaremetalServer) BaremetalServerIpArrayOutput { return v.Ips }).(BaremetalServerIpArrayOutput)
}

// Name of the server
func (o BaremetalServerOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *BaremetalServer) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// ID or name of the server offer
func (o BaremetalServerOutput) Offer() pulumi.StringOutput {
	return o.ApplyT(func(v *BaremetalServer) pulumi.StringOutput { return v.Offer }).(pulumi.StringOutput)
}

// ID of the server offer
func (o BaremetalServerOutput) OfferId() pulumi.StringOutput {
	return o.ApplyT(func(v *BaremetalServer) pulumi.StringOutput { return v.OfferId }).(pulumi.StringOutput)
}

// The organization_id you want to attach the resource to
func (o BaremetalServerOutput) OrganizationId() pulumi.StringOutput {
	return o.ApplyT(func(v *BaremetalServer) pulumi.StringOutput { return v.OrganizationId }).(pulumi.StringOutput)
}

// The base image of the server
func (o BaremetalServerOutput) Os() pulumi.StringOutput {
	return o.ApplyT(func(v *BaremetalServer) pulumi.StringOutput { return v.Os }).(pulumi.StringOutput)
}

// The base image ID of the server
func (o BaremetalServerOutput) OsId() pulumi.StringOutput {
	return o.ApplyT(func(v *BaremetalServer) pulumi.StringOutput { return v.OsId }).(pulumi.StringOutput)
}

// The project_id you want to attach the resource to
func (o BaremetalServerOutput) ProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v *BaremetalServer) pulumi.StringOutput { return v.ProjectId }).(pulumi.StringOutput)
}

// Array of SSH key IDs allowed to SSH to the server
func (o BaremetalServerOutput) SshKeyIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *BaremetalServer) pulumi.StringArrayOutput { return v.SshKeyIds }).(pulumi.StringArrayOutput)
}

// Array of tags to associate with the server
func (o BaremetalServerOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *BaremetalServer) pulumi.StringArrayOutput { return v.Tags }).(pulumi.StringArrayOutput)
}

// The zone you want to attach the resource to
func (o BaremetalServerOutput) Zone() pulumi.StringOutput {
	return o.ApplyT(func(v *BaremetalServer) pulumi.StringOutput { return v.Zone }).(pulumi.StringOutput)
}

type BaremetalServerArrayOutput struct{ *pulumi.OutputState }

func (BaremetalServerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*BaremetalServer)(nil)).Elem()
}

func (o BaremetalServerArrayOutput) ToBaremetalServerArrayOutput() BaremetalServerArrayOutput {
	return o
}

func (o BaremetalServerArrayOutput) ToBaremetalServerArrayOutputWithContext(ctx context.Context) BaremetalServerArrayOutput {
	return o
}

func (o BaremetalServerArrayOutput) Index(i pulumi.IntInput) BaremetalServerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *BaremetalServer {
		return vs[0].([]*BaremetalServer)[vs[1].(int)]
	}).(BaremetalServerOutput)
}

type BaremetalServerMapOutput struct{ *pulumi.OutputState }

func (BaremetalServerMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*BaremetalServer)(nil)).Elem()
}

func (o BaremetalServerMapOutput) ToBaremetalServerMapOutput() BaremetalServerMapOutput {
	return o
}

func (o BaremetalServerMapOutput) ToBaremetalServerMapOutputWithContext(ctx context.Context) BaremetalServerMapOutput {
	return o
}

func (o BaremetalServerMapOutput) MapIndex(k pulumi.StringInput) BaremetalServerOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *BaremetalServer {
		return vs[0].(map[string]*BaremetalServer)[vs[1].(string)]
	}).(BaremetalServerOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*BaremetalServerInput)(nil)).Elem(), &BaremetalServer{})
	pulumi.RegisterInputType(reflect.TypeOf((*BaremetalServerArrayInput)(nil)).Elem(), BaremetalServerArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*BaremetalServerMapInput)(nil)).Elem(), BaremetalServerMap{})
	pulumi.RegisterOutputType(BaremetalServerOutput{})
	pulumi.RegisterOutputType(BaremetalServerArrayOutput{})
	pulumi.RegisterOutputType(BaremetalServerMapOutput{})
}
