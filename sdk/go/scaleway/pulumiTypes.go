// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package scaleway

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type BaremetalServerIp struct {
	// The address of the IP.
	Address *string `pulumi:"address"`
	// The ID of the IP.
	Id *string `pulumi:"id"`
	// The reverse of the IP.
	Reverse *string `pulumi:"reverse"`
	Version *string `pulumi:"version"`
}

type BaremetalServerIpOutput struct{ *pulumi.OutputState }

func (BaremetalServerIpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BaremetalServerIp)(nil)).Elem()
}

func (o BaremetalServerIpOutput) ToBaremetalServerIpOutput() BaremetalServerIpOutput {
	return o
}

func (o BaremetalServerIpOutput) ToBaremetalServerIpOutputWithContext(ctx context.Context) BaremetalServerIpOutput {
	return o
}

// The address of the IP.
func (o BaremetalServerIpOutput) Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BaremetalServerIp) *string { return v.Address }).(pulumi.StringPtrOutput)
}

// The ID of the IP.
func (o BaremetalServerIpOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BaremetalServerIp) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The reverse of the IP.
func (o BaremetalServerIpOutput) Reverse() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BaremetalServerIp) *string { return v.Reverse }).(pulumi.StringPtrOutput)
}

func (o BaremetalServerIpOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BaremetalServerIp) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type BaremetalServerIpArrayOutput struct{ *pulumi.OutputState }

func (BaremetalServerIpArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BaremetalServerIp)(nil)).Elem()
}

func (o BaremetalServerIpArrayOutput) ToBaremetalServerIpArrayOutput() BaremetalServerIpArrayOutput {
	return o
}

func (o BaremetalServerIpArrayOutput) ToBaremetalServerIpArrayOutputWithContext(ctx context.Context) BaremetalServerIpArrayOutput {
	return o
}

func (o BaremetalServerIpArrayOutput) Index(i pulumi.IntInput) BaremetalServerIpOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BaremetalServerIp {
		return vs[0].([]BaremetalServerIp)[vs[1].(int)]
	}).(BaremetalServerIpOutput)
}

type DatabaseAclAclRule struct {
	// A simple text describing this rule
	Description *string `pulumi:"description"`
	// The ip range to whitelist in [CIDR notation](https://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing#CIDR_notation)
	Ip string `pulumi:"ip"`
}

// DatabaseAclAclRuleInput is an input type that accepts DatabaseAclAclRuleArgs and DatabaseAclAclRuleOutput values.
// You can construct a concrete instance of `DatabaseAclAclRuleInput` via:
//
//          DatabaseAclAclRuleArgs{...}
type DatabaseAclAclRuleInput interface {
	pulumi.Input

	ToDatabaseAclAclRuleOutput() DatabaseAclAclRuleOutput
	ToDatabaseAclAclRuleOutputWithContext(context.Context) DatabaseAclAclRuleOutput
}

type DatabaseAclAclRuleArgs struct {
	// A simple text describing this rule
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The ip range to whitelist in [CIDR notation](https://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing#CIDR_notation)
	Ip pulumi.StringInput `pulumi:"ip"`
}

func (DatabaseAclAclRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseAclAclRule)(nil)).Elem()
}

func (i DatabaseAclAclRuleArgs) ToDatabaseAclAclRuleOutput() DatabaseAclAclRuleOutput {
	return i.ToDatabaseAclAclRuleOutputWithContext(context.Background())
}

func (i DatabaseAclAclRuleArgs) ToDatabaseAclAclRuleOutputWithContext(ctx context.Context) DatabaseAclAclRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseAclAclRuleOutput)
}

// DatabaseAclAclRuleArrayInput is an input type that accepts DatabaseAclAclRuleArray and DatabaseAclAclRuleArrayOutput values.
// You can construct a concrete instance of `DatabaseAclAclRuleArrayInput` via:
//
//          DatabaseAclAclRuleArray{ DatabaseAclAclRuleArgs{...} }
type DatabaseAclAclRuleArrayInput interface {
	pulumi.Input

	ToDatabaseAclAclRuleArrayOutput() DatabaseAclAclRuleArrayOutput
	ToDatabaseAclAclRuleArrayOutputWithContext(context.Context) DatabaseAclAclRuleArrayOutput
}

type DatabaseAclAclRuleArray []DatabaseAclAclRuleInput

func (DatabaseAclAclRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatabaseAclAclRule)(nil)).Elem()
}

func (i DatabaseAclAclRuleArray) ToDatabaseAclAclRuleArrayOutput() DatabaseAclAclRuleArrayOutput {
	return i.ToDatabaseAclAclRuleArrayOutputWithContext(context.Background())
}

func (i DatabaseAclAclRuleArray) ToDatabaseAclAclRuleArrayOutputWithContext(ctx context.Context) DatabaseAclAclRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseAclAclRuleArrayOutput)
}

type DatabaseAclAclRuleOutput struct{ *pulumi.OutputState }

func (DatabaseAclAclRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseAclAclRule)(nil)).Elem()
}

func (o DatabaseAclAclRuleOutput) ToDatabaseAclAclRuleOutput() DatabaseAclAclRuleOutput {
	return o
}

func (o DatabaseAclAclRuleOutput) ToDatabaseAclAclRuleOutputWithContext(ctx context.Context) DatabaseAclAclRuleOutput {
	return o
}

// A simple text describing this rule
func (o DatabaseAclAclRuleOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseAclAclRule) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The ip range to whitelist in [CIDR notation](https://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing#CIDR_notation)
func (o DatabaseAclAclRuleOutput) Ip() pulumi.StringOutput {
	return o.ApplyT(func(v DatabaseAclAclRule) string { return v.Ip }).(pulumi.StringOutput)
}

type DatabaseAclAclRuleArrayOutput struct{ *pulumi.OutputState }

func (DatabaseAclAclRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatabaseAclAclRule)(nil)).Elem()
}

func (o DatabaseAclAclRuleArrayOutput) ToDatabaseAclAclRuleArrayOutput() DatabaseAclAclRuleArrayOutput {
	return o
}

func (o DatabaseAclAclRuleArrayOutput) ToDatabaseAclAclRuleArrayOutputWithContext(ctx context.Context) DatabaseAclAclRuleArrayOutput {
	return o
}

func (o DatabaseAclAclRuleArrayOutput) Index(i pulumi.IntInput) DatabaseAclAclRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DatabaseAclAclRule {
		return vs[0].([]DatabaseAclAclRule)[vs[1].(int)]
	}).(DatabaseAclAclRuleOutput)
}

type DatabaseInstanceLoadBalancer struct {
	// The ID of the endpoint of the private network.
	EndpointId *string `pulumi:"endpointId"`
	// Name of the endpoint.
	Hostname *string `pulumi:"hostname"`
	// IP of the endpoint.
	Ip *string `pulumi:"ip"`
	// The name of the Database Instance.
	Name *string `pulumi:"name"`
	// Port of the endpoint.
	Port *int `pulumi:"port"`
}

type DatabaseInstanceLoadBalancerOutput struct{ *pulumi.OutputState }

func (DatabaseInstanceLoadBalancerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseInstanceLoadBalancer)(nil)).Elem()
}

func (o DatabaseInstanceLoadBalancerOutput) ToDatabaseInstanceLoadBalancerOutput() DatabaseInstanceLoadBalancerOutput {
	return o
}

func (o DatabaseInstanceLoadBalancerOutput) ToDatabaseInstanceLoadBalancerOutputWithContext(ctx context.Context) DatabaseInstanceLoadBalancerOutput {
	return o
}

// The ID of the endpoint of the private network.
func (o DatabaseInstanceLoadBalancerOutput) EndpointId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseInstanceLoadBalancer) *string { return v.EndpointId }).(pulumi.StringPtrOutput)
}

// Name of the endpoint.
func (o DatabaseInstanceLoadBalancerOutput) Hostname() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseInstanceLoadBalancer) *string { return v.Hostname }).(pulumi.StringPtrOutput)
}

// IP of the endpoint.
func (o DatabaseInstanceLoadBalancerOutput) Ip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseInstanceLoadBalancer) *string { return v.Ip }).(pulumi.StringPtrOutput)
}

// The name of the Database Instance.
func (o DatabaseInstanceLoadBalancerOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseInstanceLoadBalancer) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Port of the endpoint.
func (o DatabaseInstanceLoadBalancerOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DatabaseInstanceLoadBalancer) *int { return v.Port }).(pulumi.IntPtrOutput)
}

type DatabaseInstanceLoadBalancerArrayOutput struct{ *pulumi.OutputState }

func (DatabaseInstanceLoadBalancerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatabaseInstanceLoadBalancer)(nil)).Elem()
}

func (o DatabaseInstanceLoadBalancerArrayOutput) ToDatabaseInstanceLoadBalancerArrayOutput() DatabaseInstanceLoadBalancerArrayOutput {
	return o
}

func (o DatabaseInstanceLoadBalancerArrayOutput) ToDatabaseInstanceLoadBalancerArrayOutputWithContext(ctx context.Context) DatabaseInstanceLoadBalancerArrayOutput {
	return o
}

func (o DatabaseInstanceLoadBalancerArrayOutput) Index(i pulumi.IntInput) DatabaseInstanceLoadBalancerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DatabaseInstanceLoadBalancer {
		return vs[0].([]DatabaseInstanceLoadBalancer)[vs[1].(int)]
	}).(DatabaseInstanceLoadBalancerOutput)
}

type DatabaseInstancePrivateNetwork struct {
	// The ID of the endpoint of the private network.
	EndpointId *string `pulumi:"endpointId"`
	// Name of the endpoint.
	Hostname *string `pulumi:"hostname"`
	// IP of the endpoint.
	Ip    *string `pulumi:"ip"`
	IpNet string  `pulumi:"ipNet"`
	// The name of the Database Instance.
	Name *string `pulumi:"name"`
	PnId string  `pulumi:"pnId"`
	// Port of the endpoint.
	Port *int    `pulumi:"port"`
	Zone *string `pulumi:"zone"`
}

// DatabaseInstancePrivateNetworkInput is an input type that accepts DatabaseInstancePrivateNetworkArgs and DatabaseInstancePrivateNetworkOutput values.
// You can construct a concrete instance of `DatabaseInstancePrivateNetworkInput` via:
//
//          DatabaseInstancePrivateNetworkArgs{...}
type DatabaseInstancePrivateNetworkInput interface {
	pulumi.Input

	ToDatabaseInstancePrivateNetworkOutput() DatabaseInstancePrivateNetworkOutput
	ToDatabaseInstancePrivateNetworkOutputWithContext(context.Context) DatabaseInstancePrivateNetworkOutput
}

type DatabaseInstancePrivateNetworkArgs struct {
	// The ID of the endpoint of the private network.
	EndpointId pulumi.StringPtrInput `pulumi:"endpointId"`
	// Name of the endpoint.
	Hostname pulumi.StringPtrInput `pulumi:"hostname"`
	// IP of the endpoint.
	Ip    pulumi.StringPtrInput `pulumi:"ip"`
	IpNet pulumi.StringInput    `pulumi:"ipNet"`
	// The name of the Database Instance.
	Name pulumi.StringPtrInput `pulumi:"name"`
	PnId pulumi.StringInput    `pulumi:"pnId"`
	// Port of the endpoint.
	Port pulumi.IntPtrInput    `pulumi:"port"`
	Zone pulumi.StringPtrInput `pulumi:"zone"`
}

func (DatabaseInstancePrivateNetworkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseInstancePrivateNetwork)(nil)).Elem()
}

func (i DatabaseInstancePrivateNetworkArgs) ToDatabaseInstancePrivateNetworkOutput() DatabaseInstancePrivateNetworkOutput {
	return i.ToDatabaseInstancePrivateNetworkOutputWithContext(context.Background())
}

func (i DatabaseInstancePrivateNetworkArgs) ToDatabaseInstancePrivateNetworkOutputWithContext(ctx context.Context) DatabaseInstancePrivateNetworkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseInstancePrivateNetworkOutput)
}

func (i DatabaseInstancePrivateNetworkArgs) ToDatabaseInstancePrivateNetworkPtrOutput() DatabaseInstancePrivateNetworkPtrOutput {
	return i.ToDatabaseInstancePrivateNetworkPtrOutputWithContext(context.Background())
}

func (i DatabaseInstancePrivateNetworkArgs) ToDatabaseInstancePrivateNetworkPtrOutputWithContext(ctx context.Context) DatabaseInstancePrivateNetworkPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseInstancePrivateNetworkOutput).ToDatabaseInstancePrivateNetworkPtrOutputWithContext(ctx)
}

// DatabaseInstancePrivateNetworkPtrInput is an input type that accepts DatabaseInstancePrivateNetworkArgs, DatabaseInstancePrivateNetworkPtr and DatabaseInstancePrivateNetworkPtrOutput values.
// You can construct a concrete instance of `DatabaseInstancePrivateNetworkPtrInput` via:
//
//          DatabaseInstancePrivateNetworkArgs{...}
//
//  or:
//
//          nil
type DatabaseInstancePrivateNetworkPtrInput interface {
	pulumi.Input

	ToDatabaseInstancePrivateNetworkPtrOutput() DatabaseInstancePrivateNetworkPtrOutput
	ToDatabaseInstancePrivateNetworkPtrOutputWithContext(context.Context) DatabaseInstancePrivateNetworkPtrOutput
}

type databaseInstancePrivateNetworkPtrType DatabaseInstancePrivateNetworkArgs

func DatabaseInstancePrivateNetworkPtr(v *DatabaseInstancePrivateNetworkArgs) DatabaseInstancePrivateNetworkPtrInput {
	return (*databaseInstancePrivateNetworkPtrType)(v)
}

func (*databaseInstancePrivateNetworkPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DatabaseInstancePrivateNetwork)(nil)).Elem()
}

func (i *databaseInstancePrivateNetworkPtrType) ToDatabaseInstancePrivateNetworkPtrOutput() DatabaseInstancePrivateNetworkPtrOutput {
	return i.ToDatabaseInstancePrivateNetworkPtrOutputWithContext(context.Background())
}

func (i *databaseInstancePrivateNetworkPtrType) ToDatabaseInstancePrivateNetworkPtrOutputWithContext(ctx context.Context) DatabaseInstancePrivateNetworkPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseInstancePrivateNetworkPtrOutput)
}

type DatabaseInstancePrivateNetworkOutput struct{ *pulumi.OutputState }

func (DatabaseInstancePrivateNetworkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseInstancePrivateNetwork)(nil)).Elem()
}

func (o DatabaseInstancePrivateNetworkOutput) ToDatabaseInstancePrivateNetworkOutput() DatabaseInstancePrivateNetworkOutput {
	return o
}

func (o DatabaseInstancePrivateNetworkOutput) ToDatabaseInstancePrivateNetworkOutputWithContext(ctx context.Context) DatabaseInstancePrivateNetworkOutput {
	return o
}

func (o DatabaseInstancePrivateNetworkOutput) ToDatabaseInstancePrivateNetworkPtrOutput() DatabaseInstancePrivateNetworkPtrOutput {
	return o.ToDatabaseInstancePrivateNetworkPtrOutputWithContext(context.Background())
}

func (o DatabaseInstancePrivateNetworkOutput) ToDatabaseInstancePrivateNetworkPtrOutputWithContext(ctx context.Context) DatabaseInstancePrivateNetworkPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DatabaseInstancePrivateNetwork) *DatabaseInstancePrivateNetwork {
		return &v
	}).(DatabaseInstancePrivateNetworkPtrOutput)
}

// The ID of the endpoint of the private network.
func (o DatabaseInstancePrivateNetworkOutput) EndpointId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseInstancePrivateNetwork) *string { return v.EndpointId }).(pulumi.StringPtrOutput)
}

// Name of the endpoint.
func (o DatabaseInstancePrivateNetworkOutput) Hostname() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseInstancePrivateNetwork) *string { return v.Hostname }).(pulumi.StringPtrOutput)
}

// IP of the endpoint.
func (o DatabaseInstancePrivateNetworkOutput) Ip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseInstancePrivateNetwork) *string { return v.Ip }).(pulumi.StringPtrOutput)
}

func (o DatabaseInstancePrivateNetworkOutput) IpNet() pulumi.StringOutput {
	return o.ApplyT(func(v DatabaseInstancePrivateNetwork) string { return v.IpNet }).(pulumi.StringOutput)
}

// The name of the Database Instance.
func (o DatabaseInstancePrivateNetworkOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseInstancePrivateNetwork) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o DatabaseInstancePrivateNetworkOutput) PnId() pulumi.StringOutput {
	return o.ApplyT(func(v DatabaseInstancePrivateNetwork) string { return v.PnId }).(pulumi.StringOutput)
}

// Port of the endpoint.
func (o DatabaseInstancePrivateNetworkOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DatabaseInstancePrivateNetwork) *int { return v.Port }).(pulumi.IntPtrOutput)
}

func (o DatabaseInstancePrivateNetworkOutput) Zone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseInstancePrivateNetwork) *string { return v.Zone }).(pulumi.StringPtrOutput)
}

type DatabaseInstancePrivateNetworkPtrOutput struct{ *pulumi.OutputState }

func (DatabaseInstancePrivateNetworkPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatabaseInstancePrivateNetwork)(nil)).Elem()
}

func (o DatabaseInstancePrivateNetworkPtrOutput) ToDatabaseInstancePrivateNetworkPtrOutput() DatabaseInstancePrivateNetworkPtrOutput {
	return o
}

func (o DatabaseInstancePrivateNetworkPtrOutput) ToDatabaseInstancePrivateNetworkPtrOutputWithContext(ctx context.Context) DatabaseInstancePrivateNetworkPtrOutput {
	return o
}

func (o DatabaseInstancePrivateNetworkPtrOutput) Elem() DatabaseInstancePrivateNetworkOutput {
	return o.ApplyT(func(v *DatabaseInstancePrivateNetwork) DatabaseInstancePrivateNetwork {
		if v != nil {
			return *v
		}
		var ret DatabaseInstancePrivateNetwork
		return ret
	}).(DatabaseInstancePrivateNetworkOutput)
}

// The ID of the endpoint of the private network.
func (o DatabaseInstancePrivateNetworkPtrOutput) EndpointId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatabaseInstancePrivateNetwork) *string {
		if v == nil {
			return nil
		}
		return v.EndpointId
	}).(pulumi.StringPtrOutput)
}

// Name of the endpoint.
func (o DatabaseInstancePrivateNetworkPtrOutput) Hostname() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatabaseInstancePrivateNetwork) *string {
		if v == nil {
			return nil
		}
		return v.Hostname
	}).(pulumi.StringPtrOutput)
}

// IP of the endpoint.
func (o DatabaseInstancePrivateNetworkPtrOutput) Ip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatabaseInstancePrivateNetwork) *string {
		if v == nil {
			return nil
		}
		return v.Ip
	}).(pulumi.StringPtrOutput)
}

func (o DatabaseInstancePrivateNetworkPtrOutput) IpNet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatabaseInstancePrivateNetwork) *string {
		if v == nil {
			return nil
		}
		return &v.IpNet
	}).(pulumi.StringPtrOutput)
}

// The name of the Database Instance.
func (o DatabaseInstancePrivateNetworkPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatabaseInstancePrivateNetwork) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

func (o DatabaseInstancePrivateNetworkPtrOutput) PnId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatabaseInstancePrivateNetwork) *string {
		if v == nil {
			return nil
		}
		return &v.PnId
	}).(pulumi.StringPtrOutput)
}

// Port of the endpoint.
func (o DatabaseInstancePrivateNetworkPtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DatabaseInstancePrivateNetwork) *int {
		if v == nil {
			return nil
		}
		return v.Port
	}).(pulumi.IntPtrOutput)
}

func (o DatabaseInstancePrivateNetworkPtrOutput) Zone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatabaseInstancePrivateNetwork) *string {
		if v == nil {
			return nil
		}
		return v.Zone
	}).(pulumi.StringPtrOutput)
}

type DatabaseInstanceReadReplica struct {
	// IP of the endpoint.
	Ip *string `pulumi:"ip"`
	// The name of the Database Instance.
	Name *string `pulumi:"name"`
	// Port of the endpoint.
	Port *int `pulumi:"port"`
}

type DatabaseInstanceReadReplicaOutput struct{ *pulumi.OutputState }

func (DatabaseInstanceReadReplicaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseInstanceReadReplica)(nil)).Elem()
}

func (o DatabaseInstanceReadReplicaOutput) ToDatabaseInstanceReadReplicaOutput() DatabaseInstanceReadReplicaOutput {
	return o
}

func (o DatabaseInstanceReadReplicaOutput) ToDatabaseInstanceReadReplicaOutputWithContext(ctx context.Context) DatabaseInstanceReadReplicaOutput {
	return o
}

// IP of the endpoint.
func (o DatabaseInstanceReadReplicaOutput) Ip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseInstanceReadReplica) *string { return v.Ip }).(pulumi.StringPtrOutput)
}

// The name of the Database Instance.
func (o DatabaseInstanceReadReplicaOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseInstanceReadReplica) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Port of the endpoint.
func (o DatabaseInstanceReadReplicaOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DatabaseInstanceReadReplica) *int { return v.Port }).(pulumi.IntPtrOutput)
}

type DatabaseInstanceReadReplicaArrayOutput struct{ *pulumi.OutputState }

func (DatabaseInstanceReadReplicaArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatabaseInstanceReadReplica)(nil)).Elem()
}

func (o DatabaseInstanceReadReplicaArrayOutput) ToDatabaseInstanceReadReplicaArrayOutput() DatabaseInstanceReadReplicaArrayOutput {
	return o
}

func (o DatabaseInstanceReadReplicaArrayOutput) ToDatabaseInstanceReadReplicaArrayOutputWithContext(ctx context.Context) DatabaseInstanceReadReplicaArrayOutput {
	return o
}

func (o DatabaseInstanceReadReplicaArrayOutput) Index(i pulumi.IntInput) DatabaseInstanceReadReplicaOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DatabaseInstanceReadReplica {
		return vs[0].([]DatabaseInstanceReadReplica)[vs[1].(int)]
	}).(DatabaseInstanceReadReplicaOutput)
}

type DomainRecordGeoIp struct {
	// The list of matches. *(Can be more than 1)*
	Matches []DomainRecordGeoIpMatch `pulumi:"matches"`
}

// DomainRecordGeoIpInput is an input type that accepts DomainRecordGeoIpArgs and DomainRecordGeoIpOutput values.
// You can construct a concrete instance of `DomainRecordGeoIpInput` via:
//
//          DomainRecordGeoIpArgs{...}
type DomainRecordGeoIpInput interface {
	pulumi.Input

	ToDomainRecordGeoIpOutput() DomainRecordGeoIpOutput
	ToDomainRecordGeoIpOutputWithContext(context.Context) DomainRecordGeoIpOutput
}

type DomainRecordGeoIpArgs struct {
	// The list of matches. *(Can be more than 1)*
	Matches DomainRecordGeoIpMatchArrayInput `pulumi:"matches"`
}

func (DomainRecordGeoIpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainRecordGeoIp)(nil)).Elem()
}

func (i DomainRecordGeoIpArgs) ToDomainRecordGeoIpOutput() DomainRecordGeoIpOutput {
	return i.ToDomainRecordGeoIpOutputWithContext(context.Background())
}

func (i DomainRecordGeoIpArgs) ToDomainRecordGeoIpOutputWithContext(ctx context.Context) DomainRecordGeoIpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainRecordGeoIpOutput)
}

func (i DomainRecordGeoIpArgs) ToDomainRecordGeoIpPtrOutput() DomainRecordGeoIpPtrOutput {
	return i.ToDomainRecordGeoIpPtrOutputWithContext(context.Background())
}

func (i DomainRecordGeoIpArgs) ToDomainRecordGeoIpPtrOutputWithContext(ctx context.Context) DomainRecordGeoIpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainRecordGeoIpOutput).ToDomainRecordGeoIpPtrOutputWithContext(ctx)
}

// DomainRecordGeoIpPtrInput is an input type that accepts DomainRecordGeoIpArgs, DomainRecordGeoIpPtr and DomainRecordGeoIpPtrOutput values.
// You can construct a concrete instance of `DomainRecordGeoIpPtrInput` via:
//
//          DomainRecordGeoIpArgs{...}
//
//  or:
//
//          nil
type DomainRecordGeoIpPtrInput interface {
	pulumi.Input

	ToDomainRecordGeoIpPtrOutput() DomainRecordGeoIpPtrOutput
	ToDomainRecordGeoIpPtrOutputWithContext(context.Context) DomainRecordGeoIpPtrOutput
}

type domainRecordGeoIpPtrType DomainRecordGeoIpArgs

func DomainRecordGeoIpPtr(v *DomainRecordGeoIpArgs) DomainRecordGeoIpPtrInput {
	return (*domainRecordGeoIpPtrType)(v)
}

func (*domainRecordGeoIpPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainRecordGeoIp)(nil)).Elem()
}

func (i *domainRecordGeoIpPtrType) ToDomainRecordGeoIpPtrOutput() DomainRecordGeoIpPtrOutput {
	return i.ToDomainRecordGeoIpPtrOutputWithContext(context.Background())
}

func (i *domainRecordGeoIpPtrType) ToDomainRecordGeoIpPtrOutputWithContext(ctx context.Context) DomainRecordGeoIpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainRecordGeoIpPtrOutput)
}

type DomainRecordGeoIpOutput struct{ *pulumi.OutputState }

func (DomainRecordGeoIpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainRecordGeoIp)(nil)).Elem()
}

func (o DomainRecordGeoIpOutput) ToDomainRecordGeoIpOutput() DomainRecordGeoIpOutput {
	return o
}

func (o DomainRecordGeoIpOutput) ToDomainRecordGeoIpOutputWithContext(ctx context.Context) DomainRecordGeoIpOutput {
	return o
}

func (o DomainRecordGeoIpOutput) ToDomainRecordGeoIpPtrOutput() DomainRecordGeoIpPtrOutput {
	return o.ToDomainRecordGeoIpPtrOutputWithContext(context.Background())
}

func (o DomainRecordGeoIpOutput) ToDomainRecordGeoIpPtrOutputWithContext(ctx context.Context) DomainRecordGeoIpPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DomainRecordGeoIp) *DomainRecordGeoIp {
		return &v
	}).(DomainRecordGeoIpPtrOutput)
}

// The list of matches. *(Can be more than 1)*
func (o DomainRecordGeoIpOutput) Matches() DomainRecordGeoIpMatchArrayOutput {
	return o.ApplyT(func(v DomainRecordGeoIp) []DomainRecordGeoIpMatch { return v.Matches }).(DomainRecordGeoIpMatchArrayOutput)
}

type DomainRecordGeoIpPtrOutput struct{ *pulumi.OutputState }

func (DomainRecordGeoIpPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainRecordGeoIp)(nil)).Elem()
}

func (o DomainRecordGeoIpPtrOutput) ToDomainRecordGeoIpPtrOutput() DomainRecordGeoIpPtrOutput {
	return o
}

func (o DomainRecordGeoIpPtrOutput) ToDomainRecordGeoIpPtrOutputWithContext(ctx context.Context) DomainRecordGeoIpPtrOutput {
	return o
}

func (o DomainRecordGeoIpPtrOutput) Elem() DomainRecordGeoIpOutput {
	return o.ApplyT(func(v *DomainRecordGeoIp) DomainRecordGeoIp {
		if v != nil {
			return *v
		}
		var ret DomainRecordGeoIp
		return ret
	}).(DomainRecordGeoIpOutput)
}

// The list of matches. *(Can be more than 1)*
func (o DomainRecordGeoIpPtrOutput) Matches() DomainRecordGeoIpMatchArrayOutput {
	return o.ApplyT(func(v *DomainRecordGeoIp) []DomainRecordGeoIpMatch {
		if v == nil {
			return nil
		}
		return v.Matches
	}).(DomainRecordGeoIpMatchArrayOutput)
}

type DomainRecordGeoIpMatch struct {
	// List of continents (eg: `EU` for Europe, `NA` for North America, `AS` for Asia...). [List of all continents code](https://api.scaleway.com/domain-private/v2beta1/continents)
	Continents []string `pulumi:"continents"`
	// List of countries (eg: `FR` for France, `US` for the United States, `GB` for Great Britain...). [List of all countries code](https://api.scaleway.com/domain-private/v2beta1/countries)
	Countries []string `pulumi:"countries"`
	// The data of the view record
	Data string `pulumi:"data"`
}

// DomainRecordGeoIpMatchInput is an input type that accepts DomainRecordGeoIpMatchArgs and DomainRecordGeoIpMatchOutput values.
// You can construct a concrete instance of `DomainRecordGeoIpMatchInput` via:
//
//          DomainRecordGeoIpMatchArgs{...}
type DomainRecordGeoIpMatchInput interface {
	pulumi.Input

	ToDomainRecordGeoIpMatchOutput() DomainRecordGeoIpMatchOutput
	ToDomainRecordGeoIpMatchOutputWithContext(context.Context) DomainRecordGeoIpMatchOutput
}

type DomainRecordGeoIpMatchArgs struct {
	// List of continents (eg: `EU` for Europe, `NA` for North America, `AS` for Asia...). [List of all continents code](https://api.scaleway.com/domain-private/v2beta1/continents)
	Continents pulumi.StringArrayInput `pulumi:"continents"`
	// List of countries (eg: `FR` for France, `US` for the United States, `GB` for Great Britain...). [List of all countries code](https://api.scaleway.com/domain-private/v2beta1/countries)
	Countries pulumi.StringArrayInput `pulumi:"countries"`
	// The data of the view record
	Data pulumi.StringInput `pulumi:"data"`
}

func (DomainRecordGeoIpMatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainRecordGeoIpMatch)(nil)).Elem()
}

func (i DomainRecordGeoIpMatchArgs) ToDomainRecordGeoIpMatchOutput() DomainRecordGeoIpMatchOutput {
	return i.ToDomainRecordGeoIpMatchOutputWithContext(context.Background())
}

func (i DomainRecordGeoIpMatchArgs) ToDomainRecordGeoIpMatchOutputWithContext(ctx context.Context) DomainRecordGeoIpMatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainRecordGeoIpMatchOutput)
}

// DomainRecordGeoIpMatchArrayInput is an input type that accepts DomainRecordGeoIpMatchArray and DomainRecordGeoIpMatchArrayOutput values.
// You can construct a concrete instance of `DomainRecordGeoIpMatchArrayInput` via:
//
//          DomainRecordGeoIpMatchArray{ DomainRecordGeoIpMatchArgs{...} }
type DomainRecordGeoIpMatchArrayInput interface {
	pulumi.Input

	ToDomainRecordGeoIpMatchArrayOutput() DomainRecordGeoIpMatchArrayOutput
	ToDomainRecordGeoIpMatchArrayOutputWithContext(context.Context) DomainRecordGeoIpMatchArrayOutput
}

type DomainRecordGeoIpMatchArray []DomainRecordGeoIpMatchInput

func (DomainRecordGeoIpMatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DomainRecordGeoIpMatch)(nil)).Elem()
}

func (i DomainRecordGeoIpMatchArray) ToDomainRecordGeoIpMatchArrayOutput() DomainRecordGeoIpMatchArrayOutput {
	return i.ToDomainRecordGeoIpMatchArrayOutputWithContext(context.Background())
}

func (i DomainRecordGeoIpMatchArray) ToDomainRecordGeoIpMatchArrayOutputWithContext(ctx context.Context) DomainRecordGeoIpMatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainRecordGeoIpMatchArrayOutput)
}

type DomainRecordGeoIpMatchOutput struct{ *pulumi.OutputState }

func (DomainRecordGeoIpMatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainRecordGeoIpMatch)(nil)).Elem()
}

func (o DomainRecordGeoIpMatchOutput) ToDomainRecordGeoIpMatchOutput() DomainRecordGeoIpMatchOutput {
	return o
}

func (o DomainRecordGeoIpMatchOutput) ToDomainRecordGeoIpMatchOutputWithContext(ctx context.Context) DomainRecordGeoIpMatchOutput {
	return o
}

// List of continents (eg: `EU` for Europe, `NA` for North America, `AS` for Asia...). [List of all continents code](https://api.scaleway.com/domain-private/v2beta1/continents)
func (o DomainRecordGeoIpMatchOutput) Continents() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DomainRecordGeoIpMatch) []string { return v.Continents }).(pulumi.StringArrayOutput)
}

// List of countries (eg: `FR` for France, `US` for the United States, `GB` for Great Britain...). [List of all countries code](https://api.scaleway.com/domain-private/v2beta1/countries)
func (o DomainRecordGeoIpMatchOutput) Countries() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DomainRecordGeoIpMatch) []string { return v.Countries }).(pulumi.StringArrayOutput)
}

// The data of the view record
func (o DomainRecordGeoIpMatchOutput) Data() pulumi.StringOutput {
	return o.ApplyT(func(v DomainRecordGeoIpMatch) string { return v.Data }).(pulumi.StringOutput)
}

type DomainRecordGeoIpMatchArrayOutput struct{ *pulumi.OutputState }

func (DomainRecordGeoIpMatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DomainRecordGeoIpMatch)(nil)).Elem()
}

func (o DomainRecordGeoIpMatchArrayOutput) ToDomainRecordGeoIpMatchArrayOutput() DomainRecordGeoIpMatchArrayOutput {
	return o
}

func (o DomainRecordGeoIpMatchArrayOutput) ToDomainRecordGeoIpMatchArrayOutputWithContext(ctx context.Context) DomainRecordGeoIpMatchArrayOutput {
	return o
}

func (o DomainRecordGeoIpMatchArrayOutput) Index(i pulumi.IntInput) DomainRecordGeoIpMatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DomainRecordGeoIpMatch {
		return vs[0].([]DomainRecordGeoIpMatch)[vs[1].(int)]
	}).(DomainRecordGeoIpMatchOutput)
}

type DomainRecordHttpService struct {
	// List of IPs to check
	Ips []string `pulumi:"ips"`
	// Text to search
	MustContain string `pulumi:"mustContain"`
	// Strategy to return an IP from the IPs list. Can be `random` or `hashed`
	Strategy string `pulumi:"strategy"`
	// URL to match the `mustContain` text to validate an IP
	Url string `pulumi:"url"`
	// User-agent used when checking the URL
	UserAgent *string `pulumi:"userAgent"`
}

// DomainRecordHttpServiceInput is an input type that accepts DomainRecordHttpServiceArgs and DomainRecordHttpServiceOutput values.
// You can construct a concrete instance of `DomainRecordHttpServiceInput` via:
//
//          DomainRecordHttpServiceArgs{...}
type DomainRecordHttpServiceInput interface {
	pulumi.Input

	ToDomainRecordHttpServiceOutput() DomainRecordHttpServiceOutput
	ToDomainRecordHttpServiceOutputWithContext(context.Context) DomainRecordHttpServiceOutput
}

type DomainRecordHttpServiceArgs struct {
	// List of IPs to check
	Ips pulumi.StringArrayInput `pulumi:"ips"`
	// Text to search
	MustContain pulumi.StringInput `pulumi:"mustContain"`
	// Strategy to return an IP from the IPs list. Can be `random` or `hashed`
	Strategy pulumi.StringInput `pulumi:"strategy"`
	// URL to match the `mustContain` text to validate an IP
	Url pulumi.StringInput `pulumi:"url"`
	// User-agent used when checking the URL
	UserAgent pulumi.StringPtrInput `pulumi:"userAgent"`
}

func (DomainRecordHttpServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainRecordHttpService)(nil)).Elem()
}

func (i DomainRecordHttpServiceArgs) ToDomainRecordHttpServiceOutput() DomainRecordHttpServiceOutput {
	return i.ToDomainRecordHttpServiceOutputWithContext(context.Background())
}

func (i DomainRecordHttpServiceArgs) ToDomainRecordHttpServiceOutputWithContext(ctx context.Context) DomainRecordHttpServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainRecordHttpServiceOutput)
}

func (i DomainRecordHttpServiceArgs) ToDomainRecordHttpServicePtrOutput() DomainRecordHttpServicePtrOutput {
	return i.ToDomainRecordHttpServicePtrOutputWithContext(context.Background())
}

func (i DomainRecordHttpServiceArgs) ToDomainRecordHttpServicePtrOutputWithContext(ctx context.Context) DomainRecordHttpServicePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainRecordHttpServiceOutput).ToDomainRecordHttpServicePtrOutputWithContext(ctx)
}

// DomainRecordHttpServicePtrInput is an input type that accepts DomainRecordHttpServiceArgs, DomainRecordHttpServicePtr and DomainRecordHttpServicePtrOutput values.
// You can construct a concrete instance of `DomainRecordHttpServicePtrInput` via:
//
//          DomainRecordHttpServiceArgs{...}
//
//  or:
//
//          nil
type DomainRecordHttpServicePtrInput interface {
	pulumi.Input

	ToDomainRecordHttpServicePtrOutput() DomainRecordHttpServicePtrOutput
	ToDomainRecordHttpServicePtrOutputWithContext(context.Context) DomainRecordHttpServicePtrOutput
}

type domainRecordHttpServicePtrType DomainRecordHttpServiceArgs

func DomainRecordHttpServicePtr(v *DomainRecordHttpServiceArgs) DomainRecordHttpServicePtrInput {
	return (*domainRecordHttpServicePtrType)(v)
}

func (*domainRecordHttpServicePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainRecordHttpService)(nil)).Elem()
}

func (i *domainRecordHttpServicePtrType) ToDomainRecordHttpServicePtrOutput() DomainRecordHttpServicePtrOutput {
	return i.ToDomainRecordHttpServicePtrOutputWithContext(context.Background())
}

func (i *domainRecordHttpServicePtrType) ToDomainRecordHttpServicePtrOutputWithContext(ctx context.Context) DomainRecordHttpServicePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainRecordHttpServicePtrOutput)
}

type DomainRecordHttpServiceOutput struct{ *pulumi.OutputState }

func (DomainRecordHttpServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainRecordHttpService)(nil)).Elem()
}

func (o DomainRecordHttpServiceOutput) ToDomainRecordHttpServiceOutput() DomainRecordHttpServiceOutput {
	return o
}

func (o DomainRecordHttpServiceOutput) ToDomainRecordHttpServiceOutputWithContext(ctx context.Context) DomainRecordHttpServiceOutput {
	return o
}

func (o DomainRecordHttpServiceOutput) ToDomainRecordHttpServicePtrOutput() DomainRecordHttpServicePtrOutput {
	return o.ToDomainRecordHttpServicePtrOutputWithContext(context.Background())
}

func (o DomainRecordHttpServiceOutput) ToDomainRecordHttpServicePtrOutputWithContext(ctx context.Context) DomainRecordHttpServicePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DomainRecordHttpService) *DomainRecordHttpService {
		return &v
	}).(DomainRecordHttpServicePtrOutput)
}

// List of IPs to check
func (o DomainRecordHttpServiceOutput) Ips() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DomainRecordHttpService) []string { return v.Ips }).(pulumi.StringArrayOutput)
}

// Text to search
func (o DomainRecordHttpServiceOutput) MustContain() pulumi.StringOutput {
	return o.ApplyT(func(v DomainRecordHttpService) string { return v.MustContain }).(pulumi.StringOutput)
}

// Strategy to return an IP from the IPs list. Can be `random` or `hashed`
func (o DomainRecordHttpServiceOutput) Strategy() pulumi.StringOutput {
	return o.ApplyT(func(v DomainRecordHttpService) string { return v.Strategy }).(pulumi.StringOutput)
}

// URL to match the `mustContain` text to validate an IP
func (o DomainRecordHttpServiceOutput) Url() pulumi.StringOutput {
	return o.ApplyT(func(v DomainRecordHttpService) string { return v.Url }).(pulumi.StringOutput)
}

// User-agent used when checking the URL
func (o DomainRecordHttpServiceOutput) UserAgent() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DomainRecordHttpService) *string { return v.UserAgent }).(pulumi.StringPtrOutput)
}

type DomainRecordHttpServicePtrOutput struct{ *pulumi.OutputState }

func (DomainRecordHttpServicePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainRecordHttpService)(nil)).Elem()
}

func (o DomainRecordHttpServicePtrOutput) ToDomainRecordHttpServicePtrOutput() DomainRecordHttpServicePtrOutput {
	return o
}

func (o DomainRecordHttpServicePtrOutput) ToDomainRecordHttpServicePtrOutputWithContext(ctx context.Context) DomainRecordHttpServicePtrOutput {
	return o
}

func (o DomainRecordHttpServicePtrOutput) Elem() DomainRecordHttpServiceOutput {
	return o.ApplyT(func(v *DomainRecordHttpService) DomainRecordHttpService {
		if v != nil {
			return *v
		}
		var ret DomainRecordHttpService
		return ret
	}).(DomainRecordHttpServiceOutput)
}

// List of IPs to check
func (o DomainRecordHttpServicePtrOutput) Ips() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DomainRecordHttpService) []string {
		if v == nil {
			return nil
		}
		return v.Ips
	}).(pulumi.StringArrayOutput)
}

// Text to search
func (o DomainRecordHttpServicePtrOutput) MustContain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainRecordHttpService) *string {
		if v == nil {
			return nil
		}
		return &v.MustContain
	}).(pulumi.StringPtrOutput)
}

// Strategy to return an IP from the IPs list. Can be `random` or `hashed`
func (o DomainRecordHttpServicePtrOutput) Strategy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainRecordHttpService) *string {
		if v == nil {
			return nil
		}
		return &v.Strategy
	}).(pulumi.StringPtrOutput)
}

// URL to match the `mustContain` text to validate an IP
func (o DomainRecordHttpServicePtrOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainRecordHttpService) *string {
		if v == nil {
			return nil
		}
		return &v.Url
	}).(pulumi.StringPtrOutput)
}

// User-agent used when checking the URL
func (o DomainRecordHttpServicePtrOutput) UserAgent() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainRecordHttpService) *string {
		if v == nil {
			return nil
		}
		return v.UserAgent
	}).(pulumi.StringPtrOutput)
}

type DomainRecordView struct {
	// The data of the view record
	Data string `pulumi:"data"`
	// The subnet of the view
	Subnet string `pulumi:"subnet"`
}

// DomainRecordViewInput is an input type that accepts DomainRecordViewArgs and DomainRecordViewOutput values.
// You can construct a concrete instance of `DomainRecordViewInput` via:
//
//          DomainRecordViewArgs{...}
type DomainRecordViewInput interface {
	pulumi.Input

	ToDomainRecordViewOutput() DomainRecordViewOutput
	ToDomainRecordViewOutputWithContext(context.Context) DomainRecordViewOutput
}

type DomainRecordViewArgs struct {
	// The data of the view record
	Data pulumi.StringInput `pulumi:"data"`
	// The subnet of the view
	Subnet pulumi.StringInput `pulumi:"subnet"`
}

func (DomainRecordViewArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainRecordView)(nil)).Elem()
}

func (i DomainRecordViewArgs) ToDomainRecordViewOutput() DomainRecordViewOutput {
	return i.ToDomainRecordViewOutputWithContext(context.Background())
}

func (i DomainRecordViewArgs) ToDomainRecordViewOutputWithContext(ctx context.Context) DomainRecordViewOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainRecordViewOutput)
}

// DomainRecordViewArrayInput is an input type that accepts DomainRecordViewArray and DomainRecordViewArrayOutput values.
// You can construct a concrete instance of `DomainRecordViewArrayInput` via:
//
//          DomainRecordViewArray{ DomainRecordViewArgs{...} }
type DomainRecordViewArrayInput interface {
	pulumi.Input

	ToDomainRecordViewArrayOutput() DomainRecordViewArrayOutput
	ToDomainRecordViewArrayOutputWithContext(context.Context) DomainRecordViewArrayOutput
}

type DomainRecordViewArray []DomainRecordViewInput

func (DomainRecordViewArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DomainRecordView)(nil)).Elem()
}

func (i DomainRecordViewArray) ToDomainRecordViewArrayOutput() DomainRecordViewArrayOutput {
	return i.ToDomainRecordViewArrayOutputWithContext(context.Background())
}

func (i DomainRecordViewArray) ToDomainRecordViewArrayOutputWithContext(ctx context.Context) DomainRecordViewArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainRecordViewArrayOutput)
}

type DomainRecordViewOutput struct{ *pulumi.OutputState }

func (DomainRecordViewOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainRecordView)(nil)).Elem()
}

func (o DomainRecordViewOutput) ToDomainRecordViewOutput() DomainRecordViewOutput {
	return o
}

func (o DomainRecordViewOutput) ToDomainRecordViewOutputWithContext(ctx context.Context) DomainRecordViewOutput {
	return o
}

// The data of the view record
func (o DomainRecordViewOutput) Data() pulumi.StringOutput {
	return o.ApplyT(func(v DomainRecordView) string { return v.Data }).(pulumi.StringOutput)
}

// The subnet of the view
func (o DomainRecordViewOutput) Subnet() pulumi.StringOutput {
	return o.ApplyT(func(v DomainRecordView) string { return v.Subnet }).(pulumi.StringOutput)
}

type DomainRecordViewArrayOutput struct{ *pulumi.OutputState }

func (DomainRecordViewArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DomainRecordView)(nil)).Elem()
}

func (o DomainRecordViewArrayOutput) ToDomainRecordViewArrayOutput() DomainRecordViewArrayOutput {
	return o
}

func (o DomainRecordViewArrayOutput) ToDomainRecordViewArrayOutputWithContext(ctx context.Context) DomainRecordViewArrayOutput {
	return o
}

func (o DomainRecordViewArrayOutput) Index(i pulumi.IntInput) DomainRecordViewOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DomainRecordView {
		return vs[0].([]DomainRecordView)[vs[1].(int)]
	}).(DomainRecordViewOutput)
}

type DomainRecordWeighted struct {
	// The weighted IP
	Ip string `pulumi:"ip"`
	// The weight of the IP as an integer UInt32.
	Weight int `pulumi:"weight"`
}

// DomainRecordWeightedInput is an input type that accepts DomainRecordWeightedArgs and DomainRecordWeightedOutput values.
// You can construct a concrete instance of `DomainRecordWeightedInput` via:
//
//          DomainRecordWeightedArgs{...}
type DomainRecordWeightedInput interface {
	pulumi.Input

	ToDomainRecordWeightedOutput() DomainRecordWeightedOutput
	ToDomainRecordWeightedOutputWithContext(context.Context) DomainRecordWeightedOutput
}

type DomainRecordWeightedArgs struct {
	// The weighted IP
	Ip pulumi.StringInput `pulumi:"ip"`
	// The weight of the IP as an integer UInt32.
	Weight pulumi.IntInput `pulumi:"weight"`
}

func (DomainRecordWeightedArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainRecordWeighted)(nil)).Elem()
}

func (i DomainRecordWeightedArgs) ToDomainRecordWeightedOutput() DomainRecordWeightedOutput {
	return i.ToDomainRecordWeightedOutputWithContext(context.Background())
}

func (i DomainRecordWeightedArgs) ToDomainRecordWeightedOutputWithContext(ctx context.Context) DomainRecordWeightedOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainRecordWeightedOutput)
}

// DomainRecordWeightedArrayInput is an input type that accepts DomainRecordWeightedArray and DomainRecordWeightedArrayOutput values.
// You can construct a concrete instance of `DomainRecordWeightedArrayInput` via:
//
//          DomainRecordWeightedArray{ DomainRecordWeightedArgs{...} }
type DomainRecordWeightedArrayInput interface {
	pulumi.Input

	ToDomainRecordWeightedArrayOutput() DomainRecordWeightedArrayOutput
	ToDomainRecordWeightedArrayOutputWithContext(context.Context) DomainRecordWeightedArrayOutput
}

type DomainRecordWeightedArray []DomainRecordWeightedInput

func (DomainRecordWeightedArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DomainRecordWeighted)(nil)).Elem()
}

func (i DomainRecordWeightedArray) ToDomainRecordWeightedArrayOutput() DomainRecordWeightedArrayOutput {
	return i.ToDomainRecordWeightedArrayOutputWithContext(context.Background())
}

func (i DomainRecordWeightedArray) ToDomainRecordWeightedArrayOutputWithContext(ctx context.Context) DomainRecordWeightedArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainRecordWeightedArrayOutput)
}

type DomainRecordWeightedOutput struct{ *pulumi.OutputState }

func (DomainRecordWeightedOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainRecordWeighted)(nil)).Elem()
}

func (o DomainRecordWeightedOutput) ToDomainRecordWeightedOutput() DomainRecordWeightedOutput {
	return o
}

func (o DomainRecordWeightedOutput) ToDomainRecordWeightedOutputWithContext(ctx context.Context) DomainRecordWeightedOutput {
	return o
}

// The weighted IP
func (o DomainRecordWeightedOutput) Ip() pulumi.StringOutput {
	return o.ApplyT(func(v DomainRecordWeighted) string { return v.Ip }).(pulumi.StringOutput)
}

// The weight of the IP as an integer UInt32.
func (o DomainRecordWeightedOutput) Weight() pulumi.IntOutput {
	return o.ApplyT(func(v DomainRecordWeighted) int { return v.Weight }).(pulumi.IntOutput)
}

type DomainRecordWeightedArrayOutput struct{ *pulumi.OutputState }

func (DomainRecordWeightedArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DomainRecordWeighted)(nil)).Elem()
}

func (o DomainRecordWeightedArrayOutput) ToDomainRecordWeightedArrayOutput() DomainRecordWeightedArrayOutput {
	return o
}

func (o DomainRecordWeightedArrayOutput) ToDomainRecordWeightedArrayOutputWithContext(ctx context.Context) DomainRecordWeightedArrayOutput {
	return o
}

func (o DomainRecordWeightedArrayOutput) Index(i pulumi.IntInput) DomainRecordWeightedOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DomainRecordWeighted {
		return vs[0].([]DomainRecordWeighted)[vs[1].(int)]
	}).(DomainRecordWeightedOutput)
}

type InstanceSecurityGroupInboundRule struct {
	// The action to take when rule match. Possible values are: `accept` or `drop`.
	Action string `pulumi:"action"`
	// The ip this rule apply to. If no `ip` nor `ipRange` are specified, rule will apply to all ip. Only one of `ip` and `ipRange` should be specified.
	Ip *string `pulumi:"ip"`
	// The ip range (e.g `192.168.1.0/24`) this rule applies to. If no `ip` nor `ipRange` are specified, rule will apply to all ip. Only one of `ip` and `ipRange` should be specified.
	IpRange *string `pulumi:"ipRange"`
	// The port this rule applies to. If no `port` nor `portRange` are specified, the rule will apply to all port. Only one of `port` and `portRange` should be specified.
	Port      *int    `pulumi:"port"`
	PortRange *string `pulumi:"portRange"`
	// The protocol this rule apply to. Possible values are: `TCP`, `UDP`, `ICMP` or `ANY`.
	Protocol *string `pulumi:"protocol"`
}

// InstanceSecurityGroupInboundRuleInput is an input type that accepts InstanceSecurityGroupInboundRuleArgs and InstanceSecurityGroupInboundRuleOutput values.
// You can construct a concrete instance of `InstanceSecurityGroupInboundRuleInput` via:
//
//          InstanceSecurityGroupInboundRuleArgs{...}
type InstanceSecurityGroupInboundRuleInput interface {
	pulumi.Input

	ToInstanceSecurityGroupInboundRuleOutput() InstanceSecurityGroupInboundRuleOutput
	ToInstanceSecurityGroupInboundRuleOutputWithContext(context.Context) InstanceSecurityGroupInboundRuleOutput
}

type InstanceSecurityGroupInboundRuleArgs struct {
	// The action to take when rule match. Possible values are: `accept` or `drop`.
	Action pulumi.StringInput `pulumi:"action"`
	// The ip this rule apply to. If no `ip` nor `ipRange` are specified, rule will apply to all ip. Only one of `ip` and `ipRange` should be specified.
	Ip pulumi.StringPtrInput `pulumi:"ip"`
	// The ip range (e.g `192.168.1.0/24`) this rule applies to. If no `ip` nor `ipRange` are specified, rule will apply to all ip. Only one of `ip` and `ipRange` should be specified.
	IpRange pulumi.StringPtrInput `pulumi:"ipRange"`
	// The port this rule applies to. If no `port` nor `portRange` are specified, the rule will apply to all port. Only one of `port` and `portRange` should be specified.
	Port      pulumi.IntPtrInput    `pulumi:"port"`
	PortRange pulumi.StringPtrInput `pulumi:"portRange"`
	// The protocol this rule apply to. Possible values are: `TCP`, `UDP`, `ICMP` or `ANY`.
	Protocol pulumi.StringPtrInput `pulumi:"protocol"`
}

func (InstanceSecurityGroupInboundRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceSecurityGroupInboundRule)(nil)).Elem()
}

func (i InstanceSecurityGroupInboundRuleArgs) ToInstanceSecurityGroupInboundRuleOutput() InstanceSecurityGroupInboundRuleOutput {
	return i.ToInstanceSecurityGroupInboundRuleOutputWithContext(context.Background())
}

func (i InstanceSecurityGroupInboundRuleArgs) ToInstanceSecurityGroupInboundRuleOutputWithContext(ctx context.Context) InstanceSecurityGroupInboundRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceSecurityGroupInboundRuleOutput)
}

// InstanceSecurityGroupInboundRuleArrayInput is an input type that accepts InstanceSecurityGroupInboundRuleArray and InstanceSecurityGroupInboundRuleArrayOutput values.
// You can construct a concrete instance of `InstanceSecurityGroupInboundRuleArrayInput` via:
//
//          InstanceSecurityGroupInboundRuleArray{ InstanceSecurityGroupInboundRuleArgs{...} }
type InstanceSecurityGroupInboundRuleArrayInput interface {
	pulumi.Input

	ToInstanceSecurityGroupInboundRuleArrayOutput() InstanceSecurityGroupInboundRuleArrayOutput
	ToInstanceSecurityGroupInboundRuleArrayOutputWithContext(context.Context) InstanceSecurityGroupInboundRuleArrayOutput
}

type InstanceSecurityGroupInboundRuleArray []InstanceSecurityGroupInboundRuleInput

func (InstanceSecurityGroupInboundRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceSecurityGroupInboundRule)(nil)).Elem()
}

func (i InstanceSecurityGroupInboundRuleArray) ToInstanceSecurityGroupInboundRuleArrayOutput() InstanceSecurityGroupInboundRuleArrayOutput {
	return i.ToInstanceSecurityGroupInboundRuleArrayOutputWithContext(context.Background())
}

func (i InstanceSecurityGroupInboundRuleArray) ToInstanceSecurityGroupInboundRuleArrayOutputWithContext(ctx context.Context) InstanceSecurityGroupInboundRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceSecurityGroupInboundRuleArrayOutput)
}

type InstanceSecurityGroupInboundRuleOutput struct{ *pulumi.OutputState }

func (InstanceSecurityGroupInboundRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceSecurityGroupInboundRule)(nil)).Elem()
}

func (o InstanceSecurityGroupInboundRuleOutput) ToInstanceSecurityGroupInboundRuleOutput() InstanceSecurityGroupInboundRuleOutput {
	return o
}

func (o InstanceSecurityGroupInboundRuleOutput) ToInstanceSecurityGroupInboundRuleOutputWithContext(ctx context.Context) InstanceSecurityGroupInboundRuleOutput {
	return o
}

// The action to take when rule match. Possible values are: `accept` or `drop`.
func (o InstanceSecurityGroupInboundRuleOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v InstanceSecurityGroupInboundRule) string { return v.Action }).(pulumi.StringOutput)
}

// The ip this rule apply to. If no `ip` nor `ipRange` are specified, rule will apply to all ip. Only one of `ip` and `ipRange` should be specified.
func (o InstanceSecurityGroupInboundRuleOutput) Ip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceSecurityGroupInboundRule) *string { return v.Ip }).(pulumi.StringPtrOutput)
}

// The ip range (e.g `192.168.1.0/24`) this rule applies to. If no `ip` nor `ipRange` are specified, rule will apply to all ip. Only one of `ip` and `ipRange` should be specified.
func (o InstanceSecurityGroupInboundRuleOutput) IpRange() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceSecurityGroupInboundRule) *string { return v.IpRange }).(pulumi.StringPtrOutput)
}

// The port this rule applies to. If no `port` nor `portRange` are specified, the rule will apply to all port. Only one of `port` and `portRange` should be specified.
func (o InstanceSecurityGroupInboundRuleOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InstanceSecurityGroupInboundRule) *int { return v.Port }).(pulumi.IntPtrOutput)
}

func (o InstanceSecurityGroupInboundRuleOutput) PortRange() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceSecurityGroupInboundRule) *string { return v.PortRange }).(pulumi.StringPtrOutput)
}

// The protocol this rule apply to. Possible values are: `TCP`, `UDP`, `ICMP` or `ANY`.
func (o InstanceSecurityGroupInboundRuleOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceSecurityGroupInboundRule) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

type InstanceSecurityGroupInboundRuleArrayOutput struct{ *pulumi.OutputState }

func (InstanceSecurityGroupInboundRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceSecurityGroupInboundRule)(nil)).Elem()
}

func (o InstanceSecurityGroupInboundRuleArrayOutput) ToInstanceSecurityGroupInboundRuleArrayOutput() InstanceSecurityGroupInboundRuleArrayOutput {
	return o
}

func (o InstanceSecurityGroupInboundRuleArrayOutput) ToInstanceSecurityGroupInboundRuleArrayOutputWithContext(ctx context.Context) InstanceSecurityGroupInboundRuleArrayOutput {
	return o
}

func (o InstanceSecurityGroupInboundRuleArrayOutput) Index(i pulumi.IntInput) InstanceSecurityGroupInboundRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InstanceSecurityGroupInboundRule {
		return vs[0].([]InstanceSecurityGroupInboundRule)[vs[1].(int)]
	}).(InstanceSecurityGroupInboundRuleOutput)
}

type InstanceSecurityGroupOutboundRule struct {
	// The action to take when rule match. Possible values are: `accept` or `drop`.
	Action string `pulumi:"action"`
	// The ip this rule apply to. If no `ip` nor `ipRange` are specified, rule will apply to all ip. Only one of `ip` and `ipRange` should be specified.
	Ip *string `pulumi:"ip"`
	// The ip range (e.g `192.168.1.0/24`) this rule applies to. If no `ip` nor `ipRange` are specified, rule will apply to all ip. Only one of `ip` and `ipRange` should be specified.
	IpRange *string `pulumi:"ipRange"`
	// The port this rule applies to. If no `port` nor `portRange` are specified, the rule will apply to all port. Only one of `port` and `portRange` should be specified.
	Port      *int    `pulumi:"port"`
	PortRange *string `pulumi:"portRange"`
	// The protocol this rule apply to. Possible values are: `TCP`, `UDP`, `ICMP` or `ANY`.
	Protocol *string `pulumi:"protocol"`
}

// InstanceSecurityGroupOutboundRuleInput is an input type that accepts InstanceSecurityGroupOutboundRuleArgs and InstanceSecurityGroupOutboundRuleOutput values.
// You can construct a concrete instance of `InstanceSecurityGroupOutboundRuleInput` via:
//
//          InstanceSecurityGroupOutboundRuleArgs{...}
type InstanceSecurityGroupOutboundRuleInput interface {
	pulumi.Input

	ToInstanceSecurityGroupOutboundRuleOutput() InstanceSecurityGroupOutboundRuleOutput
	ToInstanceSecurityGroupOutboundRuleOutputWithContext(context.Context) InstanceSecurityGroupOutboundRuleOutput
}

type InstanceSecurityGroupOutboundRuleArgs struct {
	// The action to take when rule match. Possible values are: `accept` or `drop`.
	Action pulumi.StringInput `pulumi:"action"`
	// The ip this rule apply to. If no `ip` nor `ipRange` are specified, rule will apply to all ip. Only one of `ip` and `ipRange` should be specified.
	Ip pulumi.StringPtrInput `pulumi:"ip"`
	// The ip range (e.g `192.168.1.0/24`) this rule applies to. If no `ip` nor `ipRange` are specified, rule will apply to all ip. Only one of `ip` and `ipRange` should be specified.
	IpRange pulumi.StringPtrInput `pulumi:"ipRange"`
	// The port this rule applies to. If no `port` nor `portRange` are specified, the rule will apply to all port. Only one of `port` and `portRange` should be specified.
	Port      pulumi.IntPtrInput    `pulumi:"port"`
	PortRange pulumi.StringPtrInput `pulumi:"portRange"`
	// The protocol this rule apply to. Possible values are: `TCP`, `UDP`, `ICMP` or `ANY`.
	Protocol pulumi.StringPtrInput `pulumi:"protocol"`
}

func (InstanceSecurityGroupOutboundRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceSecurityGroupOutboundRule)(nil)).Elem()
}

func (i InstanceSecurityGroupOutboundRuleArgs) ToInstanceSecurityGroupOutboundRuleOutput() InstanceSecurityGroupOutboundRuleOutput {
	return i.ToInstanceSecurityGroupOutboundRuleOutputWithContext(context.Background())
}

func (i InstanceSecurityGroupOutboundRuleArgs) ToInstanceSecurityGroupOutboundRuleOutputWithContext(ctx context.Context) InstanceSecurityGroupOutboundRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceSecurityGroupOutboundRuleOutput)
}

// InstanceSecurityGroupOutboundRuleArrayInput is an input type that accepts InstanceSecurityGroupOutboundRuleArray and InstanceSecurityGroupOutboundRuleArrayOutput values.
// You can construct a concrete instance of `InstanceSecurityGroupOutboundRuleArrayInput` via:
//
//          InstanceSecurityGroupOutboundRuleArray{ InstanceSecurityGroupOutboundRuleArgs{...} }
type InstanceSecurityGroupOutboundRuleArrayInput interface {
	pulumi.Input

	ToInstanceSecurityGroupOutboundRuleArrayOutput() InstanceSecurityGroupOutboundRuleArrayOutput
	ToInstanceSecurityGroupOutboundRuleArrayOutputWithContext(context.Context) InstanceSecurityGroupOutboundRuleArrayOutput
}

type InstanceSecurityGroupOutboundRuleArray []InstanceSecurityGroupOutboundRuleInput

func (InstanceSecurityGroupOutboundRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceSecurityGroupOutboundRule)(nil)).Elem()
}

func (i InstanceSecurityGroupOutboundRuleArray) ToInstanceSecurityGroupOutboundRuleArrayOutput() InstanceSecurityGroupOutboundRuleArrayOutput {
	return i.ToInstanceSecurityGroupOutboundRuleArrayOutputWithContext(context.Background())
}

func (i InstanceSecurityGroupOutboundRuleArray) ToInstanceSecurityGroupOutboundRuleArrayOutputWithContext(ctx context.Context) InstanceSecurityGroupOutboundRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceSecurityGroupOutboundRuleArrayOutput)
}

type InstanceSecurityGroupOutboundRuleOutput struct{ *pulumi.OutputState }

func (InstanceSecurityGroupOutboundRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceSecurityGroupOutboundRule)(nil)).Elem()
}

func (o InstanceSecurityGroupOutboundRuleOutput) ToInstanceSecurityGroupOutboundRuleOutput() InstanceSecurityGroupOutboundRuleOutput {
	return o
}

func (o InstanceSecurityGroupOutboundRuleOutput) ToInstanceSecurityGroupOutboundRuleOutputWithContext(ctx context.Context) InstanceSecurityGroupOutboundRuleOutput {
	return o
}

// The action to take when rule match. Possible values are: `accept` or `drop`.
func (o InstanceSecurityGroupOutboundRuleOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v InstanceSecurityGroupOutboundRule) string { return v.Action }).(pulumi.StringOutput)
}

// The ip this rule apply to. If no `ip` nor `ipRange` are specified, rule will apply to all ip. Only one of `ip` and `ipRange` should be specified.
func (o InstanceSecurityGroupOutboundRuleOutput) Ip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceSecurityGroupOutboundRule) *string { return v.Ip }).(pulumi.StringPtrOutput)
}

// The ip range (e.g `192.168.1.0/24`) this rule applies to. If no `ip` nor `ipRange` are specified, rule will apply to all ip. Only one of `ip` and `ipRange` should be specified.
func (o InstanceSecurityGroupOutboundRuleOutput) IpRange() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceSecurityGroupOutboundRule) *string { return v.IpRange }).(pulumi.StringPtrOutput)
}

// The port this rule applies to. If no `port` nor `portRange` are specified, the rule will apply to all port. Only one of `port` and `portRange` should be specified.
func (o InstanceSecurityGroupOutboundRuleOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InstanceSecurityGroupOutboundRule) *int { return v.Port }).(pulumi.IntPtrOutput)
}

func (o InstanceSecurityGroupOutboundRuleOutput) PortRange() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceSecurityGroupOutboundRule) *string { return v.PortRange }).(pulumi.StringPtrOutput)
}

// The protocol this rule apply to. Possible values are: `TCP`, `UDP`, `ICMP` or `ANY`.
func (o InstanceSecurityGroupOutboundRuleOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceSecurityGroupOutboundRule) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

type InstanceSecurityGroupOutboundRuleArrayOutput struct{ *pulumi.OutputState }

func (InstanceSecurityGroupOutboundRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceSecurityGroupOutboundRule)(nil)).Elem()
}

func (o InstanceSecurityGroupOutboundRuleArrayOutput) ToInstanceSecurityGroupOutboundRuleArrayOutput() InstanceSecurityGroupOutboundRuleArrayOutput {
	return o
}

func (o InstanceSecurityGroupOutboundRuleArrayOutput) ToInstanceSecurityGroupOutboundRuleArrayOutputWithContext(ctx context.Context) InstanceSecurityGroupOutboundRuleArrayOutput {
	return o
}

func (o InstanceSecurityGroupOutboundRuleArrayOutput) Index(i pulumi.IntInput) InstanceSecurityGroupOutboundRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InstanceSecurityGroupOutboundRule {
		return vs[0].([]InstanceSecurityGroupOutboundRule)[vs[1].(int)]
	}).(InstanceSecurityGroupOutboundRuleOutput)
}

type InstanceSecurityGroupRulesInboundRule struct {
	// The action to take when rule match. Possible values are: `accept` or `drop`.
	Action string `pulumi:"action"`
	// The ip this rule apply to. If no `ip` nor `ipRange` are specified, rule will apply to all ip. Only one of `ip` and `ipRange` should be specified.
	Ip *string `pulumi:"ip"`
	// The ip range (e.g `192.168.1.0/24`) this rule applies to. If no `ip` nor `ipRange` are specified, rule will apply to all ip. Only one of `ip` and `ipRange` should be specified.
	IpRange *string `pulumi:"ipRange"`
	// The port this rule apply to. If no port is specified, rule will apply to all port.
	Port      *int    `pulumi:"port"`
	PortRange *string `pulumi:"portRange"`
	// The protocol this rule apply to. Possible values are: `TCP`, `UDP`, `ICMP` or `ANY`.
	Protocol *string `pulumi:"protocol"`
}

// InstanceSecurityGroupRulesInboundRuleInput is an input type that accepts InstanceSecurityGroupRulesInboundRuleArgs and InstanceSecurityGroupRulesInboundRuleOutput values.
// You can construct a concrete instance of `InstanceSecurityGroupRulesInboundRuleInput` via:
//
//          InstanceSecurityGroupRulesInboundRuleArgs{...}
type InstanceSecurityGroupRulesInboundRuleInput interface {
	pulumi.Input

	ToInstanceSecurityGroupRulesInboundRuleOutput() InstanceSecurityGroupRulesInboundRuleOutput
	ToInstanceSecurityGroupRulesInboundRuleOutputWithContext(context.Context) InstanceSecurityGroupRulesInboundRuleOutput
}

type InstanceSecurityGroupRulesInboundRuleArgs struct {
	// The action to take when rule match. Possible values are: `accept` or `drop`.
	Action pulumi.StringInput `pulumi:"action"`
	// The ip this rule apply to. If no `ip` nor `ipRange` are specified, rule will apply to all ip. Only one of `ip` and `ipRange` should be specified.
	Ip pulumi.StringPtrInput `pulumi:"ip"`
	// The ip range (e.g `192.168.1.0/24`) this rule applies to. If no `ip` nor `ipRange` are specified, rule will apply to all ip. Only one of `ip` and `ipRange` should be specified.
	IpRange pulumi.StringPtrInput `pulumi:"ipRange"`
	// The port this rule apply to. If no port is specified, rule will apply to all port.
	Port      pulumi.IntPtrInput    `pulumi:"port"`
	PortRange pulumi.StringPtrInput `pulumi:"portRange"`
	// The protocol this rule apply to. Possible values are: `TCP`, `UDP`, `ICMP` or `ANY`.
	Protocol pulumi.StringPtrInput `pulumi:"protocol"`
}

func (InstanceSecurityGroupRulesInboundRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceSecurityGroupRulesInboundRule)(nil)).Elem()
}

func (i InstanceSecurityGroupRulesInboundRuleArgs) ToInstanceSecurityGroupRulesInboundRuleOutput() InstanceSecurityGroupRulesInboundRuleOutput {
	return i.ToInstanceSecurityGroupRulesInboundRuleOutputWithContext(context.Background())
}

func (i InstanceSecurityGroupRulesInboundRuleArgs) ToInstanceSecurityGroupRulesInboundRuleOutputWithContext(ctx context.Context) InstanceSecurityGroupRulesInboundRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceSecurityGroupRulesInboundRuleOutput)
}

// InstanceSecurityGroupRulesInboundRuleArrayInput is an input type that accepts InstanceSecurityGroupRulesInboundRuleArray and InstanceSecurityGroupRulesInboundRuleArrayOutput values.
// You can construct a concrete instance of `InstanceSecurityGroupRulesInboundRuleArrayInput` via:
//
//          InstanceSecurityGroupRulesInboundRuleArray{ InstanceSecurityGroupRulesInboundRuleArgs{...} }
type InstanceSecurityGroupRulesInboundRuleArrayInput interface {
	pulumi.Input

	ToInstanceSecurityGroupRulesInboundRuleArrayOutput() InstanceSecurityGroupRulesInboundRuleArrayOutput
	ToInstanceSecurityGroupRulesInboundRuleArrayOutputWithContext(context.Context) InstanceSecurityGroupRulesInboundRuleArrayOutput
}

type InstanceSecurityGroupRulesInboundRuleArray []InstanceSecurityGroupRulesInboundRuleInput

func (InstanceSecurityGroupRulesInboundRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceSecurityGroupRulesInboundRule)(nil)).Elem()
}

func (i InstanceSecurityGroupRulesInboundRuleArray) ToInstanceSecurityGroupRulesInboundRuleArrayOutput() InstanceSecurityGroupRulesInboundRuleArrayOutput {
	return i.ToInstanceSecurityGroupRulesInboundRuleArrayOutputWithContext(context.Background())
}

func (i InstanceSecurityGroupRulesInboundRuleArray) ToInstanceSecurityGroupRulesInboundRuleArrayOutputWithContext(ctx context.Context) InstanceSecurityGroupRulesInboundRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceSecurityGroupRulesInboundRuleArrayOutput)
}

type InstanceSecurityGroupRulesInboundRuleOutput struct{ *pulumi.OutputState }

func (InstanceSecurityGroupRulesInboundRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceSecurityGroupRulesInboundRule)(nil)).Elem()
}

func (o InstanceSecurityGroupRulesInboundRuleOutput) ToInstanceSecurityGroupRulesInboundRuleOutput() InstanceSecurityGroupRulesInboundRuleOutput {
	return o
}

func (o InstanceSecurityGroupRulesInboundRuleOutput) ToInstanceSecurityGroupRulesInboundRuleOutputWithContext(ctx context.Context) InstanceSecurityGroupRulesInboundRuleOutput {
	return o
}

// The action to take when rule match. Possible values are: `accept` or `drop`.
func (o InstanceSecurityGroupRulesInboundRuleOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v InstanceSecurityGroupRulesInboundRule) string { return v.Action }).(pulumi.StringOutput)
}

// The ip this rule apply to. If no `ip` nor `ipRange` are specified, rule will apply to all ip. Only one of `ip` and `ipRange` should be specified.
func (o InstanceSecurityGroupRulesInboundRuleOutput) Ip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceSecurityGroupRulesInboundRule) *string { return v.Ip }).(pulumi.StringPtrOutput)
}

// The ip range (e.g `192.168.1.0/24`) this rule applies to. If no `ip` nor `ipRange` are specified, rule will apply to all ip. Only one of `ip` and `ipRange` should be specified.
func (o InstanceSecurityGroupRulesInboundRuleOutput) IpRange() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceSecurityGroupRulesInboundRule) *string { return v.IpRange }).(pulumi.StringPtrOutput)
}

// The port this rule apply to. If no port is specified, rule will apply to all port.
func (o InstanceSecurityGroupRulesInboundRuleOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InstanceSecurityGroupRulesInboundRule) *int { return v.Port }).(pulumi.IntPtrOutput)
}

func (o InstanceSecurityGroupRulesInboundRuleOutput) PortRange() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceSecurityGroupRulesInboundRule) *string { return v.PortRange }).(pulumi.StringPtrOutput)
}

// The protocol this rule apply to. Possible values are: `TCP`, `UDP`, `ICMP` or `ANY`.
func (o InstanceSecurityGroupRulesInboundRuleOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceSecurityGroupRulesInboundRule) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

type InstanceSecurityGroupRulesInboundRuleArrayOutput struct{ *pulumi.OutputState }

func (InstanceSecurityGroupRulesInboundRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceSecurityGroupRulesInboundRule)(nil)).Elem()
}

func (o InstanceSecurityGroupRulesInboundRuleArrayOutput) ToInstanceSecurityGroupRulesInboundRuleArrayOutput() InstanceSecurityGroupRulesInboundRuleArrayOutput {
	return o
}

func (o InstanceSecurityGroupRulesInboundRuleArrayOutput) ToInstanceSecurityGroupRulesInboundRuleArrayOutputWithContext(ctx context.Context) InstanceSecurityGroupRulesInboundRuleArrayOutput {
	return o
}

func (o InstanceSecurityGroupRulesInboundRuleArrayOutput) Index(i pulumi.IntInput) InstanceSecurityGroupRulesInboundRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InstanceSecurityGroupRulesInboundRule {
		return vs[0].([]InstanceSecurityGroupRulesInboundRule)[vs[1].(int)]
	}).(InstanceSecurityGroupRulesInboundRuleOutput)
}

type InstanceSecurityGroupRulesOutboundRule struct {
	// The action to take when rule match. Possible values are: `accept` or `drop`.
	Action string `pulumi:"action"`
	// The ip this rule apply to. If no `ip` nor `ipRange` are specified, rule will apply to all ip. Only one of `ip` and `ipRange` should be specified.
	Ip *string `pulumi:"ip"`
	// The ip range (e.g `192.168.1.0/24`) this rule applies to. If no `ip` nor `ipRange` are specified, rule will apply to all ip. Only one of `ip` and `ipRange` should be specified.
	IpRange *string `pulumi:"ipRange"`
	// The port this rule apply to. If no port is specified, rule will apply to all port.
	Port      *int    `pulumi:"port"`
	PortRange *string `pulumi:"portRange"`
	// The protocol this rule apply to. Possible values are: `TCP`, `UDP`, `ICMP` or `ANY`.
	Protocol *string `pulumi:"protocol"`
}

// InstanceSecurityGroupRulesOutboundRuleInput is an input type that accepts InstanceSecurityGroupRulesOutboundRuleArgs and InstanceSecurityGroupRulesOutboundRuleOutput values.
// You can construct a concrete instance of `InstanceSecurityGroupRulesOutboundRuleInput` via:
//
//          InstanceSecurityGroupRulesOutboundRuleArgs{...}
type InstanceSecurityGroupRulesOutboundRuleInput interface {
	pulumi.Input

	ToInstanceSecurityGroupRulesOutboundRuleOutput() InstanceSecurityGroupRulesOutboundRuleOutput
	ToInstanceSecurityGroupRulesOutboundRuleOutputWithContext(context.Context) InstanceSecurityGroupRulesOutboundRuleOutput
}

type InstanceSecurityGroupRulesOutboundRuleArgs struct {
	// The action to take when rule match. Possible values are: `accept` or `drop`.
	Action pulumi.StringInput `pulumi:"action"`
	// The ip this rule apply to. If no `ip` nor `ipRange` are specified, rule will apply to all ip. Only one of `ip` and `ipRange` should be specified.
	Ip pulumi.StringPtrInput `pulumi:"ip"`
	// The ip range (e.g `192.168.1.0/24`) this rule applies to. If no `ip` nor `ipRange` are specified, rule will apply to all ip. Only one of `ip` and `ipRange` should be specified.
	IpRange pulumi.StringPtrInput `pulumi:"ipRange"`
	// The port this rule apply to. If no port is specified, rule will apply to all port.
	Port      pulumi.IntPtrInput    `pulumi:"port"`
	PortRange pulumi.StringPtrInput `pulumi:"portRange"`
	// The protocol this rule apply to. Possible values are: `TCP`, `UDP`, `ICMP` or `ANY`.
	Protocol pulumi.StringPtrInput `pulumi:"protocol"`
}

func (InstanceSecurityGroupRulesOutboundRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceSecurityGroupRulesOutboundRule)(nil)).Elem()
}

func (i InstanceSecurityGroupRulesOutboundRuleArgs) ToInstanceSecurityGroupRulesOutboundRuleOutput() InstanceSecurityGroupRulesOutboundRuleOutput {
	return i.ToInstanceSecurityGroupRulesOutboundRuleOutputWithContext(context.Background())
}

func (i InstanceSecurityGroupRulesOutboundRuleArgs) ToInstanceSecurityGroupRulesOutboundRuleOutputWithContext(ctx context.Context) InstanceSecurityGroupRulesOutboundRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceSecurityGroupRulesOutboundRuleOutput)
}

// InstanceSecurityGroupRulesOutboundRuleArrayInput is an input type that accepts InstanceSecurityGroupRulesOutboundRuleArray and InstanceSecurityGroupRulesOutboundRuleArrayOutput values.
// You can construct a concrete instance of `InstanceSecurityGroupRulesOutboundRuleArrayInput` via:
//
//          InstanceSecurityGroupRulesOutboundRuleArray{ InstanceSecurityGroupRulesOutboundRuleArgs{...} }
type InstanceSecurityGroupRulesOutboundRuleArrayInput interface {
	pulumi.Input

	ToInstanceSecurityGroupRulesOutboundRuleArrayOutput() InstanceSecurityGroupRulesOutboundRuleArrayOutput
	ToInstanceSecurityGroupRulesOutboundRuleArrayOutputWithContext(context.Context) InstanceSecurityGroupRulesOutboundRuleArrayOutput
}

type InstanceSecurityGroupRulesOutboundRuleArray []InstanceSecurityGroupRulesOutboundRuleInput

func (InstanceSecurityGroupRulesOutboundRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceSecurityGroupRulesOutboundRule)(nil)).Elem()
}

func (i InstanceSecurityGroupRulesOutboundRuleArray) ToInstanceSecurityGroupRulesOutboundRuleArrayOutput() InstanceSecurityGroupRulesOutboundRuleArrayOutput {
	return i.ToInstanceSecurityGroupRulesOutboundRuleArrayOutputWithContext(context.Background())
}

func (i InstanceSecurityGroupRulesOutboundRuleArray) ToInstanceSecurityGroupRulesOutboundRuleArrayOutputWithContext(ctx context.Context) InstanceSecurityGroupRulesOutboundRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceSecurityGroupRulesOutboundRuleArrayOutput)
}

type InstanceSecurityGroupRulesOutboundRuleOutput struct{ *pulumi.OutputState }

func (InstanceSecurityGroupRulesOutboundRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceSecurityGroupRulesOutboundRule)(nil)).Elem()
}

func (o InstanceSecurityGroupRulesOutboundRuleOutput) ToInstanceSecurityGroupRulesOutboundRuleOutput() InstanceSecurityGroupRulesOutboundRuleOutput {
	return o
}

func (o InstanceSecurityGroupRulesOutboundRuleOutput) ToInstanceSecurityGroupRulesOutboundRuleOutputWithContext(ctx context.Context) InstanceSecurityGroupRulesOutboundRuleOutput {
	return o
}

// The action to take when rule match. Possible values are: `accept` or `drop`.
func (o InstanceSecurityGroupRulesOutboundRuleOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v InstanceSecurityGroupRulesOutboundRule) string { return v.Action }).(pulumi.StringOutput)
}

// The ip this rule apply to. If no `ip` nor `ipRange` are specified, rule will apply to all ip. Only one of `ip` and `ipRange` should be specified.
func (o InstanceSecurityGroupRulesOutboundRuleOutput) Ip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceSecurityGroupRulesOutboundRule) *string { return v.Ip }).(pulumi.StringPtrOutput)
}

// The ip range (e.g `192.168.1.0/24`) this rule applies to. If no `ip` nor `ipRange` are specified, rule will apply to all ip. Only one of `ip` and `ipRange` should be specified.
func (o InstanceSecurityGroupRulesOutboundRuleOutput) IpRange() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceSecurityGroupRulesOutboundRule) *string { return v.IpRange }).(pulumi.StringPtrOutput)
}

// The port this rule apply to. If no port is specified, rule will apply to all port.
func (o InstanceSecurityGroupRulesOutboundRuleOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InstanceSecurityGroupRulesOutboundRule) *int { return v.Port }).(pulumi.IntPtrOutput)
}

func (o InstanceSecurityGroupRulesOutboundRuleOutput) PortRange() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceSecurityGroupRulesOutboundRule) *string { return v.PortRange }).(pulumi.StringPtrOutput)
}

// The protocol this rule apply to. Possible values are: `TCP`, `UDP`, `ICMP` or `ANY`.
func (o InstanceSecurityGroupRulesOutboundRuleOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceSecurityGroupRulesOutboundRule) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

type InstanceSecurityGroupRulesOutboundRuleArrayOutput struct{ *pulumi.OutputState }

func (InstanceSecurityGroupRulesOutboundRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceSecurityGroupRulesOutboundRule)(nil)).Elem()
}

func (o InstanceSecurityGroupRulesOutboundRuleArrayOutput) ToInstanceSecurityGroupRulesOutboundRuleArrayOutput() InstanceSecurityGroupRulesOutboundRuleArrayOutput {
	return o
}

func (o InstanceSecurityGroupRulesOutboundRuleArrayOutput) ToInstanceSecurityGroupRulesOutboundRuleArrayOutputWithContext(ctx context.Context) InstanceSecurityGroupRulesOutboundRuleArrayOutput {
	return o
}

func (o InstanceSecurityGroupRulesOutboundRuleArrayOutput) Index(i pulumi.IntInput) InstanceSecurityGroupRulesOutboundRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InstanceSecurityGroupRulesOutboundRule {
		return vs[0].([]InstanceSecurityGroupRulesOutboundRule)[vs[1].(int)]
	}).(InstanceSecurityGroupRulesOutboundRuleOutput)
}

type InstanceServerPrivateNetwork struct {
	MacAddress *string `pulumi:"macAddress"`
	PnId       string  `pulumi:"pnId"`
	Status     *string `pulumi:"status"`
	// `zone`) The zone in which the server should be created.
	Zone *string `pulumi:"zone"`
}

// InstanceServerPrivateNetworkInput is an input type that accepts InstanceServerPrivateNetworkArgs and InstanceServerPrivateNetworkOutput values.
// You can construct a concrete instance of `InstanceServerPrivateNetworkInput` via:
//
//          InstanceServerPrivateNetworkArgs{...}
type InstanceServerPrivateNetworkInput interface {
	pulumi.Input

	ToInstanceServerPrivateNetworkOutput() InstanceServerPrivateNetworkOutput
	ToInstanceServerPrivateNetworkOutputWithContext(context.Context) InstanceServerPrivateNetworkOutput
}

type InstanceServerPrivateNetworkArgs struct {
	MacAddress pulumi.StringPtrInput `pulumi:"macAddress"`
	PnId       pulumi.StringInput    `pulumi:"pnId"`
	Status     pulumi.StringPtrInput `pulumi:"status"`
	// `zone`) The zone in which the server should be created.
	Zone pulumi.StringPtrInput `pulumi:"zone"`
}

func (InstanceServerPrivateNetworkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceServerPrivateNetwork)(nil)).Elem()
}

func (i InstanceServerPrivateNetworkArgs) ToInstanceServerPrivateNetworkOutput() InstanceServerPrivateNetworkOutput {
	return i.ToInstanceServerPrivateNetworkOutputWithContext(context.Background())
}

func (i InstanceServerPrivateNetworkArgs) ToInstanceServerPrivateNetworkOutputWithContext(ctx context.Context) InstanceServerPrivateNetworkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceServerPrivateNetworkOutput)
}

// InstanceServerPrivateNetworkArrayInput is an input type that accepts InstanceServerPrivateNetworkArray and InstanceServerPrivateNetworkArrayOutput values.
// You can construct a concrete instance of `InstanceServerPrivateNetworkArrayInput` via:
//
//          InstanceServerPrivateNetworkArray{ InstanceServerPrivateNetworkArgs{...} }
type InstanceServerPrivateNetworkArrayInput interface {
	pulumi.Input

	ToInstanceServerPrivateNetworkArrayOutput() InstanceServerPrivateNetworkArrayOutput
	ToInstanceServerPrivateNetworkArrayOutputWithContext(context.Context) InstanceServerPrivateNetworkArrayOutput
}

type InstanceServerPrivateNetworkArray []InstanceServerPrivateNetworkInput

func (InstanceServerPrivateNetworkArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceServerPrivateNetwork)(nil)).Elem()
}

func (i InstanceServerPrivateNetworkArray) ToInstanceServerPrivateNetworkArrayOutput() InstanceServerPrivateNetworkArrayOutput {
	return i.ToInstanceServerPrivateNetworkArrayOutputWithContext(context.Background())
}

func (i InstanceServerPrivateNetworkArray) ToInstanceServerPrivateNetworkArrayOutputWithContext(ctx context.Context) InstanceServerPrivateNetworkArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceServerPrivateNetworkArrayOutput)
}

type InstanceServerPrivateNetworkOutput struct{ *pulumi.OutputState }

func (InstanceServerPrivateNetworkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceServerPrivateNetwork)(nil)).Elem()
}

func (o InstanceServerPrivateNetworkOutput) ToInstanceServerPrivateNetworkOutput() InstanceServerPrivateNetworkOutput {
	return o
}

func (o InstanceServerPrivateNetworkOutput) ToInstanceServerPrivateNetworkOutputWithContext(ctx context.Context) InstanceServerPrivateNetworkOutput {
	return o
}

func (o InstanceServerPrivateNetworkOutput) MacAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceServerPrivateNetwork) *string { return v.MacAddress }).(pulumi.StringPtrOutput)
}

func (o InstanceServerPrivateNetworkOutput) PnId() pulumi.StringOutput {
	return o.ApplyT(func(v InstanceServerPrivateNetwork) string { return v.PnId }).(pulumi.StringOutput)
}

func (o InstanceServerPrivateNetworkOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceServerPrivateNetwork) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// `zone`) The zone in which the server should be created.
func (o InstanceServerPrivateNetworkOutput) Zone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceServerPrivateNetwork) *string { return v.Zone }).(pulumi.StringPtrOutput)
}

type InstanceServerPrivateNetworkArrayOutput struct{ *pulumi.OutputState }

func (InstanceServerPrivateNetworkArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceServerPrivateNetwork)(nil)).Elem()
}

func (o InstanceServerPrivateNetworkArrayOutput) ToInstanceServerPrivateNetworkArrayOutput() InstanceServerPrivateNetworkArrayOutput {
	return o
}

func (o InstanceServerPrivateNetworkArrayOutput) ToInstanceServerPrivateNetworkArrayOutputWithContext(ctx context.Context) InstanceServerPrivateNetworkArrayOutput {
	return o
}

func (o InstanceServerPrivateNetworkArrayOutput) Index(i pulumi.IntInput) InstanceServerPrivateNetworkOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InstanceServerPrivateNetwork {
		return vs[0].([]InstanceServerPrivateNetwork)[vs[1].(int)]
	}).(InstanceServerPrivateNetworkOutput)
}

type InstanceServerRootVolume struct {
	Boot *bool `pulumi:"boot"`
	// Forces deletion of the root volume on instance termination.
	DeleteOnTermination *bool `pulumi:"deleteOnTermination"`
	// Size of the root volume in gigabytes.
	// To find the right size use [this endpoint](https://api.scaleway.com/instance/v1/zones/fr-par-1/products/servers) and
	// check the `volumes_constraint.{min|max}_size` (in bytes) for your `commercialType`.
	// Updates to this field will recreate a new resource.
	SizeInGb *int `pulumi:"sizeInGb"`
	// The volume ID of the root volume of the server.
	VolumeId *string `pulumi:"volumeId"`
}

// InstanceServerRootVolumeInput is an input type that accepts InstanceServerRootVolumeArgs and InstanceServerRootVolumeOutput values.
// You can construct a concrete instance of `InstanceServerRootVolumeInput` via:
//
//          InstanceServerRootVolumeArgs{...}
type InstanceServerRootVolumeInput interface {
	pulumi.Input

	ToInstanceServerRootVolumeOutput() InstanceServerRootVolumeOutput
	ToInstanceServerRootVolumeOutputWithContext(context.Context) InstanceServerRootVolumeOutput
}

type InstanceServerRootVolumeArgs struct {
	Boot pulumi.BoolPtrInput `pulumi:"boot"`
	// Forces deletion of the root volume on instance termination.
	DeleteOnTermination pulumi.BoolPtrInput `pulumi:"deleteOnTermination"`
	// Size of the root volume in gigabytes.
	// To find the right size use [this endpoint](https://api.scaleway.com/instance/v1/zones/fr-par-1/products/servers) and
	// check the `volumes_constraint.{min|max}_size` (in bytes) for your `commercialType`.
	// Updates to this field will recreate a new resource.
	SizeInGb pulumi.IntPtrInput `pulumi:"sizeInGb"`
	// The volume ID of the root volume of the server.
	VolumeId pulumi.StringPtrInput `pulumi:"volumeId"`
}

func (InstanceServerRootVolumeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceServerRootVolume)(nil)).Elem()
}

func (i InstanceServerRootVolumeArgs) ToInstanceServerRootVolumeOutput() InstanceServerRootVolumeOutput {
	return i.ToInstanceServerRootVolumeOutputWithContext(context.Background())
}

func (i InstanceServerRootVolumeArgs) ToInstanceServerRootVolumeOutputWithContext(ctx context.Context) InstanceServerRootVolumeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceServerRootVolumeOutput)
}

func (i InstanceServerRootVolumeArgs) ToInstanceServerRootVolumePtrOutput() InstanceServerRootVolumePtrOutput {
	return i.ToInstanceServerRootVolumePtrOutputWithContext(context.Background())
}

func (i InstanceServerRootVolumeArgs) ToInstanceServerRootVolumePtrOutputWithContext(ctx context.Context) InstanceServerRootVolumePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceServerRootVolumeOutput).ToInstanceServerRootVolumePtrOutputWithContext(ctx)
}

// InstanceServerRootVolumePtrInput is an input type that accepts InstanceServerRootVolumeArgs, InstanceServerRootVolumePtr and InstanceServerRootVolumePtrOutput values.
// You can construct a concrete instance of `InstanceServerRootVolumePtrInput` via:
//
//          InstanceServerRootVolumeArgs{...}
//
//  or:
//
//          nil
type InstanceServerRootVolumePtrInput interface {
	pulumi.Input

	ToInstanceServerRootVolumePtrOutput() InstanceServerRootVolumePtrOutput
	ToInstanceServerRootVolumePtrOutputWithContext(context.Context) InstanceServerRootVolumePtrOutput
}

type instanceServerRootVolumePtrType InstanceServerRootVolumeArgs

func InstanceServerRootVolumePtr(v *InstanceServerRootVolumeArgs) InstanceServerRootVolumePtrInput {
	return (*instanceServerRootVolumePtrType)(v)
}

func (*instanceServerRootVolumePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceServerRootVolume)(nil)).Elem()
}

func (i *instanceServerRootVolumePtrType) ToInstanceServerRootVolumePtrOutput() InstanceServerRootVolumePtrOutput {
	return i.ToInstanceServerRootVolumePtrOutputWithContext(context.Background())
}

func (i *instanceServerRootVolumePtrType) ToInstanceServerRootVolumePtrOutputWithContext(ctx context.Context) InstanceServerRootVolumePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceServerRootVolumePtrOutput)
}

type InstanceServerRootVolumeOutput struct{ *pulumi.OutputState }

func (InstanceServerRootVolumeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceServerRootVolume)(nil)).Elem()
}

func (o InstanceServerRootVolumeOutput) ToInstanceServerRootVolumeOutput() InstanceServerRootVolumeOutput {
	return o
}

func (o InstanceServerRootVolumeOutput) ToInstanceServerRootVolumeOutputWithContext(ctx context.Context) InstanceServerRootVolumeOutput {
	return o
}

func (o InstanceServerRootVolumeOutput) ToInstanceServerRootVolumePtrOutput() InstanceServerRootVolumePtrOutput {
	return o.ToInstanceServerRootVolumePtrOutputWithContext(context.Background())
}

func (o InstanceServerRootVolumeOutput) ToInstanceServerRootVolumePtrOutputWithContext(ctx context.Context) InstanceServerRootVolumePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InstanceServerRootVolume) *InstanceServerRootVolume {
		return &v
	}).(InstanceServerRootVolumePtrOutput)
}

func (o InstanceServerRootVolumeOutput) Boot() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v InstanceServerRootVolume) *bool { return v.Boot }).(pulumi.BoolPtrOutput)
}

// Forces deletion of the root volume on instance termination.
func (o InstanceServerRootVolumeOutput) DeleteOnTermination() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v InstanceServerRootVolume) *bool { return v.DeleteOnTermination }).(pulumi.BoolPtrOutput)
}

// Size of the root volume in gigabytes.
// To find the right size use [this endpoint](https://api.scaleway.com/instance/v1/zones/fr-par-1/products/servers) and
// check the `volumes_constraint.{min|max}_size` (in bytes) for your `commercialType`.
// Updates to this field will recreate a new resource.
func (o InstanceServerRootVolumeOutput) SizeInGb() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InstanceServerRootVolume) *int { return v.SizeInGb }).(pulumi.IntPtrOutput)
}

// The volume ID of the root volume of the server.
func (o InstanceServerRootVolumeOutput) VolumeId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceServerRootVolume) *string { return v.VolumeId }).(pulumi.StringPtrOutput)
}

type InstanceServerRootVolumePtrOutput struct{ *pulumi.OutputState }

func (InstanceServerRootVolumePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceServerRootVolume)(nil)).Elem()
}

func (o InstanceServerRootVolumePtrOutput) ToInstanceServerRootVolumePtrOutput() InstanceServerRootVolumePtrOutput {
	return o
}

func (o InstanceServerRootVolumePtrOutput) ToInstanceServerRootVolumePtrOutputWithContext(ctx context.Context) InstanceServerRootVolumePtrOutput {
	return o
}

func (o InstanceServerRootVolumePtrOutput) Elem() InstanceServerRootVolumeOutput {
	return o.ApplyT(func(v *InstanceServerRootVolume) InstanceServerRootVolume {
		if v != nil {
			return *v
		}
		var ret InstanceServerRootVolume
		return ret
	}).(InstanceServerRootVolumeOutput)
}

func (o InstanceServerRootVolumePtrOutput) Boot() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *InstanceServerRootVolume) *bool {
		if v == nil {
			return nil
		}
		return v.Boot
	}).(pulumi.BoolPtrOutput)
}

// Forces deletion of the root volume on instance termination.
func (o InstanceServerRootVolumePtrOutput) DeleteOnTermination() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *InstanceServerRootVolume) *bool {
		if v == nil {
			return nil
		}
		return v.DeleteOnTermination
	}).(pulumi.BoolPtrOutput)
}

// Size of the root volume in gigabytes.
// To find the right size use [this endpoint](https://api.scaleway.com/instance/v1/zones/fr-par-1/products/servers) and
// check the `volumes_constraint.{min|max}_size` (in bytes) for your `commercialType`.
// Updates to this field will recreate a new resource.
func (o InstanceServerRootVolumePtrOutput) SizeInGb() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *InstanceServerRootVolume) *int {
		if v == nil {
			return nil
		}
		return v.SizeInGb
	}).(pulumi.IntPtrOutput)
}

// The volume ID of the root volume of the server.
func (o InstanceServerRootVolumePtrOutput) VolumeId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InstanceServerRootVolume) *string {
		if v == nil {
			return nil
		}
		return v.VolumeId
	}).(pulumi.StringPtrOutput)
}

type IotDeviceCertificate struct {
	Crt *string `pulumi:"crt"`
	// The private key of the device, in case it is generated by Scaleway.
	Key *string `pulumi:"key"`
}

// IotDeviceCertificateInput is an input type that accepts IotDeviceCertificateArgs and IotDeviceCertificateOutput values.
// You can construct a concrete instance of `IotDeviceCertificateInput` via:
//
//          IotDeviceCertificateArgs{...}
type IotDeviceCertificateInput interface {
	pulumi.Input

	ToIotDeviceCertificateOutput() IotDeviceCertificateOutput
	ToIotDeviceCertificateOutputWithContext(context.Context) IotDeviceCertificateOutput
}

type IotDeviceCertificateArgs struct {
	Crt pulumi.StringPtrInput `pulumi:"crt"`
	// The private key of the device, in case it is generated by Scaleway.
	Key pulumi.StringPtrInput `pulumi:"key"`
}

func (IotDeviceCertificateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IotDeviceCertificate)(nil)).Elem()
}

func (i IotDeviceCertificateArgs) ToIotDeviceCertificateOutput() IotDeviceCertificateOutput {
	return i.ToIotDeviceCertificateOutputWithContext(context.Background())
}

func (i IotDeviceCertificateArgs) ToIotDeviceCertificateOutputWithContext(ctx context.Context) IotDeviceCertificateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IotDeviceCertificateOutput)
}

func (i IotDeviceCertificateArgs) ToIotDeviceCertificatePtrOutput() IotDeviceCertificatePtrOutput {
	return i.ToIotDeviceCertificatePtrOutputWithContext(context.Background())
}

func (i IotDeviceCertificateArgs) ToIotDeviceCertificatePtrOutputWithContext(ctx context.Context) IotDeviceCertificatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IotDeviceCertificateOutput).ToIotDeviceCertificatePtrOutputWithContext(ctx)
}

// IotDeviceCertificatePtrInput is an input type that accepts IotDeviceCertificateArgs, IotDeviceCertificatePtr and IotDeviceCertificatePtrOutput values.
// You can construct a concrete instance of `IotDeviceCertificatePtrInput` via:
//
//          IotDeviceCertificateArgs{...}
//
//  or:
//
//          nil
type IotDeviceCertificatePtrInput interface {
	pulumi.Input

	ToIotDeviceCertificatePtrOutput() IotDeviceCertificatePtrOutput
	ToIotDeviceCertificatePtrOutputWithContext(context.Context) IotDeviceCertificatePtrOutput
}

type iotDeviceCertificatePtrType IotDeviceCertificateArgs

func IotDeviceCertificatePtr(v *IotDeviceCertificateArgs) IotDeviceCertificatePtrInput {
	return (*iotDeviceCertificatePtrType)(v)
}

func (*iotDeviceCertificatePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IotDeviceCertificate)(nil)).Elem()
}

func (i *iotDeviceCertificatePtrType) ToIotDeviceCertificatePtrOutput() IotDeviceCertificatePtrOutput {
	return i.ToIotDeviceCertificatePtrOutputWithContext(context.Background())
}

func (i *iotDeviceCertificatePtrType) ToIotDeviceCertificatePtrOutputWithContext(ctx context.Context) IotDeviceCertificatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IotDeviceCertificatePtrOutput)
}

type IotDeviceCertificateOutput struct{ *pulumi.OutputState }

func (IotDeviceCertificateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IotDeviceCertificate)(nil)).Elem()
}

func (o IotDeviceCertificateOutput) ToIotDeviceCertificateOutput() IotDeviceCertificateOutput {
	return o
}

func (o IotDeviceCertificateOutput) ToIotDeviceCertificateOutputWithContext(ctx context.Context) IotDeviceCertificateOutput {
	return o
}

func (o IotDeviceCertificateOutput) ToIotDeviceCertificatePtrOutput() IotDeviceCertificatePtrOutput {
	return o.ToIotDeviceCertificatePtrOutputWithContext(context.Background())
}

func (o IotDeviceCertificateOutput) ToIotDeviceCertificatePtrOutputWithContext(ctx context.Context) IotDeviceCertificatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IotDeviceCertificate) *IotDeviceCertificate {
		return &v
	}).(IotDeviceCertificatePtrOutput)
}

func (o IotDeviceCertificateOutput) Crt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IotDeviceCertificate) *string { return v.Crt }).(pulumi.StringPtrOutput)
}

// The private key of the device, in case it is generated by Scaleway.
func (o IotDeviceCertificateOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IotDeviceCertificate) *string { return v.Key }).(pulumi.StringPtrOutput)
}

type IotDeviceCertificatePtrOutput struct{ *pulumi.OutputState }

func (IotDeviceCertificatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IotDeviceCertificate)(nil)).Elem()
}

func (o IotDeviceCertificatePtrOutput) ToIotDeviceCertificatePtrOutput() IotDeviceCertificatePtrOutput {
	return o
}

func (o IotDeviceCertificatePtrOutput) ToIotDeviceCertificatePtrOutputWithContext(ctx context.Context) IotDeviceCertificatePtrOutput {
	return o
}

func (o IotDeviceCertificatePtrOutput) Elem() IotDeviceCertificateOutput {
	return o.ApplyT(func(v *IotDeviceCertificate) IotDeviceCertificate {
		if v != nil {
			return *v
		}
		var ret IotDeviceCertificate
		return ret
	}).(IotDeviceCertificateOutput)
}

func (o IotDeviceCertificatePtrOutput) Crt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IotDeviceCertificate) *string {
		if v == nil {
			return nil
		}
		return v.Crt
	}).(pulumi.StringPtrOutput)
}

// The private key of the device, in case it is generated by Scaleway.
func (o IotDeviceCertificatePtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IotDeviceCertificate) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

type IotDeviceMessageFilters struct {
	// Rules used to restrict topics the device can publish to.
	Publish *IotDeviceMessageFiltersPublish `pulumi:"publish"`
	// Rules used to restrict topics the device can subscribe to.
	Subscribe *IotDeviceMessageFiltersSubscribe `pulumi:"subscribe"`
}

// IotDeviceMessageFiltersInput is an input type that accepts IotDeviceMessageFiltersArgs and IotDeviceMessageFiltersOutput values.
// You can construct a concrete instance of `IotDeviceMessageFiltersInput` via:
//
//          IotDeviceMessageFiltersArgs{...}
type IotDeviceMessageFiltersInput interface {
	pulumi.Input

	ToIotDeviceMessageFiltersOutput() IotDeviceMessageFiltersOutput
	ToIotDeviceMessageFiltersOutputWithContext(context.Context) IotDeviceMessageFiltersOutput
}

type IotDeviceMessageFiltersArgs struct {
	// Rules used to restrict topics the device can publish to.
	Publish IotDeviceMessageFiltersPublishPtrInput `pulumi:"publish"`
	// Rules used to restrict topics the device can subscribe to.
	Subscribe IotDeviceMessageFiltersSubscribePtrInput `pulumi:"subscribe"`
}

func (IotDeviceMessageFiltersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IotDeviceMessageFilters)(nil)).Elem()
}

func (i IotDeviceMessageFiltersArgs) ToIotDeviceMessageFiltersOutput() IotDeviceMessageFiltersOutput {
	return i.ToIotDeviceMessageFiltersOutputWithContext(context.Background())
}

func (i IotDeviceMessageFiltersArgs) ToIotDeviceMessageFiltersOutputWithContext(ctx context.Context) IotDeviceMessageFiltersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IotDeviceMessageFiltersOutput)
}

func (i IotDeviceMessageFiltersArgs) ToIotDeviceMessageFiltersPtrOutput() IotDeviceMessageFiltersPtrOutput {
	return i.ToIotDeviceMessageFiltersPtrOutputWithContext(context.Background())
}

func (i IotDeviceMessageFiltersArgs) ToIotDeviceMessageFiltersPtrOutputWithContext(ctx context.Context) IotDeviceMessageFiltersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IotDeviceMessageFiltersOutput).ToIotDeviceMessageFiltersPtrOutputWithContext(ctx)
}

// IotDeviceMessageFiltersPtrInput is an input type that accepts IotDeviceMessageFiltersArgs, IotDeviceMessageFiltersPtr and IotDeviceMessageFiltersPtrOutput values.
// You can construct a concrete instance of `IotDeviceMessageFiltersPtrInput` via:
//
//          IotDeviceMessageFiltersArgs{...}
//
//  or:
//
//          nil
type IotDeviceMessageFiltersPtrInput interface {
	pulumi.Input

	ToIotDeviceMessageFiltersPtrOutput() IotDeviceMessageFiltersPtrOutput
	ToIotDeviceMessageFiltersPtrOutputWithContext(context.Context) IotDeviceMessageFiltersPtrOutput
}

type iotDeviceMessageFiltersPtrType IotDeviceMessageFiltersArgs

func IotDeviceMessageFiltersPtr(v *IotDeviceMessageFiltersArgs) IotDeviceMessageFiltersPtrInput {
	return (*iotDeviceMessageFiltersPtrType)(v)
}

func (*iotDeviceMessageFiltersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IotDeviceMessageFilters)(nil)).Elem()
}

func (i *iotDeviceMessageFiltersPtrType) ToIotDeviceMessageFiltersPtrOutput() IotDeviceMessageFiltersPtrOutput {
	return i.ToIotDeviceMessageFiltersPtrOutputWithContext(context.Background())
}

func (i *iotDeviceMessageFiltersPtrType) ToIotDeviceMessageFiltersPtrOutputWithContext(ctx context.Context) IotDeviceMessageFiltersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IotDeviceMessageFiltersPtrOutput)
}

type IotDeviceMessageFiltersOutput struct{ *pulumi.OutputState }

func (IotDeviceMessageFiltersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IotDeviceMessageFilters)(nil)).Elem()
}

func (o IotDeviceMessageFiltersOutput) ToIotDeviceMessageFiltersOutput() IotDeviceMessageFiltersOutput {
	return o
}

func (o IotDeviceMessageFiltersOutput) ToIotDeviceMessageFiltersOutputWithContext(ctx context.Context) IotDeviceMessageFiltersOutput {
	return o
}

func (o IotDeviceMessageFiltersOutput) ToIotDeviceMessageFiltersPtrOutput() IotDeviceMessageFiltersPtrOutput {
	return o.ToIotDeviceMessageFiltersPtrOutputWithContext(context.Background())
}

func (o IotDeviceMessageFiltersOutput) ToIotDeviceMessageFiltersPtrOutputWithContext(ctx context.Context) IotDeviceMessageFiltersPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IotDeviceMessageFilters) *IotDeviceMessageFilters {
		return &v
	}).(IotDeviceMessageFiltersPtrOutput)
}

// Rules used to restrict topics the device can publish to.
func (o IotDeviceMessageFiltersOutput) Publish() IotDeviceMessageFiltersPublishPtrOutput {
	return o.ApplyT(func(v IotDeviceMessageFilters) *IotDeviceMessageFiltersPublish { return v.Publish }).(IotDeviceMessageFiltersPublishPtrOutput)
}

// Rules used to restrict topics the device can subscribe to.
func (o IotDeviceMessageFiltersOutput) Subscribe() IotDeviceMessageFiltersSubscribePtrOutput {
	return o.ApplyT(func(v IotDeviceMessageFilters) *IotDeviceMessageFiltersSubscribe { return v.Subscribe }).(IotDeviceMessageFiltersSubscribePtrOutput)
}

type IotDeviceMessageFiltersPtrOutput struct{ *pulumi.OutputState }

func (IotDeviceMessageFiltersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IotDeviceMessageFilters)(nil)).Elem()
}

func (o IotDeviceMessageFiltersPtrOutput) ToIotDeviceMessageFiltersPtrOutput() IotDeviceMessageFiltersPtrOutput {
	return o
}

func (o IotDeviceMessageFiltersPtrOutput) ToIotDeviceMessageFiltersPtrOutputWithContext(ctx context.Context) IotDeviceMessageFiltersPtrOutput {
	return o
}

func (o IotDeviceMessageFiltersPtrOutput) Elem() IotDeviceMessageFiltersOutput {
	return o.ApplyT(func(v *IotDeviceMessageFilters) IotDeviceMessageFilters {
		if v != nil {
			return *v
		}
		var ret IotDeviceMessageFilters
		return ret
	}).(IotDeviceMessageFiltersOutput)
}

// Rules used to restrict topics the device can publish to.
func (o IotDeviceMessageFiltersPtrOutput) Publish() IotDeviceMessageFiltersPublishPtrOutput {
	return o.ApplyT(func(v *IotDeviceMessageFilters) *IotDeviceMessageFiltersPublish {
		if v == nil {
			return nil
		}
		return v.Publish
	}).(IotDeviceMessageFiltersPublishPtrOutput)
}

// Rules used to restrict topics the device can subscribe to.
func (o IotDeviceMessageFiltersPtrOutput) Subscribe() IotDeviceMessageFiltersSubscribePtrOutput {
	return o.ApplyT(func(v *IotDeviceMessageFilters) *IotDeviceMessageFiltersSubscribe {
		if v == nil {
			return nil
		}
		return v.Subscribe
	}).(IotDeviceMessageFiltersSubscribePtrOutput)
}

type IotDeviceMessageFiltersPublish struct {
	// Same as publish rules.
	Policy *string `pulumi:"policy"`
	// Same as publish rules.
	Topics []string `pulumi:"topics"`
}

// IotDeviceMessageFiltersPublishInput is an input type that accepts IotDeviceMessageFiltersPublishArgs and IotDeviceMessageFiltersPublishOutput values.
// You can construct a concrete instance of `IotDeviceMessageFiltersPublishInput` via:
//
//          IotDeviceMessageFiltersPublishArgs{...}
type IotDeviceMessageFiltersPublishInput interface {
	pulumi.Input

	ToIotDeviceMessageFiltersPublishOutput() IotDeviceMessageFiltersPublishOutput
	ToIotDeviceMessageFiltersPublishOutputWithContext(context.Context) IotDeviceMessageFiltersPublishOutput
}

type IotDeviceMessageFiltersPublishArgs struct {
	// Same as publish rules.
	Policy pulumi.StringPtrInput `pulumi:"policy"`
	// Same as publish rules.
	Topics pulumi.StringArrayInput `pulumi:"topics"`
}

func (IotDeviceMessageFiltersPublishArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IotDeviceMessageFiltersPublish)(nil)).Elem()
}

func (i IotDeviceMessageFiltersPublishArgs) ToIotDeviceMessageFiltersPublishOutput() IotDeviceMessageFiltersPublishOutput {
	return i.ToIotDeviceMessageFiltersPublishOutputWithContext(context.Background())
}

func (i IotDeviceMessageFiltersPublishArgs) ToIotDeviceMessageFiltersPublishOutputWithContext(ctx context.Context) IotDeviceMessageFiltersPublishOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IotDeviceMessageFiltersPublishOutput)
}

func (i IotDeviceMessageFiltersPublishArgs) ToIotDeviceMessageFiltersPublishPtrOutput() IotDeviceMessageFiltersPublishPtrOutput {
	return i.ToIotDeviceMessageFiltersPublishPtrOutputWithContext(context.Background())
}

func (i IotDeviceMessageFiltersPublishArgs) ToIotDeviceMessageFiltersPublishPtrOutputWithContext(ctx context.Context) IotDeviceMessageFiltersPublishPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IotDeviceMessageFiltersPublishOutput).ToIotDeviceMessageFiltersPublishPtrOutputWithContext(ctx)
}

// IotDeviceMessageFiltersPublishPtrInput is an input type that accepts IotDeviceMessageFiltersPublishArgs, IotDeviceMessageFiltersPublishPtr and IotDeviceMessageFiltersPublishPtrOutput values.
// You can construct a concrete instance of `IotDeviceMessageFiltersPublishPtrInput` via:
//
//          IotDeviceMessageFiltersPublishArgs{...}
//
//  or:
//
//          nil
type IotDeviceMessageFiltersPublishPtrInput interface {
	pulumi.Input

	ToIotDeviceMessageFiltersPublishPtrOutput() IotDeviceMessageFiltersPublishPtrOutput
	ToIotDeviceMessageFiltersPublishPtrOutputWithContext(context.Context) IotDeviceMessageFiltersPublishPtrOutput
}

type iotDeviceMessageFiltersPublishPtrType IotDeviceMessageFiltersPublishArgs

func IotDeviceMessageFiltersPublishPtr(v *IotDeviceMessageFiltersPublishArgs) IotDeviceMessageFiltersPublishPtrInput {
	return (*iotDeviceMessageFiltersPublishPtrType)(v)
}

func (*iotDeviceMessageFiltersPublishPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IotDeviceMessageFiltersPublish)(nil)).Elem()
}

func (i *iotDeviceMessageFiltersPublishPtrType) ToIotDeviceMessageFiltersPublishPtrOutput() IotDeviceMessageFiltersPublishPtrOutput {
	return i.ToIotDeviceMessageFiltersPublishPtrOutputWithContext(context.Background())
}

func (i *iotDeviceMessageFiltersPublishPtrType) ToIotDeviceMessageFiltersPublishPtrOutputWithContext(ctx context.Context) IotDeviceMessageFiltersPublishPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IotDeviceMessageFiltersPublishPtrOutput)
}

type IotDeviceMessageFiltersPublishOutput struct{ *pulumi.OutputState }

func (IotDeviceMessageFiltersPublishOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IotDeviceMessageFiltersPublish)(nil)).Elem()
}

func (o IotDeviceMessageFiltersPublishOutput) ToIotDeviceMessageFiltersPublishOutput() IotDeviceMessageFiltersPublishOutput {
	return o
}

func (o IotDeviceMessageFiltersPublishOutput) ToIotDeviceMessageFiltersPublishOutputWithContext(ctx context.Context) IotDeviceMessageFiltersPublishOutput {
	return o
}

func (o IotDeviceMessageFiltersPublishOutput) ToIotDeviceMessageFiltersPublishPtrOutput() IotDeviceMessageFiltersPublishPtrOutput {
	return o.ToIotDeviceMessageFiltersPublishPtrOutputWithContext(context.Background())
}

func (o IotDeviceMessageFiltersPublishOutput) ToIotDeviceMessageFiltersPublishPtrOutputWithContext(ctx context.Context) IotDeviceMessageFiltersPublishPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IotDeviceMessageFiltersPublish) *IotDeviceMessageFiltersPublish {
		return &v
	}).(IotDeviceMessageFiltersPublishPtrOutput)
}

// Same as publish rules.
func (o IotDeviceMessageFiltersPublishOutput) Policy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IotDeviceMessageFiltersPublish) *string { return v.Policy }).(pulumi.StringPtrOutput)
}

// Same as publish rules.
func (o IotDeviceMessageFiltersPublishOutput) Topics() pulumi.StringArrayOutput {
	return o.ApplyT(func(v IotDeviceMessageFiltersPublish) []string { return v.Topics }).(pulumi.StringArrayOutput)
}

type IotDeviceMessageFiltersPublishPtrOutput struct{ *pulumi.OutputState }

func (IotDeviceMessageFiltersPublishPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IotDeviceMessageFiltersPublish)(nil)).Elem()
}

func (o IotDeviceMessageFiltersPublishPtrOutput) ToIotDeviceMessageFiltersPublishPtrOutput() IotDeviceMessageFiltersPublishPtrOutput {
	return o
}

func (o IotDeviceMessageFiltersPublishPtrOutput) ToIotDeviceMessageFiltersPublishPtrOutputWithContext(ctx context.Context) IotDeviceMessageFiltersPublishPtrOutput {
	return o
}

func (o IotDeviceMessageFiltersPublishPtrOutput) Elem() IotDeviceMessageFiltersPublishOutput {
	return o.ApplyT(func(v *IotDeviceMessageFiltersPublish) IotDeviceMessageFiltersPublish {
		if v != nil {
			return *v
		}
		var ret IotDeviceMessageFiltersPublish
		return ret
	}).(IotDeviceMessageFiltersPublishOutput)
}

// Same as publish rules.
func (o IotDeviceMessageFiltersPublishPtrOutput) Policy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IotDeviceMessageFiltersPublish) *string {
		if v == nil {
			return nil
		}
		return v.Policy
	}).(pulumi.StringPtrOutput)
}

// Same as publish rules.
func (o IotDeviceMessageFiltersPublishPtrOutput) Topics() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *IotDeviceMessageFiltersPublish) []string {
		if v == nil {
			return nil
		}
		return v.Topics
	}).(pulumi.StringArrayOutput)
}

type IotDeviceMessageFiltersSubscribe struct {
	// Same as publish rules.
	Policy *string `pulumi:"policy"`
	// Same as publish rules.
	Topics []string `pulumi:"topics"`
}

// IotDeviceMessageFiltersSubscribeInput is an input type that accepts IotDeviceMessageFiltersSubscribeArgs and IotDeviceMessageFiltersSubscribeOutput values.
// You can construct a concrete instance of `IotDeviceMessageFiltersSubscribeInput` via:
//
//          IotDeviceMessageFiltersSubscribeArgs{...}
type IotDeviceMessageFiltersSubscribeInput interface {
	pulumi.Input

	ToIotDeviceMessageFiltersSubscribeOutput() IotDeviceMessageFiltersSubscribeOutput
	ToIotDeviceMessageFiltersSubscribeOutputWithContext(context.Context) IotDeviceMessageFiltersSubscribeOutput
}

type IotDeviceMessageFiltersSubscribeArgs struct {
	// Same as publish rules.
	Policy pulumi.StringPtrInput `pulumi:"policy"`
	// Same as publish rules.
	Topics pulumi.StringArrayInput `pulumi:"topics"`
}

func (IotDeviceMessageFiltersSubscribeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IotDeviceMessageFiltersSubscribe)(nil)).Elem()
}

func (i IotDeviceMessageFiltersSubscribeArgs) ToIotDeviceMessageFiltersSubscribeOutput() IotDeviceMessageFiltersSubscribeOutput {
	return i.ToIotDeviceMessageFiltersSubscribeOutputWithContext(context.Background())
}

func (i IotDeviceMessageFiltersSubscribeArgs) ToIotDeviceMessageFiltersSubscribeOutputWithContext(ctx context.Context) IotDeviceMessageFiltersSubscribeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IotDeviceMessageFiltersSubscribeOutput)
}

func (i IotDeviceMessageFiltersSubscribeArgs) ToIotDeviceMessageFiltersSubscribePtrOutput() IotDeviceMessageFiltersSubscribePtrOutput {
	return i.ToIotDeviceMessageFiltersSubscribePtrOutputWithContext(context.Background())
}

func (i IotDeviceMessageFiltersSubscribeArgs) ToIotDeviceMessageFiltersSubscribePtrOutputWithContext(ctx context.Context) IotDeviceMessageFiltersSubscribePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IotDeviceMessageFiltersSubscribeOutput).ToIotDeviceMessageFiltersSubscribePtrOutputWithContext(ctx)
}

// IotDeviceMessageFiltersSubscribePtrInput is an input type that accepts IotDeviceMessageFiltersSubscribeArgs, IotDeviceMessageFiltersSubscribePtr and IotDeviceMessageFiltersSubscribePtrOutput values.
// You can construct a concrete instance of `IotDeviceMessageFiltersSubscribePtrInput` via:
//
//          IotDeviceMessageFiltersSubscribeArgs{...}
//
//  or:
//
//          nil
type IotDeviceMessageFiltersSubscribePtrInput interface {
	pulumi.Input

	ToIotDeviceMessageFiltersSubscribePtrOutput() IotDeviceMessageFiltersSubscribePtrOutput
	ToIotDeviceMessageFiltersSubscribePtrOutputWithContext(context.Context) IotDeviceMessageFiltersSubscribePtrOutput
}

type iotDeviceMessageFiltersSubscribePtrType IotDeviceMessageFiltersSubscribeArgs

func IotDeviceMessageFiltersSubscribePtr(v *IotDeviceMessageFiltersSubscribeArgs) IotDeviceMessageFiltersSubscribePtrInput {
	return (*iotDeviceMessageFiltersSubscribePtrType)(v)
}

func (*iotDeviceMessageFiltersSubscribePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IotDeviceMessageFiltersSubscribe)(nil)).Elem()
}

func (i *iotDeviceMessageFiltersSubscribePtrType) ToIotDeviceMessageFiltersSubscribePtrOutput() IotDeviceMessageFiltersSubscribePtrOutput {
	return i.ToIotDeviceMessageFiltersSubscribePtrOutputWithContext(context.Background())
}

func (i *iotDeviceMessageFiltersSubscribePtrType) ToIotDeviceMessageFiltersSubscribePtrOutputWithContext(ctx context.Context) IotDeviceMessageFiltersSubscribePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IotDeviceMessageFiltersSubscribePtrOutput)
}

type IotDeviceMessageFiltersSubscribeOutput struct{ *pulumi.OutputState }

func (IotDeviceMessageFiltersSubscribeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IotDeviceMessageFiltersSubscribe)(nil)).Elem()
}

func (o IotDeviceMessageFiltersSubscribeOutput) ToIotDeviceMessageFiltersSubscribeOutput() IotDeviceMessageFiltersSubscribeOutput {
	return o
}

func (o IotDeviceMessageFiltersSubscribeOutput) ToIotDeviceMessageFiltersSubscribeOutputWithContext(ctx context.Context) IotDeviceMessageFiltersSubscribeOutput {
	return o
}

func (o IotDeviceMessageFiltersSubscribeOutput) ToIotDeviceMessageFiltersSubscribePtrOutput() IotDeviceMessageFiltersSubscribePtrOutput {
	return o.ToIotDeviceMessageFiltersSubscribePtrOutputWithContext(context.Background())
}

func (o IotDeviceMessageFiltersSubscribeOutput) ToIotDeviceMessageFiltersSubscribePtrOutputWithContext(ctx context.Context) IotDeviceMessageFiltersSubscribePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IotDeviceMessageFiltersSubscribe) *IotDeviceMessageFiltersSubscribe {
		return &v
	}).(IotDeviceMessageFiltersSubscribePtrOutput)
}

// Same as publish rules.
func (o IotDeviceMessageFiltersSubscribeOutput) Policy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IotDeviceMessageFiltersSubscribe) *string { return v.Policy }).(pulumi.StringPtrOutput)
}

// Same as publish rules.
func (o IotDeviceMessageFiltersSubscribeOutput) Topics() pulumi.StringArrayOutput {
	return o.ApplyT(func(v IotDeviceMessageFiltersSubscribe) []string { return v.Topics }).(pulumi.StringArrayOutput)
}

type IotDeviceMessageFiltersSubscribePtrOutput struct{ *pulumi.OutputState }

func (IotDeviceMessageFiltersSubscribePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IotDeviceMessageFiltersSubscribe)(nil)).Elem()
}

func (o IotDeviceMessageFiltersSubscribePtrOutput) ToIotDeviceMessageFiltersSubscribePtrOutput() IotDeviceMessageFiltersSubscribePtrOutput {
	return o
}

func (o IotDeviceMessageFiltersSubscribePtrOutput) ToIotDeviceMessageFiltersSubscribePtrOutputWithContext(ctx context.Context) IotDeviceMessageFiltersSubscribePtrOutput {
	return o
}

func (o IotDeviceMessageFiltersSubscribePtrOutput) Elem() IotDeviceMessageFiltersSubscribeOutput {
	return o.ApplyT(func(v *IotDeviceMessageFiltersSubscribe) IotDeviceMessageFiltersSubscribe {
		if v != nil {
			return *v
		}
		var ret IotDeviceMessageFiltersSubscribe
		return ret
	}).(IotDeviceMessageFiltersSubscribeOutput)
}

// Same as publish rules.
func (o IotDeviceMessageFiltersSubscribePtrOutput) Policy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IotDeviceMessageFiltersSubscribe) *string {
		if v == nil {
			return nil
		}
		return v.Policy
	}).(pulumi.StringPtrOutput)
}

// Same as publish rules.
func (o IotDeviceMessageFiltersSubscribePtrOutput) Topics() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *IotDeviceMessageFiltersSubscribe) []string {
		if v == nil {
			return nil
		}
		return v.Topics
	}).(pulumi.StringArrayOutput)
}

type IotRouteDatabase struct {
	Dbname   string `pulumi:"dbname"`
	Host     string `pulumi:"host"`
	Password string `pulumi:"password"`
	Port     int    `pulumi:"port"`
	Query    string `pulumi:"query"`
	Username string `pulumi:"username"`
}

// IotRouteDatabaseInput is an input type that accepts IotRouteDatabaseArgs and IotRouteDatabaseOutput values.
// You can construct a concrete instance of `IotRouteDatabaseInput` via:
//
//          IotRouteDatabaseArgs{...}
type IotRouteDatabaseInput interface {
	pulumi.Input

	ToIotRouteDatabaseOutput() IotRouteDatabaseOutput
	ToIotRouteDatabaseOutputWithContext(context.Context) IotRouteDatabaseOutput
}

type IotRouteDatabaseArgs struct {
	Dbname   pulumi.StringInput `pulumi:"dbname"`
	Host     pulumi.StringInput `pulumi:"host"`
	Password pulumi.StringInput `pulumi:"password"`
	Port     pulumi.IntInput    `pulumi:"port"`
	Query    pulumi.StringInput `pulumi:"query"`
	Username pulumi.StringInput `pulumi:"username"`
}

func (IotRouteDatabaseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IotRouteDatabase)(nil)).Elem()
}

func (i IotRouteDatabaseArgs) ToIotRouteDatabaseOutput() IotRouteDatabaseOutput {
	return i.ToIotRouteDatabaseOutputWithContext(context.Background())
}

func (i IotRouteDatabaseArgs) ToIotRouteDatabaseOutputWithContext(ctx context.Context) IotRouteDatabaseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IotRouteDatabaseOutput)
}

func (i IotRouteDatabaseArgs) ToIotRouteDatabasePtrOutput() IotRouteDatabasePtrOutput {
	return i.ToIotRouteDatabasePtrOutputWithContext(context.Background())
}

func (i IotRouteDatabaseArgs) ToIotRouteDatabasePtrOutputWithContext(ctx context.Context) IotRouteDatabasePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IotRouteDatabaseOutput).ToIotRouteDatabasePtrOutputWithContext(ctx)
}

// IotRouteDatabasePtrInput is an input type that accepts IotRouteDatabaseArgs, IotRouteDatabasePtr and IotRouteDatabasePtrOutput values.
// You can construct a concrete instance of `IotRouteDatabasePtrInput` via:
//
//          IotRouteDatabaseArgs{...}
//
//  or:
//
//          nil
type IotRouteDatabasePtrInput interface {
	pulumi.Input

	ToIotRouteDatabasePtrOutput() IotRouteDatabasePtrOutput
	ToIotRouteDatabasePtrOutputWithContext(context.Context) IotRouteDatabasePtrOutput
}

type iotRouteDatabasePtrType IotRouteDatabaseArgs

func IotRouteDatabasePtr(v *IotRouteDatabaseArgs) IotRouteDatabasePtrInput {
	return (*iotRouteDatabasePtrType)(v)
}

func (*iotRouteDatabasePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IotRouteDatabase)(nil)).Elem()
}

func (i *iotRouteDatabasePtrType) ToIotRouteDatabasePtrOutput() IotRouteDatabasePtrOutput {
	return i.ToIotRouteDatabasePtrOutputWithContext(context.Background())
}

func (i *iotRouteDatabasePtrType) ToIotRouteDatabasePtrOutputWithContext(ctx context.Context) IotRouteDatabasePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IotRouteDatabasePtrOutput)
}

type IotRouteDatabaseOutput struct{ *pulumi.OutputState }

func (IotRouteDatabaseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IotRouteDatabase)(nil)).Elem()
}

func (o IotRouteDatabaseOutput) ToIotRouteDatabaseOutput() IotRouteDatabaseOutput {
	return o
}

func (o IotRouteDatabaseOutput) ToIotRouteDatabaseOutputWithContext(ctx context.Context) IotRouteDatabaseOutput {
	return o
}

func (o IotRouteDatabaseOutput) ToIotRouteDatabasePtrOutput() IotRouteDatabasePtrOutput {
	return o.ToIotRouteDatabasePtrOutputWithContext(context.Background())
}

func (o IotRouteDatabaseOutput) ToIotRouteDatabasePtrOutputWithContext(ctx context.Context) IotRouteDatabasePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IotRouteDatabase) *IotRouteDatabase {
		return &v
	}).(IotRouteDatabasePtrOutput)
}

func (o IotRouteDatabaseOutput) Dbname() pulumi.StringOutput {
	return o.ApplyT(func(v IotRouteDatabase) string { return v.Dbname }).(pulumi.StringOutput)
}

func (o IotRouteDatabaseOutput) Host() pulumi.StringOutput {
	return o.ApplyT(func(v IotRouteDatabase) string { return v.Host }).(pulumi.StringOutput)
}

func (o IotRouteDatabaseOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v IotRouteDatabase) string { return v.Password }).(pulumi.StringOutput)
}

func (o IotRouteDatabaseOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v IotRouteDatabase) int { return v.Port }).(pulumi.IntOutput)
}

func (o IotRouteDatabaseOutput) Query() pulumi.StringOutput {
	return o.ApplyT(func(v IotRouteDatabase) string { return v.Query }).(pulumi.StringOutput)
}

func (o IotRouteDatabaseOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v IotRouteDatabase) string { return v.Username }).(pulumi.StringOutput)
}

type IotRouteDatabasePtrOutput struct{ *pulumi.OutputState }

func (IotRouteDatabasePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IotRouteDatabase)(nil)).Elem()
}

func (o IotRouteDatabasePtrOutput) ToIotRouteDatabasePtrOutput() IotRouteDatabasePtrOutput {
	return o
}

func (o IotRouteDatabasePtrOutput) ToIotRouteDatabasePtrOutputWithContext(ctx context.Context) IotRouteDatabasePtrOutput {
	return o
}

func (o IotRouteDatabasePtrOutput) Elem() IotRouteDatabaseOutput {
	return o.ApplyT(func(v *IotRouteDatabase) IotRouteDatabase {
		if v != nil {
			return *v
		}
		var ret IotRouteDatabase
		return ret
	}).(IotRouteDatabaseOutput)
}

func (o IotRouteDatabasePtrOutput) Dbname() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IotRouteDatabase) *string {
		if v == nil {
			return nil
		}
		return &v.Dbname
	}).(pulumi.StringPtrOutput)
}

func (o IotRouteDatabasePtrOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IotRouteDatabase) *string {
		if v == nil {
			return nil
		}
		return &v.Host
	}).(pulumi.StringPtrOutput)
}

func (o IotRouteDatabasePtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IotRouteDatabase) *string {
		if v == nil {
			return nil
		}
		return &v.Password
	}).(pulumi.StringPtrOutput)
}

func (o IotRouteDatabasePtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *IotRouteDatabase) *int {
		if v == nil {
			return nil
		}
		return &v.Port
	}).(pulumi.IntPtrOutput)
}

func (o IotRouteDatabasePtrOutput) Query() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IotRouteDatabase) *string {
		if v == nil {
			return nil
		}
		return &v.Query
	}).(pulumi.StringPtrOutput)
}

func (o IotRouteDatabasePtrOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IotRouteDatabase) *string {
		if v == nil {
			return nil
		}
		return &v.Username
	}).(pulumi.StringPtrOutput)
}

type IotRouteRest struct {
	Headers map[string]string `pulumi:"headers"`
	Uri     string            `pulumi:"uri"`
	Verb    string            `pulumi:"verb"`
}

// IotRouteRestInput is an input type that accepts IotRouteRestArgs and IotRouteRestOutput values.
// You can construct a concrete instance of `IotRouteRestInput` via:
//
//          IotRouteRestArgs{...}
type IotRouteRestInput interface {
	pulumi.Input

	ToIotRouteRestOutput() IotRouteRestOutput
	ToIotRouteRestOutputWithContext(context.Context) IotRouteRestOutput
}

type IotRouteRestArgs struct {
	Headers pulumi.StringMapInput `pulumi:"headers"`
	Uri     pulumi.StringInput    `pulumi:"uri"`
	Verb    pulumi.StringInput    `pulumi:"verb"`
}

func (IotRouteRestArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IotRouteRest)(nil)).Elem()
}

func (i IotRouteRestArgs) ToIotRouteRestOutput() IotRouteRestOutput {
	return i.ToIotRouteRestOutputWithContext(context.Background())
}

func (i IotRouteRestArgs) ToIotRouteRestOutputWithContext(ctx context.Context) IotRouteRestOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IotRouteRestOutput)
}

func (i IotRouteRestArgs) ToIotRouteRestPtrOutput() IotRouteRestPtrOutput {
	return i.ToIotRouteRestPtrOutputWithContext(context.Background())
}

func (i IotRouteRestArgs) ToIotRouteRestPtrOutputWithContext(ctx context.Context) IotRouteRestPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IotRouteRestOutput).ToIotRouteRestPtrOutputWithContext(ctx)
}

// IotRouteRestPtrInput is an input type that accepts IotRouteRestArgs, IotRouteRestPtr and IotRouteRestPtrOutput values.
// You can construct a concrete instance of `IotRouteRestPtrInput` via:
//
//          IotRouteRestArgs{...}
//
//  or:
//
//          nil
type IotRouteRestPtrInput interface {
	pulumi.Input

	ToIotRouteRestPtrOutput() IotRouteRestPtrOutput
	ToIotRouteRestPtrOutputWithContext(context.Context) IotRouteRestPtrOutput
}

type iotRouteRestPtrType IotRouteRestArgs

func IotRouteRestPtr(v *IotRouteRestArgs) IotRouteRestPtrInput {
	return (*iotRouteRestPtrType)(v)
}

func (*iotRouteRestPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IotRouteRest)(nil)).Elem()
}

func (i *iotRouteRestPtrType) ToIotRouteRestPtrOutput() IotRouteRestPtrOutput {
	return i.ToIotRouteRestPtrOutputWithContext(context.Background())
}

func (i *iotRouteRestPtrType) ToIotRouteRestPtrOutputWithContext(ctx context.Context) IotRouteRestPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IotRouteRestPtrOutput)
}

type IotRouteRestOutput struct{ *pulumi.OutputState }

func (IotRouteRestOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IotRouteRest)(nil)).Elem()
}

func (o IotRouteRestOutput) ToIotRouteRestOutput() IotRouteRestOutput {
	return o
}

func (o IotRouteRestOutput) ToIotRouteRestOutputWithContext(ctx context.Context) IotRouteRestOutput {
	return o
}

func (o IotRouteRestOutput) ToIotRouteRestPtrOutput() IotRouteRestPtrOutput {
	return o.ToIotRouteRestPtrOutputWithContext(context.Background())
}

func (o IotRouteRestOutput) ToIotRouteRestPtrOutputWithContext(ctx context.Context) IotRouteRestPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IotRouteRest) *IotRouteRest {
		return &v
	}).(IotRouteRestPtrOutput)
}

func (o IotRouteRestOutput) Headers() pulumi.StringMapOutput {
	return o.ApplyT(func(v IotRouteRest) map[string]string { return v.Headers }).(pulumi.StringMapOutput)
}

func (o IotRouteRestOutput) Uri() pulumi.StringOutput {
	return o.ApplyT(func(v IotRouteRest) string { return v.Uri }).(pulumi.StringOutput)
}

func (o IotRouteRestOutput) Verb() pulumi.StringOutput {
	return o.ApplyT(func(v IotRouteRest) string { return v.Verb }).(pulumi.StringOutput)
}

type IotRouteRestPtrOutput struct{ *pulumi.OutputState }

func (IotRouteRestPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IotRouteRest)(nil)).Elem()
}

func (o IotRouteRestPtrOutput) ToIotRouteRestPtrOutput() IotRouteRestPtrOutput {
	return o
}

func (o IotRouteRestPtrOutput) ToIotRouteRestPtrOutputWithContext(ctx context.Context) IotRouteRestPtrOutput {
	return o
}

func (o IotRouteRestPtrOutput) Elem() IotRouteRestOutput {
	return o.ApplyT(func(v *IotRouteRest) IotRouteRest {
		if v != nil {
			return *v
		}
		var ret IotRouteRest
		return ret
	}).(IotRouteRestOutput)
}

func (o IotRouteRestPtrOutput) Headers() pulumi.StringMapOutput {
	return o.ApplyT(func(v *IotRouteRest) map[string]string {
		if v == nil {
			return nil
		}
		return v.Headers
	}).(pulumi.StringMapOutput)
}

func (o IotRouteRestPtrOutput) Uri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IotRouteRest) *string {
		if v == nil {
			return nil
		}
		return &v.Uri
	}).(pulumi.StringPtrOutput)
}

func (o IotRouteRestPtrOutput) Verb() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IotRouteRest) *string {
		if v == nil {
			return nil
		}
		return &v.Verb
	}).(pulumi.StringPtrOutput)
}

type IotRouteS3 struct {
	BucketName   string  `pulumi:"bucketName"`
	BucketRegion string  `pulumi:"bucketRegion"`
	ObjectPrefix *string `pulumi:"objectPrefix"`
	Strategy     string  `pulumi:"strategy"`
}

// IotRouteS3Input is an input type that accepts IotRouteS3Args and IotRouteS3Output values.
// You can construct a concrete instance of `IotRouteS3Input` via:
//
//          IotRouteS3Args{...}
type IotRouteS3Input interface {
	pulumi.Input

	ToIotRouteS3Output() IotRouteS3Output
	ToIotRouteS3OutputWithContext(context.Context) IotRouteS3Output
}

type IotRouteS3Args struct {
	BucketName   pulumi.StringInput    `pulumi:"bucketName"`
	BucketRegion pulumi.StringInput    `pulumi:"bucketRegion"`
	ObjectPrefix pulumi.StringPtrInput `pulumi:"objectPrefix"`
	Strategy     pulumi.StringInput    `pulumi:"strategy"`
}

func (IotRouteS3Args) ElementType() reflect.Type {
	return reflect.TypeOf((*IotRouteS3)(nil)).Elem()
}

func (i IotRouteS3Args) ToIotRouteS3Output() IotRouteS3Output {
	return i.ToIotRouteS3OutputWithContext(context.Background())
}

func (i IotRouteS3Args) ToIotRouteS3OutputWithContext(ctx context.Context) IotRouteS3Output {
	return pulumi.ToOutputWithContext(ctx, i).(IotRouteS3Output)
}

func (i IotRouteS3Args) ToIotRouteS3PtrOutput() IotRouteS3PtrOutput {
	return i.ToIotRouteS3PtrOutputWithContext(context.Background())
}

func (i IotRouteS3Args) ToIotRouteS3PtrOutputWithContext(ctx context.Context) IotRouteS3PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IotRouteS3Output).ToIotRouteS3PtrOutputWithContext(ctx)
}

// IotRouteS3PtrInput is an input type that accepts IotRouteS3Args, IotRouteS3Ptr and IotRouteS3PtrOutput values.
// You can construct a concrete instance of `IotRouteS3PtrInput` via:
//
//          IotRouteS3Args{...}
//
//  or:
//
//          nil
type IotRouteS3PtrInput interface {
	pulumi.Input

	ToIotRouteS3PtrOutput() IotRouteS3PtrOutput
	ToIotRouteS3PtrOutputWithContext(context.Context) IotRouteS3PtrOutput
}

type iotRouteS3PtrType IotRouteS3Args

func IotRouteS3Ptr(v *IotRouteS3Args) IotRouteS3PtrInput {
	return (*iotRouteS3PtrType)(v)
}

func (*iotRouteS3PtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IotRouteS3)(nil)).Elem()
}

func (i *iotRouteS3PtrType) ToIotRouteS3PtrOutput() IotRouteS3PtrOutput {
	return i.ToIotRouteS3PtrOutputWithContext(context.Background())
}

func (i *iotRouteS3PtrType) ToIotRouteS3PtrOutputWithContext(ctx context.Context) IotRouteS3PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IotRouteS3PtrOutput)
}

type IotRouteS3Output struct{ *pulumi.OutputState }

func (IotRouteS3Output) ElementType() reflect.Type {
	return reflect.TypeOf((*IotRouteS3)(nil)).Elem()
}

func (o IotRouteS3Output) ToIotRouteS3Output() IotRouteS3Output {
	return o
}

func (o IotRouteS3Output) ToIotRouteS3OutputWithContext(ctx context.Context) IotRouteS3Output {
	return o
}

func (o IotRouteS3Output) ToIotRouteS3PtrOutput() IotRouteS3PtrOutput {
	return o.ToIotRouteS3PtrOutputWithContext(context.Background())
}

func (o IotRouteS3Output) ToIotRouteS3PtrOutputWithContext(ctx context.Context) IotRouteS3PtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IotRouteS3) *IotRouteS3 {
		return &v
	}).(IotRouteS3PtrOutput)
}

func (o IotRouteS3Output) BucketName() pulumi.StringOutput {
	return o.ApplyT(func(v IotRouteS3) string { return v.BucketName }).(pulumi.StringOutput)
}

func (o IotRouteS3Output) BucketRegion() pulumi.StringOutput {
	return o.ApplyT(func(v IotRouteS3) string { return v.BucketRegion }).(pulumi.StringOutput)
}

func (o IotRouteS3Output) ObjectPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IotRouteS3) *string { return v.ObjectPrefix }).(pulumi.StringPtrOutput)
}

func (o IotRouteS3Output) Strategy() pulumi.StringOutput {
	return o.ApplyT(func(v IotRouteS3) string { return v.Strategy }).(pulumi.StringOutput)
}

type IotRouteS3PtrOutput struct{ *pulumi.OutputState }

func (IotRouteS3PtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IotRouteS3)(nil)).Elem()
}

func (o IotRouteS3PtrOutput) ToIotRouteS3PtrOutput() IotRouteS3PtrOutput {
	return o
}

func (o IotRouteS3PtrOutput) ToIotRouteS3PtrOutputWithContext(ctx context.Context) IotRouteS3PtrOutput {
	return o
}

func (o IotRouteS3PtrOutput) Elem() IotRouteS3Output {
	return o.ApplyT(func(v *IotRouteS3) IotRouteS3 {
		if v != nil {
			return *v
		}
		var ret IotRouteS3
		return ret
	}).(IotRouteS3Output)
}

func (o IotRouteS3PtrOutput) BucketName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IotRouteS3) *string {
		if v == nil {
			return nil
		}
		return &v.BucketName
	}).(pulumi.StringPtrOutput)
}

func (o IotRouteS3PtrOutput) BucketRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IotRouteS3) *string {
		if v == nil {
			return nil
		}
		return &v.BucketRegion
	}).(pulumi.StringPtrOutput)
}

func (o IotRouteS3PtrOutput) ObjectPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IotRouteS3) *string {
		if v == nil {
			return nil
		}
		return v.ObjectPrefix
	}).(pulumi.StringPtrOutput)
}

func (o IotRouteS3PtrOutput) Strategy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IotRouteS3) *string {
		if v == nil {
			return nil
		}
		return &v.Strategy
	}).(pulumi.StringPtrOutput)
}

type KubernetesClusterAutoUpgrade struct {
	// Set to `true` to enable Kubernetes patch version auto upgrades.
	// > **Important:** When enabling auto upgrades, the `version` field take a minor version like x.y (ie 1.18).
	Enable bool `pulumi:"enable"`
	// The day of the auto upgrade maintenance window (`monday` to `sunday`, or `any`).
	MaintenanceWindowDay string `pulumi:"maintenanceWindowDay"`
	// The start hour (UTC) of the 2-hour auto upgrade maintenance window (0 to 23).
	MaintenanceWindowStartHour int `pulumi:"maintenanceWindowStartHour"`
}

// KubernetesClusterAutoUpgradeInput is an input type that accepts KubernetesClusterAutoUpgradeArgs and KubernetesClusterAutoUpgradeOutput values.
// You can construct a concrete instance of `KubernetesClusterAutoUpgradeInput` via:
//
//          KubernetesClusterAutoUpgradeArgs{...}
type KubernetesClusterAutoUpgradeInput interface {
	pulumi.Input

	ToKubernetesClusterAutoUpgradeOutput() KubernetesClusterAutoUpgradeOutput
	ToKubernetesClusterAutoUpgradeOutputWithContext(context.Context) KubernetesClusterAutoUpgradeOutput
}

type KubernetesClusterAutoUpgradeArgs struct {
	// Set to `true` to enable Kubernetes patch version auto upgrades.
	// > **Important:** When enabling auto upgrades, the `version` field take a minor version like x.y (ie 1.18).
	Enable pulumi.BoolInput `pulumi:"enable"`
	// The day of the auto upgrade maintenance window (`monday` to `sunday`, or `any`).
	MaintenanceWindowDay pulumi.StringInput `pulumi:"maintenanceWindowDay"`
	// The start hour (UTC) of the 2-hour auto upgrade maintenance window (0 to 23).
	MaintenanceWindowStartHour pulumi.IntInput `pulumi:"maintenanceWindowStartHour"`
}

func (KubernetesClusterAutoUpgradeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesClusterAutoUpgrade)(nil)).Elem()
}

func (i KubernetesClusterAutoUpgradeArgs) ToKubernetesClusterAutoUpgradeOutput() KubernetesClusterAutoUpgradeOutput {
	return i.ToKubernetesClusterAutoUpgradeOutputWithContext(context.Background())
}

func (i KubernetesClusterAutoUpgradeArgs) ToKubernetesClusterAutoUpgradeOutputWithContext(ctx context.Context) KubernetesClusterAutoUpgradeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterAutoUpgradeOutput)
}

func (i KubernetesClusterAutoUpgradeArgs) ToKubernetesClusterAutoUpgradePtrOutput() KubernetesClusterAutoUpgradePtrOutput {
	return i.ToKubernetesClusterAutoUpgradePtrOutputWithContext(context.Background())
}

func (i KubernetesClusterAutoUpgradeArgs) ToKubernetesClusterAutoUpgradePtrOutputWithContext(ctx context.Context) KubernetesClusterAutoUpgradePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterAutoUpgradeOutput).ToKubernetesClusterAutoUpgradePtrOutputWithContext(ctx)
}

// KubernetesClusterAutoUpgradePtrInput is an input type that accepts KubernetesClusterAutoUpgradeArgs, KubernetesClusterAutoUpgradePtr and KubernetesClusterAutoUpgradePtrOutput values.
// You can construct a concrete instance of `KubernetesClusterAutoUpgradePtrInput` via:
//
//          KubernetesClusterAutoUpgradeArgs{...}
//
//  or:
//
//          nil
type KubernetesClusterAutoUpgradePtrInput interface {
	pulumi.Input

	ToKubernetesClusterAutoUpgradePtrOutput() KubernetesClusterAutoUpgradePtrOutput
	ToKubernetesClusterAutoUpgradePtrOutputWithContext(context.Context) KubernetesClusterAutoUpgradePtrOutput
}

type kubernetesClusterAutoUpgradePtrType KubernetesClusterAutoUpgradeArgs

func KubernetesClusterAutoUpgradePtr(v *KubernetesClusterAutoUpgradeArgs) KubernetesClusterAutoUpgradePtrInput {
	return (*kubernetesClusterAutoUpgradePtrType)(v)
}

func (*kubernetesClusterAutoUpgradePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesClusterAutoUpgrade)(nil)).Elem()
}

func (i *kubernetesClusterAutoUpgradePtrType) ToKubernetesClusterAutoUpgradePtrOutput() KubernetesClusterAutoUpgradePtrOutput {
	return i.ToKubernetesClusterAutoUpgradePtrOutputWithContext(context.Background())
}

func (i *kubernetesClusterAutoUpgradePtrType) ToKubernetesClusterAutoUpgradePtrOutputWithContext(ctx context.Context) KubernetesClusterAutoUpgradePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterAutoUpgradePtrOutput)
}

type KubernetesClusterAutoUpgradeOutput struct{ *pulumi.OutputState }

func (KubernetesClusterAutoUpgradeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesClusterAutoUpgrade)(nil)).Elem()
}

func (o KubernetesClusterAutoUpgradeOutput) ToKubernetesClusterAutoUpgradeOutput() KubernetesClusterAutoUpgradeOutput {
	return o
}

func (o KubernetesClusterAutoUpgradeOutput) ToKubernetesClusterAutoUpgradeOutputWithContext(ctx context.Context) KubernetesClusterAutoUpgradeOutput {
	return o
}

func (o KubernetesClusterAutoUpgradeOutput) ToKubernetesClusterAutoUpgradePtrOutput() KubernetesClusterAutoUpgradePtrOutput {
	return o.ToKubernetesClusterAutoUpgradePtrOutputWithContext(context.Background())
}

func (o KubernetesClusterAutoUpgradeOutput) ToKubernetesClusterAutoUpgradePtrOutputWithContext(ctx context.Context) KubernetesClusterAutoUpgradePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KubernetesClusterAutoUpgrade) *KubernetesClusterAutoUpgrade {
		return &v
	}).(KubernetesClusterAutoUpgradePtrOutput)
}

// Set to `true` to enable Kubernetes patch version auto upgrades.
// > **Important:** When enabling auto upgrades, the `version` field take a minor version like x.y (ie 1.18).
func (o KubernetesClusterAutoUpgradeOutput) Enable() pulumi.BoolOutput {
	return o.ApplyT(func(v KubernetesClusterAutoUpgrade) bool { return v.Enable }).(pulumi.BoolOutput)
}

// The day of the auto upgrade maintenance window (`monday` to `sunday`, or `any`).
func (o KubernetesClusterAutoUpgradeOutput) MaintenanceWindowDay() pulumi.StringOutput {
	return o.ApplyT(func(v KubernetesClusterAutoUpgrade) string { return v.MaintenanceWindowDay }).(pulumi.StringOutput)
}

// The start hour (UTC) of the 2-hour auto upgrade maintenance window (0 to 23).
func (o KubernetesClusterAutoUpgradeOutput) MaintenanceWindowStartHour() pulumi.IntOutput {
	return o.ApplyT(func(v KubernetesClusterAutoUpgrade) int { return v.MaintenanceWindowStartHour }).(pulumi.IntOutput)
}

type KubernetesClusterAutoUpgradePtrOutput struct{ *pulumi.OutputState }

func (KubernetesClusterAutoUpgradePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesClusterAutoUpgrade)(nil)).Elem()
}

func (o KubernetesClusterAutoUpgradePtrOutput) ToKubernetesClusterAutoUpgradePtrOutput() KubernetesClusterAutoUpgradePtrOutput {
	return o
}

func (o KubernetesClusterAutoUpgradePtrOutput) ToKubernetesClusterAutoUpgradePtrOutputWithContext(ctx context.Context) KubernetesClusterAutoUpgradePtrOutput {
	return o
}

func (o KubernetesClusterAutoUpgradePtrOutput) Elem() KubernetesClusterAutoUpgradeOutput {
	return o.ApplyT(func(v *KubernetesClusterAutoUpgrade) KubernetesClusterAutoUpgrade {
		if v != nil {
			return *v
		}
		var ret KubernetesClusterAutoUpgrade
		return ret
	}).(KubernetesClusterAutoUpgradeOutput)
}

// Set to `true` to enable Kubernetes patch version auto upgrades.
// > **Important:** When enabling auto upgrades, the `version` field take a minor version like x.y (ie 1.18).
func (o KubernetesClusterAutoUpgradePtrOutput) Enable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterAutoUpgrade) *bool {
		if v == nil {
			return nil
		}
		return &v.Enable
	}).(pulumi.BoolPtrOutput)
}

// The day of the auto upgrade maintenance window (`monday` to `sunday`, or `any`).
func (o KubernetesClusterAutoUpgradePtrOutput) MaintenanceWindowDay() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterAutoUpgrade) *string {
		if v == nil {
			return nil
		}
		return &v.MaintenanceWindowDay
	}).(pulumi.StringPtrOutput)
}

// The start hour (UTC) of the 2-hour auto upgrade maintenance window (0 to 23).
func (o KubernetesClusterAutoUpgradePtrOutput) MaintenanceWindowStartHour() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterAutoUpgrade) *int {
		if v == nil {
			return nil
		}
		return &v.MaintenanceWindowStartHour
	}).(pulumi.IntPtrOutput)
}

type KubernetesClusterAutoscalerConfig struct {
	// Detect similar node groups and balance the number of nodes between them.
	BalanceSimilarNodeGroups *bool `pulumi:"balanceSimilarNodeGroups"`
	// Disables the scale down feature of the autoscaler.
	DisableScaleDown *bool `pulumi:"disableScaleDown"`
	// Type of resource estimator to be used in scale up.
	Estimator *string `pulumi:"estimator"`
	// Type of node group expander to be used in scale up.
	Expander *string `pulumi:"expander"`
	// Pods with priority below cutoff will be expendable. They can be killed without any consideration during scale down and they don't cause scale up. Pods with null priority (PodPriority disabled) are non expendable.
	ExpendablePodsPriorityCutoff *int `pulumi:"expendablePodsPriorityCutoff"`
	// Ignore DaemonSet pods when calculating resource utilization for scaling down.
	IgnoreDaemonsetsUtilization *bool `pulumi:"ignoreDaemonsetsUtilization"`
	// Maximum number of seconds the cluster autoscaler waits for pod termination when trying to scale down a node
	MaxGracefulTerminationSec *int `pulumi:"maxGracefulTerminationSec"`
	// How long after scale up that scale down evaluation resumes.
	ScaleDownDelayAfterAdd *string `pulumi:"scaleDownDelayAfterAdd"`
	// How long a node should be unneeded before it is eligible for scale down.
	ScaleDownUnneededTime *string `pulumi:"scaleDownUnneededTime"`
	// Node utilization level, defined as sum of requested resources divided by capacity, below which a node can be considered for scale down
	ScaleDownUtilizationThreshold *float64 `pulumi:"scaleDownUtilizationThreshold"`
}

// KubernetesClusterAutoscalerConfigInput is an input type that accepts KubernetesClusterAutoscalerConfigArgs and KubernetesClusterAutoscalerConfigOutput values.
// You can construct a concrete instance of `KubernetesClusterAutoscalerConfigInput` via:
//
//          KubernetesClusterAutoscalerConfigArgs{...}
type KubernetesClusterAutoscalerConfigInput interface {
	pulumi.Input

	ToKubernetesClusterAutoscalerConfigOutput() KubernetesClusterAutoscalerConfigOutput
	ToKubernetesClusterAutoscalerConfigOutputWithContext(context.Context) KubernetesClusterAutoscalerConfigOutput
}

type KubernetesClusterAutoscalerConfigArgs struct {
	// Detect similar node groups and balance the number of nodes between them.
	BalanceSimilarNodeGroups pulumi.BoolPtrInput `pulumi:"balanceSimilarNodeGroups"`
	// Disables the scale down feature of the autoscaler.
	DisableScaleDown pulumi.BoolPtrInput `pulumi:"disableScaleDown"`
	// Type of resource estimator to be used in scale up.
	Estimator pulumi.StringPtrInput `pulumi:"estimator"`
	// Type of node group expander to be used in scale up.
	Expander pulumi.StringPtrInput `pulumi:"expander"`
	// Pods with priority below cutoff will be expendable. They can be killed without any consideration during scale down and they don't cause scale up. Pods with null priority (PodPriority disabled) are non expendable.
	ExpendablePodsPriorityCutoff pulumi.IntPtrInput `pulumi:"expendablePodsPriorityCutoff"`
	// Ignore DaemonSet pods when calculating resource utilization for scaling down.
	IgnoreDaemonsetsUtilization pulumi.BoolPtrInput `pulumi:"ignoreDaemonsetsUtilization"`
	// Maximum number of seconds the cluster autoscaler waits for pod termination when trying to scale down a node
	MaxGracefulTerminationSec pulumi.IntPtrInput `pulumi:"maxGracefulTerminationSec"`
	// How long after scale up that scale down evaluation resumes.
	ScaleDownDelayAfterAdd pulumi.StringPtrInput `pulumi:"scaleDownDelayAfterAdd"`
	// How long a node should be unneeded before it is eligible for scale down.
	ScaleDownUnneededTime pulumi.StringPtrInput `pulumi:"scaleDownUnneededTime"`
	// Node utilization level, defined as sum of requested resources divided by capacity, below which a node can be considered for scale down
	ScaleDownUtilizationThreshold pulumi.Float64PtrInput `pulumi:"scaleDownUtilizationThreshold"`
}

func (KubernetesClusterAutoscalerConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesClusterAutoscalerConfig)(nil)).Elem()
}

func (i KubernetesClusterAutoscalerConfigArgs) ToKubernetesClusterAutoscalerConfigOutput() KubernetesClusterAutoscalerConfigOutput {
	return i.ToKubernetesClusterAutoscalerConfigOutputWithContext(context.Background())
}

func (i KubernetesClusterAutoscalerConfigArgs) ToKubernetesClusterAutoscalerConfigOutputWithContext(ctx context.Context) KubernetesClusterAutoscalerConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterAutoscalerConfigOutput)
}

func (i KubernetesClusterAutoscalerConfigArgs) ToKubernetesClusterAutoscalerConfigPtrOutput() KubernetesClusterAutoscalerConfigPtrOutput {
	return i.ToKubernetesClusterAutoscalerConfigPtrOutputWithContext(context.Background())
}

func (i KubernetesClusterAutoscalerConfigArgs) ToKubernetesClusterAutoscalerConfigPtrOutputWithContext(ctx context.Context) KubernetesClusterAutoscalerConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterAutoscalerConfigOutput).ToKubernetesClusterAutoscalerConfigPtrOutputWithContext(ctx)
}

// KubernetesClusterAutoscalerConfigPtrInput is an input type that accepts KubernetesClusterAutoscalerConfigArgs, KubernetesClusterAutoscalerConfigPtr and KubernetesClusterAutoscalerConfigPtrOutput values.
// You can construct a concrete instance of `KubernetesClusterAutoscalerConfigPtrInput` via:
//
//          KubernetesClusterAutoscalerConfigArgs{...}
//
//  or:
//
//          nil
type KubernetesClusterAutoscalerConfigPtrInput interface {
	pulumi.Input

	ToKubernetesClusterAutoscalerConfigPtrOutput() KubernetesClusterAutoscalerConfigPtrOutput
	ToKubernetesClusterAutoscalerConfigPtrOutputWithContext(context.Context) KubernetesClusterAutoscalerConfigPtrOutput
}

type kubernetesClusterAutoscalerConfigPtrType KubernetesClusterAutoscalerConfigArgs

func KubernetesClusterAutoscalerConfigPtr(v *KubernetesClusterAutoscalerConfigArgs) KubernetesClusterAutoscalerConfigPtrInput {
	return (*kubernetesClusterAutoscalerConfigPtrType)(v)
}

func (*kubernetesClusterAutoscalerConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesClusterAutoscalerConfig)(nil)).Elem()
}

func (i *kubernetesClusterAutoscalerConfigPtrType) ToKubernetesClusterAutoscalerConfigPtrOutput() KubernetesClusterAutoscalerConfigPtrOutput {
	return i.ToKubernetesClusterAutoscalerConfigPtrOutputWithContext(context.Background())
}

func (i *kubernetesClusterAutoscalerConfigPtrType) ToKubernetesClusterAutoscalerConfigPtrOutputWithContext(ctx context.Context) KubernetesClusterAutoscalerConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterAutoscalerConfigPtrOutput)
}

type KubernetesClusterAutoscalerConfigOutput struct{ *pulumi.OutputState }

func (KubernetesClusterAutoscalerConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesClusterAutoscalerConfig)(nil)).Elem()
}

func (o KubernetesClusterAutoscalerConfigOutput) ToKubernetesClusterAutoscalerConfigOutput() KubernetesClusterAutoscalerConfigOutput {
	return o
}

func (o KubernetesClusterAutoscalerConfigOutput) ToKubernetesClusterAutoscalerConfigOutputWithContext(ctx context.Context) KubernetesClusterAutoscalerConfigOutput {
	return o
}

func (o KubernetesClusterAutoscalerConfigOutput) ToKubernetesClusterAutoscalerConfigPtrOutput() KubernetesClusterAutoscalerConfigPtrOutput {
	return o.ToKubernetesClusterAutoscalerConfigPtrOutputWithContext(context.Background())
}

func (o KubernetesClusterAutoscalerConfigOutput) ToKubernetesClusterAutoscalerConfigPtrOutputWithContext(ctx context.Context) KubernetesClusterAutoscalerConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KubernetesClusterAutoscalerConfig) *KubernetesClusterAutoscalerConfig {
		return &v
	}).(KubernetesClusterAutoscalerConfigPtrOutput)
}

// Detect similar node groups and balance the number of nodes between them.
func (o KubernetesClusterAutoscalerConfigOutput) BalanceSimilarNodeGroups() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v KubernetesClusterAutoscalerConfig) *bool { return v.BalanceSimilarNodeGroups }).(pulumi.BoolPtrOutput)
}

// Disables the scale down feature of the autoscaler.
func (o KubernetesClusterAutoscalerConfigOutput) DisableScaleDown() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v KubernetesClusterAutoscalerConfig) *bool { return v.DisableScaleDown }).(pulumi.BoolPtrOutput)
}

// Type of resource estimator to be used in scale up.
func (o KubernetesClusterAutoscalerConfigOutput) Estimator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesClusterAutoscalerConfig) *string { return v.Estimator }).(pulumi.StringPtrOutput)
}

// Type of node group expander to be used in scale up.
func (o KubernetesClusterAutoscalerConfigOutput) Expander() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesClusterAutoscalerConfig) *string { return v.Expander }).(pulumi.StringPtrOutput)
}

// Pods with priority below cutoff will be expendable. They can be killed without any consideration during scale down and they don't cause scale up. Pods with null priority (PodPriority disabled) are non expendable.
func (o KubernetesClusterAutoscalerConfigOutput) ExpendablePodsPriorityCutoff() pulumi.IntPtrOutput {
	return o.ApplyT(func(v KubernetesClusterAutoscalerConfig) *int { return v.ExpendablePodsPriorityCutoff }).(pulumi.IntPtrOutput)
}

// Ignore DaemonSet pods when calculating resource utilization for scaling down.
func (o KubernetesClusterAutoscalerConfigOutput) IgnoreDaemonsetsUtilization() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v KubernetesClusterAutoscalerConfig) *bool { return v.IgnoreDaemonsetsUtilization }).(pulumi.BoolPtrOutput)
}

// Maximum number of seconds the cluster autoscaler waits for pod termination when trying to scale down a node
func (o KubernetesClusterAutoscalerConfigOutput) MaxGracefulTerminationSec() pulumi.IntPtrOutput {
	return o.ApplyT(func(v KubernetesClusterAutoscalerConfig) *int { return v.MaxGracefulTerminationSec }).(pulumi.IntPtrOutput)
}

// How long after scale up that scale down evaluation resumes.
func (o KubernetesClusterAutoscalerConfigOutput) ScaleDownDelayAfterAdd() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesClusterAutoscalerConfig) *string { return v.ScaleDownDelayAfterAdd }).(pulumi.StringPtrOutput)
}

// How long a node should be unneeded before it is eligible for scale down.
func (o KubernetesClusterAutoscalerConfigOutput) ScaleDownUnneededTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesClusterAutoscalerConfig) *string { return v.ScaleDownUnneededTime }).(pulumi.StringPtrOutput)
}

// Node utilization level, defined as sum of requested resources divided by capacity, below which a node can be considered for scale down
func (o KubernetesClusterAutoscalerConfigOutput) ScaleDownUtilizationThreshold() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v KubernetesClusterAutoscalerConfig) *float64 { return v.ScaleDownUtilizationThreshold }).(pulumi.Float64PtrOutput)
}

type KubernetesClusterAutoscalerConfigPtrOutput struct{ *pulumi.OutputState }

func (KubernetesClusterAutoscalerConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesClusterAutoscalerConfig)(nil)).Elem()
}

func (o KubernetesClusterAutoscalerConfigPtrOutput) ToKubernetesClusterAutoscalerConfigPtrOutput() KubernetesClusterAutoscalerConfigPtrOutput {
	return o
}

func (o KubernetesClusterAutoscalerConfigPtrOutput) ToKubernetesClusterAutoscalerConfigPtrOutputWithContext(ctx context.Context) KubernetesClusterAutoscalerConfigPtrOutput {
	return o
}

func (o KubernetesClusterAutoscalerConfigPtrOutput) Elem() KubernetesClusterAutoscalerConfigOutput {
	return o.ApplyT(func(v *KubernetesClusterAutoscalerConfig) KubernetesClusterAutoscalerConfig {
		if v != nil {
			return *v
		}
		var ret KubernetesClusterAutoscalerConfig
		return ret
	}).(KubernetesClusterAutoscalerConfigOutput)
}

// Detect similar node groups and balance the number of nodes between them.
func (o KubernetesClusterAutoscalerConfigPtrOutput) BalanceSimilarNodeGroups() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterAutoscalerConfig) *bool {
		if v == nil {
			return nil
		}
		return v.BalanceSimilarNodeGroups
	}).(pulumi.BoolPtrOutput)
}

// Disables the scale down feature of the autoscaler.
func (o KubernetesClusterAutoscalerConfigPtrOutput) DisableScaleDown() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterAutoscalerConfig) *bool {
		if v == nil {
			return nil
		}
		return v.DisableScaleDown
	}).(pulumi.BoolPtrOutput)
}

// Type of resource estimator to be used in scale up.
func (o KubernetesClusterAutoscalerConfigPtrOutput) Estimator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterAutoscalerConfig) *string {
		if v == nil {
			return nil
		}
		return v.Estimator
	}).(pulumi.StringPtrOutput)
}

// Type of node group expander to be used in scale up.
func (o KubernetesClusterAutoscalerConfigPtrOutput) Expander() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterAutoscalerConfig) *string {
		if v == nil {
			return nil
		}
		return v.Expander
	}).(pulumi.StringPtrOutput)
}

// Pods with priority below cutoff will be expendable. They can be killed without any consideration during scale down and they don't cause scale up. Pods with null priority (PodPriority disabled) are non expendable.
func (o KubernetesClusterAutoscalerConfigPtrOutput) ExpendablePodsPriorityCutoff() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterAutoscalerConfig) *int {
		if v == nil {
			return nil
		}
		return v.ExpendablePodsPriorityCutoff
	}).(pulumi.IntPtrOutput)
}

// Ignore DaemonSet pods when calculating resource utilization for scaling down.
func (o KubernetesClusterAutoscalerConfigPtrOutput) IgnoreDaemonsetsUtilization() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterAutoscalerConfig) *bool {
		if v == nil {
			return nil
		}
		return v.IgnoreDaemonsetsUtilization
	}).(pulumi.BoolPtrOutput)
}

// Maximum number of seconds the cluster autoscaler waits for pod termination when trying to scale down a node
func (o KubernetesClusterAutoscalerConfigPtrOutput) MaxGracefulTerminationSec() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterAutoscalerConfig) *int {
		if v == nil {
			return nil
		}
		return v.MaxGracefulTerminationSec
	}).(pulumi.IntPtrOutput)
}

// How long after scale up that scale down evaluation resumes.
func (o KubernetesClusterAutoscalerConfigPtrOutput) ScaleDownDelayAfterAdd() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterAutoscalerConfig) *string {
		if v == nil {
			return nil
		}
		return v.ScaleDownDelayAfterAdd
	}).(pulumi.StringPtrOutput)
}

// How long a node should be unneeded before it is eligible for scale down.
func (o KubernetesClusterAutoscalerConfigPtrOutput) ScaleDownUnneededTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterAutoscalerConfig) *string {
		if v == nil {
			return nil
		}
		return v.ScaleDownUnneededTime
	}).(pulumi.StringPtrOutput)
}

// Node utilization level, defined as sum of requested resources divided by capacity, below which a node can be considered for scale down
func (o KubernetesClusterAutoscalerConfigPtrOutput) ScaleDownUtilizationThreshold() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *KubernetesClusterAutoscalerConfig) *float64 {
		if v == nil {
			return nil
		}
		return v.ScaleDownUtilizationThreshold
	}).(pulumi.Float64PtrOutput)
}

type KubernetesClusterKubeconfig struct {
	// The CA certificate of the Kubernetes API server.
	ClusterCaCertificate *string `pulumi:"clusterCaCertificate"`
	// The raw kubeconfig file.
	ConfigFile *string `pulumi:"configFile"`
	// The URL of the Kubernetes API server.
	Host *string `pulumi:"host"`
	// The token to connect to the Kubernetes API server.
	Token *string `pulumi:"token"`
}

type KubernetesClusterKubeconfigOutput struct{ *pulumi.OutputState }

func (KubernetesClusterKubeconfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesClusterKubeconfig)(nil)).Elem()
}

func (o KubernetesClusterKubeconfigOutput) ToKubernetesClusterKubeconfigOutput() KubernetesClusterKubeconfigOutput {
	return o
}

func (o KubernetesClusterKubeconfigOutput) ToKubernetesClusterKubeconfigOutputWithContext(ctx context.Context) KubernetesClusterKubeconfigOutput {
	return o
}

// The CA certificate of the Kubernetes API server.
func (o KubernetesClusterKubeconfigOutput) ClusterCaCertificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesClusterKubeconfig) *string { return v.ClusterCaCertificate }).(pulumi.StringPtrOutput)
}

// The raw kubeconfig file.
func (o KubernetesClusterKubeconfigOutput) ConfigFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesClusterKubeconfig) *string { return v.ConfigFile }).(pulumi.StringPtrOutput)
}

// The URL of the Kubernetes API server.
func (o KubernetesClusterKubeconfigOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesClusterKubeconfig) *string { return v.Host }).(pulumi.StringPtrOutput)
}

// The token to connect to the Kubernetes API server.
func (o KubernetesClusterKubeconfigOutput) Token() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesClusterKubeconfig) *string { return v.Token }).(pulumi.StringPtrOutput)
}

type KubernetesClusterKubeconfigArrayOutput struct{ *pulumi.OutputState }

func (KubernetesClusterKubeconfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KubernetesClusterKubeconfig)(nil)).Elem()
}

func (o KubernetesClusterKubeconfigArrayOutput) ToKubernetesClusterKubeconfigArrayOutput() KubernetesClusterKubeconfigArrayOutput {
	return o
}

func (o KubernetesClusterKubeconfigArrayOutput) ToKubernetesClusterKubeconfigArrayOutputWithContext(ctx context.Context) KubernetesClusterKubeconfigArrayOutput {
	return o
}

func (o KubernetesClusterKubeconfigArrayOutput) Index(i pulumi.IntInput) KubernetesClusterKubeconfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) KubernetesClusterKubeconfig {
		return vs[0].([]KubernetesClusterKubeconfig)[vs[1].(int)]
	}).(KubernetesClusterKubeconfigOutput)
}

type KubernetesClusterOpenIdConnectConfig struct {
	// A client id that all tokens must be issued for
	ClientId string `pulumi:"clientId"`
	// JWT claim to use as the user's group
	GroupsClaims []string `pulumi:"groupsClaims"`
	// Prefix prepended to group claims
	GroupsPrefix *string `pulumi:"groupsPrefix"`
	// URL of the provider which allows the API server to discover public signing keys
	IssuerUrl string `pulumi:"issuerUrl"`
	// Multiple key=value pairs that describes a required claim in the ID Token
	RequiredClaims []string `pulumi:"requiredClaims"`
	// JWT claim to use as the user name
	UsernameClaim *string `pulumi:"usernameClaim"`
	// Prefix prepended to username
	UsernamePrefix *string `pulumi:"usernamePrefix"`
}

// KubernetesClusterOpenIdConnectConfigInput is an input type that accepts KubernetesClusterOpenIdConnectConfigArgs and KubernetesClusterOpenIdConnectConfigOutput values.
// You can construct a concrete instance of `KubernetesClusterOpenIdConnectConfigInput` via:
//
//          KubernetesClusterOpenIdConnectConfigArgs{...}
type KubernetesClusterOpenIdConnectConfigInput interface {
	pulumi.Input

	ToKubernetesClusterOpenIdConnectConfigOutput() KubernetesClusterOpenIdConnectConfigOutput
	ToKubernetesClusterOpenIdConnectConfigOutputWithContext(context.Context) KubernetesClusterOpenIdConnectConfigOutput
}

type KubernetesClusterOpenIdConnectConfigArgs struct {
	// A client id that all tokens must be issued for
	ClientId pulumi.StringInput `pulumi:"clientId"`
	// JWT claim to use as the user's group
	GroupsClaims pulumi.StringArrayInput `pulumi:"groupsClaims"`
	// Prefix prepended to group claims
	GroupsPrefix pulumi.StringPtrInput `pulumi:"groupsPrefix"`
	// URL of the provider which allows the API server to discover public signing keys
	IssuerUrl pulumi.StringInput `pulumi:"issuerUrl"`
	// Multiple key=value pairs that describes a required claim in the ID Token
	RequiredClaims pulumi.StringArrayInput `pulumi:"requiredClaims"`
	// JWT claim to use as the user name
	UsernameClaim pulumi.StringPtrInput `pulumi:"usernameClaim"`
	// Prefix prepended to username
	UsernamePrefix pulumi.StringPtrInput `pulumi:"usernamePrefix"`
}

func (KubernetesClusterOpenIdConnectConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesClusterOpenIdConnectConfig)(nil)).Elem()
}

func (i KubernetesClusterOpenIdConnectConfigArgs) ToKubernetesClusterOpenIdConnectConfigOutput() KubernetesClusterOpenIdConnectConfigOutput {
	return i.ToKubernetesClusterOpenIdConnectConfigOutputWithContext(context.Background())
}

func (i KubernetesClusterOpenIdConnectConfigArgs) ToKubernetesClusterOpenIdConnectConfigOutputWithContext(ctx context.Context) KubernetesClusterOpenIdConnectConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterOpenIdConnectConfigOutput)
}

func (i KubernetesClusterOpenIdConnectConfigArgs) ToKubernetesClusterOpenIdConnectConfigPtrOutput() KubernetesClusterOpenIdConnectConfigPtrOutput {
	return i.ToKubernetesClusterOpenIdConnectConfigPtrOutputWithContext(context.Background())
}

func (i KubernetesClusterOpenIdConnectConfigArgs) ToKubernetesClusterOpenIdConnectConfigPtrOutputWithContext(ctx context.Context) KubernetesClusterOpenIdConnectConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterOpenIdConnectConfigOutput).ToKubernetesClusterOpenIdConnectConfigPtrOutputWithContext(ctx)
}

// KubernetesClusterOpenIdConnectConfigPtrInput is an input type that accepts KubernetesClusterOpenIdConnectConfigArgs, KubernetesClusterOpenIdConnectConfigPtr and KubernetesClusterOpenIdConnectConfigPtrOutput values.
// You can construct a concrete instance of `KubernetesClusterOpenIdConnectConfigPtrInput` via:
//
//          KubernetesClusterOpenIdConnectConfigArgs{...}
//
//  or:
//
//          nil
type KubernetesClusterOpenIdConnectConfigPtrInput interface {
	pulumi.Input

	ToKubernetesClusterOpenIdConnectConfigPtrOutput() KubernetesClusterOpenIdConnectConfigPtrOutput
	ToKubernetesClusterOpenIdConnectConfigPtrOutputWithContext(context.Context) KubernetesClusterOpenIdConnectConfigPtrOutput
}

type kubernetesClusterOpenIdConnectConfigPtrType KubernetesClusterOpenIdConnectConfigArgs

func KubernetesClusterOpenIdConnectConfigPtr(v *KubernetesClusterOpenIdConnectConfigArgs) KubernetesClusterOpenIdConnectConfigPtrInput {
	return (*kubernetesClusterOpenIdConnectConfigPtrType)(v)
}

func (*kubernetesClusterOpenIdConnectConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesClusterOpenIdConnectConfig)(nil)).Elem()
}

func (i *kubernetesClusterOpenIdConnectConfigPtrType) ToKubernetesClusterOpenIdConnectConfigPtrOutput() KubernetesClusterOpenIdConnectConfigPtrOutput {
	return i.ToKubernetesClusterOpenIdConnectConfigPtrOutputWithContext(context.Background())
}

func (i *kubernetesClusterOpenIdConnectConfigPtrType) ToKubernetesClusterOpenIdConnectConfigPtrOutputWithContext(ctx context.Context) KubernetesClusterOpenIdConnectConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterOpenIdConnectConfigPtrOutput)
}

type KubernetesClusterOpenIdConnectConfigOutput struct{ *pulumi.OutputState }

func (KubernetesClusterOpenIdConnectConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesClusterOpenIdConnectConfig)(nil)).Elem()
}

func (o KubernetesClusterOpenIdConnectConfigOutput) ToKubernetesClusterOpenIdConnectConfigOutput() KubernetesClusterOpenIdConnectConfigOutput {
	return o
}

func (o KubernetesClusterOpenIdConnectConfigOutput) ToKubernetesClusterOpenIdConnectConfigOutputWithContext(ctx context.Context) KubernetesClusterOpenIdConnectConfigOutput {
	return o
}

func (o KubernetesClusterOpenIdConnectConfigOutput) ToKubernetesClusterOpenIdConnectConfigPtrOutput() KubernetesClusterOpenIdConnectConfigPtrOutput {
	return o.ToKubernetesClusterOpenIdConnectConfigPtrOutputWithContext(context.Background())
}

func (o KubernetesClusterOpenIdConnectConfigOutput) ToKubernetesClusterOpenIdConnectConfigPtrOutputWithContext(ctx context.Context) KubernetesClusterOpenIdConnectConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KubernetesClusterOpenIdConnectConfig) *KubernetesClusterOpenIdConnectConfig {
		return &v
	}).(KubernetesClusterOpenIdConnectConfigPtrOutput)
}

// A client id that all tokens must be issued for
func (o KubernetesClusterOpenIdConnectConfigOutput) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v KubernetesClusterOpenIdConnectConfig) string { return v.ClientId }).(pulumi.StringOutput)
}

// JWT claim to use as the user's group
func (o KubernetesClusterOpenIdConnectConfigOutput) GroupsClaims() pulumi.StringArrayOutput {
	return o.ApplyT(func(v KubernetesClusterOpenIdConnectConfig) []string { return v.GroupsClaims }).(pulumi.StringArrayOutput)
}

// Prefix prepended to group claims
func (o KubernetesClusterOpenIdConnectConfigOutput) GroupsPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesClusterOpenIdConnectConfig) *string { return v.GroupsPrefix }).(pulumi.StringPtrOutput)
}

// URL of the provider which allows the API server to discover public signing keys
func (o KubernetesClusterOpenIdConnectConfigOutput) IssuerUrl() pulumi.StringOutput {
	return o.ApplyT(func(v KubernetesClusterOpenIdConnectConfig) string { return v.IssuerUrl }).(pulumi.StringOutput)
}

// Multiple key=value pairs that describes a required claim in the ID Token
func (o KubernetesClusterOpenIdConnectConfigOutput) RequiredClaims() pulumi.StringArrayOutput {
	return o.ApplyT(func(v KubernetesClusterOpenIdConnectConfig) []string { return v.RequiredClaims }).(pulumi.StringArrayOutput)
}

// JWT claim to use as the user name
func (o KubernetesClusterOpenIdConnectConfigOutput) UsernameClaim() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesClusterOpenIdConnectConfig) *string { return v.UsernameClaim }).(pulumi.StringPtrOutput)
}

// Prefix prepended to username
func (o KubernetesClusterOpenIdConnectConfigOutput) UsernamePrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesClusterOpenIdConnectConfig) *string { return v.UsernamePrefix }).(pulumi.StringPtrOutput)
}

type KubernetesClusterOpenIdConnectConfigPtrOutput struct{ *pulumi.OutputState }

func (KubernetesClusterOpenIdConnectConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesClusterOpenIdConnectConfig)(nil)).Elem()
}

func (o KubernetesClusterOpenIdConnectConfigPtrOutput) ToKubernetesClusterOpenIdConnectConfigPtrOutput() KubernetesClusterOpenIdConnectConfigPtrOutput {
	return o
}

func (o KubernetesClusterOpenIdConnectConfigPtrOutput) ToKubernetesClusterOpenIdConnectConfigPtrOutputWithContext(ctx context.Context) KubernetesClusterOpenIdConnectConfigPtrOutput {
	return o
}

func (o KubernetesClusterOpenIdConnectConfigPtrOutput) Elem() KubernetesClusterOpenIdConnectConfigOutput {
	return o.ApplyT(func(v *KubernetesClusterOpenIdConnectConfig) KubernetesClusterOpenIdConnectConfig {
		if v != nil {
			return *v
		}
		var ret KubernetesClusterOpenIdConnectConfig
		return ret
	}).(KubernetesClusterOpenIdConnectConfigOutput)
}

// A client id that all tokens must be issued for
func (o KubernetesClusterOpenIdConnectConfigPtrOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterOpenIdConnectConfig) *string {
		if v == nil {
			return nil
		}
		return &v.ClientId
	}).(pulumi.StringPtrOutput)
}

// JWT claim to use as the user's group
func (o KubernetesClusterOpenIdConnectConfigPtrOutput) GroupsClaims() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *KubernetesClusterOpenIdConnectConfig) []string {
		if v == nil {
			return nil
		}
		return v.GroupsClaims
	}).(pulumi.StringArrayOutput)
}

// Prefix prepended to group claims
func (o KubernetesClusterOpenIdConnectConfigPtrOutput) GroupsPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterOpenIdConnectConfig) *string {
		if v == nil {
			return nil
		}
		return v.GroupsPrefix
	}).(pulumi.StringPtrOutput)
}

// URL of the provider which allows the API server to discover public signing keys
func (o KubernetesClusterOpenIdConnectConfigPtrOutput) IssuerUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterOpenIdConnectConfig) *string {
		if v == nil {
			return nil
		}
		return &v.IssuerUrl
	}).(pulumi.StringPtrOutput)
}

// Multiple key=value pairs that describes a required claim in the ID Token
func (o KubernetesClusterOpenIdConnectConfigPtrOutput) RequiredClaims() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *KubernetesClusterOpenIdConnectConfig) []string {
		if v == nil {
			return nil
		}
		return v.RequiredClaims
	}).(pulumi.StringArrayOutput)
}

// JWT claim to use as the user name
func (o KubernetesClusterOpenIdConnectConfigPtrOutput) UsernameClaim() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterOpenIdConnectConfig) *string {
		if v == nil {
			return nil
		}
		return v.UsernameClaim
	}).(pulumi.StringPtrOutput)
}

// Prefix prepended to username
func (o KubernetesClusterOpenIdConnectConfigPtrOutput) UsernamePrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterOpenIdConnectConfig) *string {
		if v == nil {
			return nil
		}
		return v.UsernamePrefix
	}).(pulumi.StringPtrOutput)
}

type KubernetesNodePoolNode struct {
	// The name for the pool.
	// > **Important:** Updates to this field will recreate a new resource.
	Name *string `pulumi:"name"`
	// The public IPv4.
	PublicIp *string `pulumi:"publicIp"`
	// The public IPv6.
	PublicIpV6 *string `pulumi:"publicIpV6"`
	// The status of the node.
	Status *string `pulumi:"status"`
}

type KubernetesNodePoolNodeOutput struct{ *pulumi.OutputState }

func (KubernetesNodePoolNodeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesNodePoolNode)(nil)).Elem()
}

func (o KubernetesNodePoolNodeOutput) ToKubernetesNodePoolNodeOutput() KubernetesNodePoolNodeOutput {
	return o
}

func (o KubernetesNodePoolNodeOutput) ToKubernetesNodePoolNodeOutputWithContext(ctx context.Context) KubernetesNodePoolNodeOutput {
	return o
}

// The name for the pool.
// > **Important:** Updates to this field will recreate a new resource.
func (o KubernetesNodePoolNodeOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesNodePoolNode) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The public IPv4.
func (o KubernetesNodePoolNodeOutput) PublicIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesNodePoolNode) *string { return v.PublicIp }).(pulumi.StringPtrOutput)
}

// The public IPv6.
func (o KubernetesNodePoolNodeOutput) PublicIpV6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesNodePoolNode) *string { return v.PublicIpV6 }).(pulumi.StringPtrOutput)
}

// The status of the node.
func (o KubernetesNodePoolNodeOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesNodePoolNode) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type KubernetesNodePoolNodeArrayOutput struct{ *pulumi.OutputState }

func (KubernetesNodePoolNodeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KubernetesNodePoolNode)(nil)).Elem()
}

func (o KubernetesNodePoolNodeArrayOutput) ToKubernetesNodePoolNodeArrayOutput() KubernetesNodePoolNodeArrayOutput {
	return o
}

func (o KubernetesNodePoolNodeArrayOutput) ToKubernetesNodePoolNodeArrayOutputWithContext(ctx context.Context) KubernetesNodePoolNodeArrayOutput {
	return o
}

func (o KubernetesNodePoolNodeArrayOutput) Index(i pulumi.IntInput) KubernetesNodePoolNodeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) KubernetesNodePoolNode {
		return vs[0].([]KubernetesNodePoolNode)[vs[1].(int)]
	}).(KubernetesNodePoolNodeOutput)
}

type KubernetesNodePoolUpgradePolicy struct {
	// The maximum number of nodes to be created during the upgrade
	MaxSurge *int `pulumi:"maxSurge"`
	// The maximum number of nodes that can be not ready at the same time
	MaxUnavailable *int `pulumi:"maxUnavailable"`
}

// KubernetesNodePoolUpgradePolicyInput is an input type that accepts KubernetesNodePoolUpgradePolicyArgs and KubernetesNodePoolUpgradePolicyOutput values.
// You can construct a concrete instance of `KubernetesNodePoolUpgradePolicyInput` via:
//
//          KubernetesNodePoolUpgradePolicyArgs{...}
type KubernetesNodePoolUpgradePolicyInput interface {
	pulumi.Input

	ToKubernetesNodePoolUpgradePolicyOutput() KubernetesNodePoolUpgradePolicyOutput
	ToKubernetesNodePoolUpgradePolicyOutputWithContext(context.Context) KubernetesNodePoolUpgradePolicyOutput
}

type KubernetesNodePoolUpgradePolicyArgs struct {
	// The maximum number of nodes to be created during the upgrade
	MaxSurge pulumi.IntPtrInput `pulumi:"maxSurge"`
	// The maximum number of nodes that can be not ready at the same time
	MaxUnavailable pulumi.IntPtrInput `pulumi:"maxUnavailable"`
}

func (KubernetesNodePoolUpgradePolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesNodePoolUpgradePolicy)(nil)).Elem()
}

func (i KubernetesNodePoolUpgradePolicyArgs) ToKubernetesNodePoolUpgradePolicyOutput() KubernetesNodePoolUpgradePolicyOutput {
	return i.ToKubernetesNodePoolUpgradePolicyOutputWithContext(context.Background())
}

func (i KubernetesNodePoolUpgradePolicyArgs) ToKubernetesNodePoolUpgradePolicyOutputWithContext(ctx context.Context) KubernetesNodePoolUpgradePolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesNodePoolUpgradePolicyOutput)
}

func (i KubernetesNodePoolUpgradePolicyArgs) ToKubernetesNodePoolUpgradePolicyPtrOutput() KubernetesNodePoolUpgradePolicyPtrOutput {
	return i.ToKubernetesNodePoolUpgradePolicyPtrOutputWithContext(context.Background())
}

func (i KubernetesNodePoolUpgradePolicyArgs) ToKubernetesNodePoolUpgradePolicyPtrOutputWithContext(ctx context.Context) KubernetesNodePoolUpgradePolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesNodePoolUpgradePolicyOutput).ToKubernetesNodePoolUpgradePolicyPtrOutputWithContext(ctx)
}

// KubernetesNodePoolUpgradePolicyPtrInput is an input type that accepts KubernetesNodePoolUpgradePolicyArgs, KubernetesNodePoolUpgradePolicyPtr and KubernetesNodePoolUpgradePolicyPtrOutput values.
// You can construct a concrete instance of `KubernetesNodePoolUpgradePolicyPtrInput` via:
//
//          KubernetesNodePoolUpgradePolicyArgs{...}
//
//  or:
//
//          nil
type KubernetesNodePoolUpgradePolicyPtrInput interface {
	pulumi.Input

	ToKubernetesNodePoolUpgradePolicyPtrOutput() KubernetesNodePoolUpgradePolicyPtrOutput
	ToKubernetesNodePoolUpgradePolicyPtrOutputWithContext(context.Context) KubernetesNodePoolUpgradePolicyPtrOutput
}

type kubernetesNodePoolUpgradePolicyPtrType KubernetesNodePoolUpgradePolicyArgs

func KubernetesNodePoolUpgradePolicyPtr(v *KubernetesNodePoolUpgradePolicyArgs) KubernetesNodePoolUpgradePolicyPtrInput {
	return (*kubernetesNodePoolUpgradePolicyPtrType)(v)
}

func (*kubernetesNodePoolUpgradePolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesNodePoolUpgradePolicy)(nil)).Elem()
}

func (i *kubernetesNodePoolUpgradePolicyPtrType) ToKubernetesNodePoolUpgradePolicyPtrOutput() KubernetesNodePoolUpgradePolicyPtrOutput {
	return i.ToKubernetesNodePoolUpgradePolicyPtrOutputWithContext(context.Background())
}

func (i *kubernetesNodePoolUpgradePolicyPtrType) ToKubernetesNodePoolUpgradePolicyPtrOutputWithContext(ctx context.Context) KubernetesNodePoolUpgradePolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesNodePoolUpgradePolicyPtrOutput)
}

type KubernetesNodePoolUpgradePolicyOutput struct{ *pulumi.OutputState }

func (KubernetesNodePoolUpgradePolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesNodePoolUpgradePolicy)(nil)).Elem()
}

func (o KubernetesNodePoolUpgradePolicyOutput) ToKubernetesNodePoolUpgradePolicyOutput() KubernetesNodePoolUpgradePolicyOutput {
	return o
}

func (o KubernetesNodePoolUpgradePolicyOutput) ToKubernetesNodePoolUpgradePolicyOutputWithContext(ctx context.Context) KubernetesNodePoolUpgradePolicyOutput {
	return o
}

func (o KubernetesNodePoolUpgradePolicyOutput) ToKubernetesNodePoolUpgradePolicyPtrOutput() KubernetesNodePoolUpgradePolicyPtrOutput {
	return o.ToKubernetesNodePoolUpgradePolicyPtrOutputWithContext(context.Background())
}

func (o KubernetesNodePoolUpgradePolicyOutput) ToKubernetesNodePoolUpgradePolicyPtrOutputWithContext(ctx context.Context) KubernetesNodePoolUpgradePolicyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KubernetesNodePoolUpgradePolicy) *KubernetesNodePoolUpgradePolicy {
		return &v
	}).(KubernetesNodePoolUpgradePolicyPtrOutput)
}

// The maximum number of nodes to be created during the upgrade
func (o KubernetesNodePoolUpgradePolicyOutput) MaxSurge() pulumi.IntPtrOutput {
	return o.ApplyT(func(v KubernetesNodePoolUpgradePolicy) *int { return v.MaxSurge }).(pulumi.IntPtrOutput)
}

// The maximum number of nodes that can be not ready at the same time
func (o KubernetesNodePoolUpgradePolicyOutput) MaxUnavailable() pulumi.IntPtrOutput {
	return o.ApplyT(func(v KubernetesNodePoolUpgradePolicy) *int { return v.MaxUnavailable }).(pulumi.IntPtrOutput)
}

type KubernetesNodePoolUpgradePolicyPtrOutput struct{ *pulumi.OutputState }

func (KubernetesNodePoolUpgradePolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesNodePoolUpgradePolicy)(nil)).Elem()
}

func (o KubernetesNodePoolUpgradePolicyPtrOutput) ToKubernetesNodePoolUpgradePolicyPtrOutput() KubernetesNodePoolUpgradePolicyPtrOutput {
	return o
}

func (o KubernetesNodePoolUpgradePolicyPtrOutput) ToKubernetesNodePoolUpgradePolicyPtrOutputWithContext(ctx context.Context) KubernetesNodePoolUpgradePolicyPtrOutput {
	return o
}

func (o KubernetesNodePoolUpgradePolicyPtrOutput) Elem() KubernetesNodePoolUpgradePolicyOutput {
	return o.ApplyT(func(v *KubernetesNodePoolUpgradePolicy) KubernetesNodePoolUpgradePolicy {
		if v != nil {
			return *v
		}
		var ret KubernetesNodePoolUpgradePolicy
		return ret
	}).(KubernetesNodePoolUpgradePolicyOutput)
}

// The maximum number of nodes to be created during the upgrade
func (o KubernetesNodePoolUpgradePolicyPtrOutput) MaxSurge() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *KubernetesNodePoolUpgradePolicy) *int {
		if v == nil {
			return nil
		}
		return v.MaxSurge
	}).(pulumi.IntPtrOutput)
}

// The maximum number of nodes that can be not ready at the same time
func (o KubernetesNodePoolUpgradePolicyPtrOutput) MaxUnavailable() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *KubernetesNodePoolUpgradePolicy) *int {
		if v == nil {
			return nil
		}
		return v.MaxUnavailable
	}).(pulumi.IntPtrOutput)
}

type LoadbalancerBackendHealthCheckHttp struct {
	// The expected HTTP status code.
	Code *int `pulumi:"code"`
	// The HTTP method to use for HC requests.
	Method *string `pulumi:"method"`
	// The HTTPS endpoint URL to call for HC requests.
	Uri string `pulumi:"uri"`
}

// LoadbalancerBackendHealthCheckHttpInput is an input type that accepts LoadbalancerBackendHealthCheckHttpArgs and LoadbalancerBackendHealthCheckHttpOutput values.
// You can construct a concrete instance of `LoadbalancerBackendHealthCheckHttpInput` via:
//
//          LoadbalancerBackendHealthCheckHttpArgs{...}
type LoadbalancerBackendHealthCheckHttpInput interface {
	pulumi.Input

	ToLoadbalancerBackendHealthCheckHttpOutput() LoadbalancerBackendHealthCheckHttpOutput
	ToLoadbalancerBackendHealthCheckHttpOutputWithContext(context.Context) LoadbalancerBackendHealthCheckHttpOutput
}

type LoadbalancerBackendHealthCheckHttpArgs struct {
	// The expected HTTP status code.
	Code pulumi.IntPtrInput `pulumi:"code"`
	// The HTTP method to use for HC requests.
	Method pulumi.StringPtrInput `pulumi:"method"`
	// The HTTPS endpoint URL to call for HC requests.
	Uri pulumi.StringInput `pulumi:"uri"`
}

func (LoadbalancerBackendHealthCheckHttpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadbalancerBackendHealthCheckHttp)(nil)).Elem()
}

func (i LoadbalancerBackendHealthCheckHttpArgs) ToLoadbalancerBackendHealthCheckHttpOutput() LoadbalancerBackendHealthCheckHttpOutput {
	return i.ToLoadbalancerBackendHealthCheckHttpOutputWithContext(context.Background())
}

func (i LoadbalancerBackendHealthCheckHttpArgs) ToLoadbalancerBackendHealthCheckHttpOutputWithContext(ctx context.Context) LoadbalancerBackendHealthCheckHttpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadbalancerBackendHealthCheckHttpOutput)
}

func (i LoadbalancerBackendHealthCheckHttpArgs) ToLoadbalancerBackendHealthCheckHttpPtrOutput() LoadbalancerBackendHealthCheckHttpPtrOutput {
	return i.ToLoadbalancerBackendHealthCheckHttpPtrOutputWithContext(context.Background())
}

func (i LoadbalancerBackendHealthCheckHttpArgs) ToLoadbalancerBackendHealthCheckHttpPtrOutputWithContext(ctx context.Context) LoadbalancerBackendHealthCheckHttpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadbalancerBackendHealthCheckHttpOutput).ToLoadbalancerBackendHealthCheckHttpPtrOutputWithContext(ctx)
}

// LoadbalancerBackendHealthCheckHttpPtrInput is an input type that accepts LoadbalancerBackendHealthCheckHttpArgs, LoadbalancerBackendHealthCheckHttpPtr and LoadbalancerBackendHealthCheckHttpPtrOutput values.
// You can construct a concrete instance of `LoadbalancerBackendHealthCheckHttpPtrInput` via:
//
//          LoadbalancerBackendHealthCheckHttpArgs{...}
//
//  or:
//
//          nil
type LoadbalancerBackendHealthCheckHttpPtrInput interface {
	pulumi.Input

	ToLoadbalancerBackendHealthCheckHttpPtrOutput() LoadbalancerBackendHealthCheckHttpPtrOutput
	ToLoadbalancerBackendHealthCheckHttpPtrOutputWithContext(context.Context) LoadbalancerBackendHealthCheckHttpPtrOutput
}

type loadbalancerBackendHealthCheckHttpPtrType LoadbalancerBackendHealthCheckHttpArgs

func LoadbalancerBackendHealthCheckHttpPtr(v *LoadbalancerBackendHealthCheckHttpArgs) LoadbalancerBackendHealthCheckHttpPtrInput {
	return (*loadbalancerBackendHealthCheckHttpPtrType)(v)
}

func (*loadbalancerBackendHealthCheckHttpPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LoadbalancerBackendHealthCheckHttp)(nil)).Elem()
}

func (i *loadbalancerBackendHealthCheckHttpPtrType) ToLoadbalancerBackendHealthCheckHttpPtrOutput() LoadbalancerBackendHealthCheckHttpPtrOutput {
	return i.ToLoadbalancerBackendHealthCheckHttpPtrOutputWithContext(context.Background())
}

func (i *loadbalancerBackendHealthCheckHttpPtrType) ToLoadbalancerBackendHealthCheckHttpPtrOutputWithContext(ctx context.Context) LoadbalancerBackendHealthCheckHttpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadbalancerBackendHealthCheckHttpPtrOutput)
}

type LoadbalancerBackendHealthCheckHttpOutput struct{ *pulumi.OutputState }

func (LoadbalancerBackendHealthCheckHttpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadbalancerBackendHealthCheckHttp)(nil)).Elem()
}

func (o LoadbalancerBackendHealthCheckHttpOutput) ToLoadbalancerBackendHealthCheckHttpOutput() LoadbalancerBackendHealthCheckHttpOutput {
	return o
}

func (o LoadbalancerBackendHealthCheckHttpOutput) ToLoadbalancerBackendHealthCheckHttpOutputWithContext(ctx context.Context) LoadbalancerBackendHealthCheckHttpOutput {
	return o
}

func (o LoadbalancerBackendHealthCheckHttpOutput) ToLoadbalancerBackendHealthCheckHttpPtrOutput() LoadbalancerBackendHealthCheckHttpPtrOutput {
	return o.ToLoadbalancerBackendHealthCheckHttpPtrOutputWithContext(context.Background())
}

func (o LoadbalancerBackendHealthCheckHttpOutput) ToLoadbalancerBackendHealthCheckHttpPtrOutputWithContext(ctx context.Context) LoadbalancerBackendHealthCheckHttpPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LoadbalancerBackendHealthCheckHttp) *LoadbalancerBackendHealthCheckHttp {
		return &v
	}).(LoadbalancerBackendHealthCheckHttpPtrOutput)
}

// The expected HTTP status code.
func (o LoadbalancerBackendHealthCheckHttpOutput) Code() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LoadbalancerBackendHealthCheckHttp) *int { return v.Code }).(pulumi.IntPtrOutput)
}

// The HTTP method to use for HC requests.
func (o LoadbalancerBackendHealthCheckHttpOutput) Method() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LoadbalancerBackendHealthCheckHttp) *string { return v.Method }).(pulumi.StringPtrOutput)
}

// The HTTPS endpoint URL to call for HC requests.
func (o LoadbalancerBackendHealthCheckHttpOutput) Uri() pulumi.StringOutput {
	return o.ApplyT(func(v LoadbalancerBackendHealthCheckHttp) string { return v.Uri }).(pulumi.StringOutput)
}

type LoadbalancerBackendHealthCheckHttpPtrOutput struct{ *pulumi.OutputState }

func (LoadbalancerBackendHealthCheckHttpPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LoadbalancerBackendHealthCheckHttp)(nil)).Elem()
}

func (o LoadbalancerBackendHealthCheckHttpPtrOutput) ToLoadbalancerBackendHealthCheckHttpPtrOutput() LoadbalancerBackendHealthCheckHttpPtrOutput {
	return o
}

func (o LoadbalancerBackendHealthCheckHttpPtrOutput) ToLoadbalancerBackendHealthCheckHttpPtrOutputWithContext(ctx context.Context) LoadbalancerBackendHealthCheckHttpPtrOutput {
	return o
}

func (o LoadbalancerBackendHealthCheckHttpPtrOutput) Elem() LoadbalancerBackendHealthCheckHttpOutput {
	return o.ApplyT(func(v *LoadbalancerBackendHealthCheckHttp) LoadbalancerBackendHealthCheckHttp {
		if v != nil {
			return *v
		}
		var ret LoadbalancerBackendHealthCheckHttp
		return ret
	}).(LoadbalancerBackendHealthCheckHttpOutput)
}

// The expected HTTP status code.
func (o LoadbalancerBackendHealthCheckHttpPtrOutput) Code() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *LoadbalancerBackendHealthCheckHttp) *int {
		if v == nil {
			return nil
		}
		return v.Code
	}).(pulumi.IntPtrOutput)
}

// The HTTP method to use for HC requests.
func (o LoadbalancerBackendHealthCheckHttpPtrOutput) Method() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LoadbalancerBackendHealthCheckHttp) *string {
		if v == nil {
			return nil
		}
		return v.Method
	}).(pulumi.StringPtrOutput)
}

// The HTTPS endpoint URL to call for HC requests.
func (o LoadbalancerBackendHealthCheckHttpPtrOutput) Uri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LoadbalancerBackendHealthCheckHttp) *string {
		if v == nil {
			return nil
		}
		return &v.Uri
	}).(pulumi.StringPtrOutput)
}

type LoadbalancerBackendHealthCheckHttps struct {
	// The expected HTTP status code.
	Code *int `pulumi:"code"`
	// The HTTP method to use for HC requests.
	Method *string `pulumi:"method"`
	// The HTTPS endpoint URL to call for HC requests.
	Uri string `pulumi:"uri"`
}

// LoadbalancerBackendHealthCheckHttpsInput is an input type that accepts LoadbalancerBackendHealthCheckHttpsArgs and LoadbalancerBackendHealthCheckHttpsOutput values.
// You can construct a concrete instance of `LoadbalancerBackendHealthCheckHttpsInput` via:
//
//          LoadbalancerBackendHealthCheckHttpsArgs{...}
type LoadbalancerBackendHealthCheckHttpsInput interface {
	pulumi.Input

	ToLoadbalancerBackendHealthCheckHttpsOutput() LoadbalancerBackendHealthCheckHttpsOutput
	ToLoadbalancerBackendHealthCheckHttpsOutputWithContext(context.Context) LoadbalancerBackendHealthCheckHttpsOutput
}

type LoadbalancerBackendHealthCheckHttpsArgs struct {
	// The expected HTTP status code.
	Code pulumi.IntPtrInput `pulumi:"code"`
	// The HTTP method to use for HC requests.
	Method pulumi.StringPtrInput `pulumi:"method"`
	// The HTTPS endpoint URL to call for HC requests.
	Uri pulumi.StringInput `pulumi:"uri"`
}

func (LoadbalancerBackendHealthCheckHttpsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadbalancerBackendHealthCheckHttps)(nil)).Elem()
}

func (i LoadbalancerBackendHealthCheckHttpsArgs) ToLoadbalancerBackendHealthCheckHttpsOutput() LoadbalancerBackendHealthCheckHttpsOutput {
	return i.ToLoadbalancerBackendHealthCheckHttpsOutputWithContext(context.Background())
}

func (i LoadbalancerBackendHealthCheckHttpsArgs) ToLoadbalancerBackendHealthCheckHttpsOutputWithContext(ctx context.Context) LoadbalancerBackendHealthCheckHttpsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadbalancerBackendHealthCheckHttpsOutput)
}

func (i LoadbalancerBackendHealthCheckHttpsArgs) ToLoadbalancerBackendHealthCheckHttpsPtrOutput() LoadbalancerBackendHealthCheckHttpsPtrOutput {
	return i.ToLoadbalancerBackendHealthCheckHttpsPtrOutputWithContext(context.Background())
}

func (i LoadbalancerBackendHealthCheckHttpsArgs) ToLoadbalancerBackendHealthCheckHttpsPtrOutputWithContext(ctx context.Context) LoadbalancerBackendHealthCheckHttpsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadbalancerBackendHealthCheckHttpsOutput).ToLoadbalancerBackendHealthCheckHttpsPtrOutputWithContext(ctx)
}

// LoadbalancerBackendHealthCheckHttpsPtrInput is an input type that accepts LoadbalancerBackendHealthCheckHttpsArgs, LoadbalancerBackendHealthCheckHttpsPtr and LoadbalancerBackendHealthCheckHttpsPtrOutput values.
// You can construct a concrete instance of `LoadbalancerBackendHealthCheckHttpsPtrInput` via:
//
//          LoadbalancerBackendHealthCheckHttpsArgs{...}
//
//  or:
//
//          nil
type LoadbalancerBackendHealthCheckHttpsPtrInput interface {
	pulumi.Input

	ToLoadbalancerBackendHealthCheckHttpsPtrOutput() LoadbalancerBackendHealthCheckHttpsPtrOutput
	ToLoadbalancerBackendHealthCheckHttpsPtrOutputWithContext(context.Context) LoadbalancerBackendHealthCheckHttpsPtrOutput
}

type loadbalancerBackendHealthCheckHttpsPtrType LoadbalancerBackendHealthCheckHttpsArgs

func LoadbalancerBackendHealthCheckHttpsPtr(v *LoadbalancerBackendHealthCheckHttpsArgs) LoadbalancerBackendHealthCheckHttpsPtrInput {
	return (*loadbalancerBackendHealthCheckHttpsPtrType)(v)
}

func (*loadbalancerBackendHealthCheckHttpsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LoadbalancerBackendHealthCheckHttps)(nil)).Elem()
}

func (i *loadbalancerBackendHealthCheckHttpsPtrType) ToLoadbalancerBackendHealthCheckHttpsPtrOutput() LoadbalancerBackendHealthCheckHttpsPtrOutput {
	return i.ToLoadbalancerBackendHealthCheckHttpsPtrOutputWithContext(context.Background())
}

func (i *loadbalancerBackendHealthCheckHttpsPtrType) ToLoadbalancerBackendHealthCheckHttpsPtrOutputWithContext(ctx context.Context) LoadbalancerBackendHealthCheckHttpsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadbalancerBackendHealthCheckHttpsPtrOutput)
}

type LoadbalancerBackendHealthCheckHttpsOutput struct{ *pulumi.OutputState }

func (LoadbalancerBackendHealthCheckHttpsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadbalancerBackendHealthCheckHttps)(nil)).Elem()
}

func (o LoadbalancerBackendHealthCheckHttpsOutput) ToLoadbalancerBackendHealthCheckHttpsOutput() LoadbalancerBackendHealthCheckHttpsOutput {
	return o
}

func (o LoadbalancerBackendHealthCheckHttpsOutput) ToLoadbalancerBackendHealthCheckHttpsOutputWithContext(ctx context.Context) LoadbalancerBackendHealthCheckHttpsOutput {
	return o
}

func (o LoadbalancerBackendHealthCheckHttpsOutput) ToLoadbalancerBackendHealthCheckHttpsPtrOutput() LoadbalancerBackendHealthCheckHttpsPtrOutput {
	return o.ToLoadbalancerBackendHealthCheckHttpsPtrOutputWithContext(context.Background())
}

func (o LoadbalancerBackendHealthCheckHttpsOutput) ToLoadbalancerBackendHealthCheckHttpsPtrOutputWithContext(ctx context.Context) LoadbalancerBackendHealthCheckHttpsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LoadbalancerBackendHealthCheckHttps) *LoadbalancerBackendHealthCheckHttps {
		return &v
	}).(LoadbalancerBackendHealthCheckHttpsPtrOutput)
}

// The expected HTTP status code.
func (o LoadbalancerBackendHealthCheckHttpsOutput) Code() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LoadbalancerBackendHealthCheckHttps) *int { return v.Code }).(pulumi.IntPtrOutput)
}

// The HTTP method to use for HC requests.
func (o LoadbalancerBackendHealthCheckHttpsOutput) Method() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LoadbalancerBackendHealthCheckHttps) *string { return v.Method }).(pulumi.StringPtrOutput)
}

// The HTTPS endpoint URL to call for HC requests.
func (o LoadbalancerBackendHealthCheckHttpsOutput) Uri() pulumi.StringOutput {
	return o.ApplyT(func(v LoadbalancerBackendHealthCheckHttps) string { return v.Uri }).(pulumi.StringOutput)
}

type LoadbalancerBackendHealthCheckHttpsPtrOutput struct{ *pulumi.OutputState }

func (LoadbalancerBackendHealthCheckHttpsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LoadbalancerBackendHealthCheckHttps)(nil)).Elem()
}

func (o LoadbalancerBackendHealthCheckHttpsPtrOutput) ToLoadbalancerBackendHealthCheckHttpsPtrOutput() LoadbalancerBackendHealthCheckHttpsPtrOutput {
	return o
}

func (o LoadbalancerBackendHealthCheckHttpsPtrOutput) ToLoadbalancerBackendHealthCheckHttpsPtrOutputWithContext(ctx context.Context) LoadbalancerBackendHealthCheckHttpsPtrOutput {
	return o
}

func (o LoadbalancerBackendHealthCheckHttpsPtrOutput) Elem() LoadbalancerBackendHealthCheckHttpsOutput {
	return o.ApplyT(func(v *LoadbalancerBackendHealthCheckHttps) LoadbalancerBackendHealthCheckHttps {
		if v != nil {
			return *v
		}
		var ret LoadbalancerBackendHealthCheckHttps
		return ret
	}).(LoadbalancerBackendHealthCheckHttpsOutput)
}

// The expected HTTP status code.
func (o LoadbalancerBackendHealthCheckHttpsPtrOutput) Code() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *LoadbalancerBackendHealthCheckHttps) *int {
		if v == nil {
			return nil
		}
		return v.Code
	}).(pulumi.IntPtrOutput)
}

// The HTTP method to use for HC requests.
func (o LoadbalancerBackendHealthCheckHttpsPtrOutput) Method() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LoadbalancerBackendHealthCheckHttps) *string {
		if v == nil {
			return nil
		}
		return v.Method
	}).(pulumi.StringPtrOutput)
}

// The HTTPS endpoint URL to call for HC requests.
func (o LoadbalancerBackendHealthCheckHttpsPtrOutput) Uri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LoadbalancerBackendHealthCheckHttps) *string {
		if v == nil {
			return nil
		}
		return &v.Uri
	}).(pulumi.StringPtrOutput)
}

type LoadbalancerBackendHealthCheckTcp struct {
}

// LoadbalancerBackendHealthCheckTcpInput is an input type that accepts LoadbalancerBackendHealthCheckTcpArgs and LoadbalancerBackendHealthCheckTcpOutput values.
// You can construct a concrete instance of `LoadbalancerBackendHealthCheckTcpInput` via:
//
//          LoadbalancerBackendHealthCheckTcpArgs{...}
type LoadbalancerBackendHealthCheckTcpInput interface {
	pulumi.Input

	ToLoadbalancerBackendHealthCheckTcpOutput() LoadbalancerBackendHealthCheckTcpOutput
	ToLoadbalancerBackendHealthCheckTcpOutputWithContext(context.Context) LoadbalancerBackendHealthCheckTcpOutput
}

type LoadbalancerBackendHealthCheckTcpArgs struct {
}

func (LoadbalancerBackendHealthCheckTcpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadbalancerBackendHealthCheckTcp)(nil)).Elem()
}

func (i LoadbalancerBackendHealthCheckTcpArgs) ToLoadbalancerBackendHealthCheckTcpOutput() LoadbalancerBackendHealthCheckTcpOutput {
	return i.ToLoadbalancerBackendHealthCheckTcpOutputWithContext(context.Background())
}

func (i LoadbalancerBackendHealthCheckTcpArgs) ToLoadbalancerBackendHealthCheckTcpOutputWithContext(ctx context.Context) LoadbalancerBackendHealthCheckTcpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadbalancerBackendHealthCheckTcpOutput)
}

func (i LoadbalancerBackendHealthCheckTcpArgs) ToLoadbalancerBackendHealthCheckTcpPtrOutput() LoadbalancerBackendHealthCheckTcpPtrOutput {
	return i.ToLoadbalancerBackendHealthCheckTcpPtrOutputWithContext(context.Background())
}

func (i LoadbalancerBackendHealthCheckTcpArgs) ToLoadbalancerBackendHealthCheckTcpPtrOutputWithContext(ctx context.Context) LoadbalancerBackendHealthCheckTcpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadbalancerBackendHealthCheckTcpOutput).ToLoadbalancerBackendHealthCheckTcpPtrOutputWithContext(ctx)
}

// LoadbalancerBackendHealthCheckTcpPtrInput is an input type that accepts LoadbalancerBackendHealthCheckTcpArgs, LoadbalancerBackendHealthCheckTcpPtr and LoadbalancerBackendHealthCheckTcpPtrOutput values.
// You can construct a concrete instance of `LoadbalancerBackendHealthCheckTcpPtrInput` via:
//
//          LoadbalancerBackendHealthCheckTcpArgs{...}
//
//  or:
//
//          nil
type LoadbalancerBackendHealthCheckTcpPtrInput interface {
	pulumi.Input

	ToLoadbalancerBackendHealthCheckTcpPtrOutput() LoadbalancerBackendHealthCheckTcpPtrOutput
	ToLoadbalancerBackendHealthCheckTcpPtrOutputWithContext(context.Context) LoadbalancerBackendHealthCheckTcpPtrOutput
}

type loadbalancerBackendHealthCheckTcpPtrType LoadbalancerBackendHealthCheckTcpArgs

func LoadbalancerBackendHealthCheckTcpPtr(v *LoadbalancerBackendHealthCheckTcpArgs) LoadbalancerBackendHealthCheckTcpPtrInput {
	return (*loadbalancerBackendHealthCheckTcpPtrType)(v)
}

func (*loadbalancerBackendHealthCheckTcpPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LoadbalancerBackendHealthCheckTcp)(nil)).Elem()
}

func (i *loadbalancerBackendHealthCheckTcpPtrType) ToLoadbalancerBackendHealthCheckTcpPtrOutput() LoadbalancerBackendHealthCheckTcpPtrOutput {
	return i.ToLoadbalancerBackendHealthCheckTcpPtrOutputWithContext(context.Background())
}

func (i *loadbalancerBackendHealthCheckTcpPtrType) ToLoadbalancerBackendHealthCheckTcpPtrOutputWithContext(ctx context.Context) LoadbalancerBackendHealthCheckTcpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadbalancerBackendHealthCheckTcpPtrOutput)
}

type LoadbalancerBackendHealthCheckTcpOutput struct{ *pulumi.OutputState }

func (LoadbalancerBackendHealthCheckTcpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadbalancerBackendHealthCheckTcp)(nil)).Elem()
}

func (o LoadbalancerBackendHealthCheckTcpOutput) ToLoadbalancerBackendHealthCheckTcpOutput() LoadbalancerBackendHealthCheckTcpOutput {
	return o
}

func (o LoadbalancerBackendHealthCheckTcpOutput) ToLoadbalancerBackendHealthCheckTcpOutputWithContext(ctx context.Context) LoadbalancerBackendHealthCheckTcpOutput {
	return o
}

func (o LoadbalancerBackendHealthCheckTcpOutput) ToLoadbalancerBackendHealthCheckTcpPtrOutput() LoadbalancerBackendHealthCheckTcpPtrOutput {
	return o.ToLoadbalancerBackendHealthCheckTcpPtrOutputWithContext(context.Background())
}

func (o LoadbalancerBackendHealthCheckTcpOutput) ToLoadbalancerBackendHealthCheckTcpPtrOutputWithContext(ctx context.Context) LoadbalancerBackendHealthCheckTcpPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LoadbalancerBackendHealthCheckTcp) *LoadbalancerBackendHealthCheckTcp {
		return &v
	}).(LoadbalancerBackendHealthCheckTcpPtrOutput)
}

type LoadbalancerBackendHealthCheckTcpPtrOutput struct{ *pulumi.OutputState }

func (LoadbalancerBackendHealthCheckTcpPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LoadbalancerBackendHealthCheckTcp)(nil)).Elem()
}

func (o LoadbalancerBackendHealthCheckTcpPtrOutput) ToLoadbalancerBackendHealthCheckTcpPtrOutput() LoadbalancerBackendHealthCheckTcpPtrOutput {
	return o
}

func (o LoadbalancerBackendHealthCheckTcpPtrOutput) ToLoadbalancerBackendHealthCheckTcpPtrOutputWithContext(ctx context.Context) LoadbalancerBackendHealthCheckTcpPtrOutput {
	return o
}

func (o LoadbalancerBackendHealthCheckTcpPtrOutput) Elem() LoadbalancerBackendHealthCheckTcpOutput {
	return o.ApplyT(func(v *LoadbalancerBackendHealthCheckTcp) LoadbalancerBackendHealthCheckTcp {
		if v != nil {
			return *v
		}
		var ret LoadbalancerBackendHealthCheckTcp
		return ret
	}).(LoadbalancerBackendHealthCheckTcpOutput)
}

type LoadbalancerCertificateCustomCertificate struct {
	// Full PEM-formatted certificate chain.
	CertificateChain string `pulumi:"certificateChain"`
}

// LoadbalancerCertificateCustomCertificateInput is an input type that accepts LoadbalancerCertificateCustomCertificateArgs and LoadbalancerCertificateCustomCertificateOutput values.
// You can construct a concrete instance of `LoadbalancerCertificateCustomCertificateInput` via:
//
//          LoadbalancerCertificateCustomCertificateArgs{...}
type LoadbalancerCertificateCustomCertificateInput interface {
	pulumi.Input

	ToLoadbalancerCertificateCustomCertificateOutput() LoadbalancerCertificateCustomCertificateOutput
	ToLoadbalancerCertificateCustomCertificateOutputWithContext(context.Context) LoadbalancerCertificateCustomCertificateOutput
}

type LoadbalancerCertificateCustomCertificateArgs struct {
	// Full PEM-formatted certificate chain.
	CertificateChain pulumi.StringInput `pulumi:"certificateChain"`
}

func (LoadbalancerCertificateCustomCertificateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadbalancerCertificateCustomCertificate)(nil)).Elem()
}

func (i LoadbalancerCertificateCustomCertificateArgs) ToLoadbalancerCertificateCustomCertificateOutput() LoadbalancerCertificateCustomCertificateOutput {
	return i.ToLoadbalancerCertificateCustomCertificateOutputWithContext(context.Background())
}

func (i LoadbalancerCertificateCustomCertificateArgs) ToLoadbalancerCertificateCustomCertificateOutputWithContext(ctx context.Context) LoadbalancerCertificateCustomCertificateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadbalancerCertificateCustomCertificateOutput)
}

func (i LoadbalancerCertificateCustomCertificateArgs) ToLoadbalancerCertificateCustomCertificatePtrOutput() LoadbalancerCertificateCustomCertificatePtrOutput {
	return i.ToLoadbalancerCertificateCustomCertificatePtrOutputWithContext(context.Background())
}

func (i LoadbalancerCertificateCustomCertificateArgs) ToLoadbalancerCertificateCustomCertificatePtrOutputWithContext(ctx context.Context) LoadbalancerCertificateCustomCertificatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadbalancerCertificateCustomCertificateOutput).ToLoadbalancerCertificateCustomCertificatePtrOutputWithContext(ctx)
}

// LoadbalancerCertificateCustomCertificatePtrInput is an input type that accepts LoadbalancerCertificateCustomCertificateArgs, LoadbalancerCertificateCustomCertificatePtr and LoadbalancerCertificateCustomCertificatePtrOutput values.
// You can construct a concrete instance of `LoadbalancerCertificateCustomCertificatePtrInput` via:
//
//          LoadbalancerCertificateCustomCertificateArgs{...}
//
//  or:
//
//          nil
type LoadbalancerCertificateCustomCertificatePtrInput interface {
	pulumi.Input

	ToLoadbalancerCertificateCustomCertificatePtrOutput() LoadbalancerCertificateCustomCertificatePtrOutput
	ToLoadbalancerCertificateCustomCertificatePtrOutputWithContext(context.Context) LoadbalancerCertificateCustomCertificatePtrOutput
}

type loadbalancerCertificateCustomCertificatePtrType LoadbalancerCertificateCustomCertificateArgs

func LoadbalancerCertificateCustomCertificatePtr(v *LoadbalancerCertificateCustomCertificateArgs) LoadbalancerCertificateCustomCertificatePtrInput {
	return (*loadbalancerCertificateCustomCertificatePtrType)(v)
}

func (*loadbalancerCertificateCustomCertificatePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LoadbalancerCertificateCustomCertificate)(nil)).Elem()
}

func (i *loadbalancerCertificateCustomCertificatePtrType) ToLoadbalancerCertificateCustomCertificatePtrOutput() LoadbalancerCertificateCustomCertificatePtrOutput {
	return i.ToLoadbalancerCertificateCustomCertificatePtrOutputWithContext(context.Background())
}

func (i *loadbalancerCertificateCustomCertificatePtrType) ToLoadbalancerCertificateCustomCertificatePtrOutputWithContext(ctx context.Context) LoadbalancerCertificateCustomCertificatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadbalancerCertificateCustomCertificatePtrOutput)
}

type LoadbalancerCertificateCustomCertificateOutput struct{ *pulumi.OutputState }

func (LoadbalancerCertificateCustomCertificateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadbalancerCertificateCustomCertificate)(nil)).Elem()
}

func (o LoadbalancerCertificateCustomCertificateOutput) ToLoadbalancerCertificateCustomCertificateOutput() LoadbalancerCertificateCustomCertificateOutput {
	return o
}

func (o LoadbalancerCertificateCustomCertificateOutput) ToLoadbalancerCertificateCustomCertificateOutputWithContext(ctx context.Context) LoadbalancerCertificateCustomCertificateOutput {
	return o
}

func (o LoadbalancerCertificateCustomCertificateOutput) ToLoadbalancerCertificateCustomCertificatePtrOutput() LoadbalancerCertificateCustomCertificatePtrOutput {
	return o.ToLoadbalancerCertificateCustomCertificatePtrOutputWithContext(context.Background())
}

func (o LoadbalancerCertificateCustomCertificateOutput) ToLoadbalancerCertificateCustomCertificatePtrOutputWithContext(ctx context.Context) LoadbalancerCertificateCustomCertificatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LoadbalancerCertificateCustomCertificate) *LoadbalancerCertificateCustomCertificate {
		return &v
	}).(LoadbalancerCertificateCustomCertificatePtrOutput)
}

// Full PEM-formatted certificate chain.
func (o LoadbalancerCertificateCustomCertificateOutput) CertificateChain() pulumi.StringOutput {
	return o.ApplyT(func(v LoadbalancerCertificateCustomCertificate) string { return v.CertificateChain }).(pulumi.StringOutput)
}

type LoadbalancerCertificateCustomCertificatePtrOutput struct{ *pulumi.OutputState }

func (LoadbalancerCertificateCustomCertificatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LoadbalancerCertificateCustomCertificate)(nil)).Elem()
}

func (o LoadbalancerCertificateCustomCertificatePtrOutput) ToLoadbalancerCertificateCustomCertificatePtrOutput() LoadbalancerCertificateCustomCertificatePtrOutput {
	return o
}

func (o LoadbalancerCertificateCustomCertificatePtrOutput) ToLoadbalancerCertificateCustomCertificatePtrOutputWithContext(ctx context.Context) LoadbalancerCertificateCustomCertificatePtrOutput {
	return o
}

func (o LoadbalancerCertificateCustomCertificatePtrOutput) Elem() LoadbalancerCertificateCustomCertificateOutput {
	return o.ApplyT(func(v *LoadbalancerCertificateCustomCertificate) LoadbalancerCertificateCustomCertificate {
		if v != nil {
			return *v
		}
		var ret LoadbalancerCertificateCustomCertificate
		return ret
	}).(LoadbalancerCertificateCustomCertificateOutput)
}

// Full PEM-formatted certificate chain.
func (o LoadbalancerCertificateCustomCertificatePtrOutput) CertificateChain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LoadbalancerCertificateCustomCertificate) *string {
		if v == nil {
			return nil
		}
		return &v.CertificateChain
	}).(pulumi.StringPtrOutput)
}

type LoadbalancerCertificateLetsencrypt struct {
	// Main domain of the certificate.
	CommonName string `pulumi:"commonName"`
	// Array of alternative domain names.
	SubjectAlternativeNames []string `pulumi:"subjectAlternativeNames"`
}

// LoadbalancerCertificateLetsencryptInput is an input type that accepts LoadbalancerCertificateLetsencryptArgs and LoadbalancerCertificateLetsencryptOutput values.
// You can construct a concrete instance of `LoadbalancerCertificateLetsencryptInput` via:
//
//          LoadbalancerCertificateLetsencryptArgs{...}
type LoadbalancerCertificateLetsencryptInput interface {
	pulumi.Input

	ToLoadbalancerCertificateLetsencryptOutput() LoadbalancerCertificateLetsencryptOutput
	ToLoadbalancerCertificateLetsencryptOutputWithContext(context.Context) LoadbalancerCertificateLetsencryptOutput
}

type LoadbalancerCertificateLetsencryptArgs struct {
	// Main domain of the certificate.
	CommonName pulumi.StringInput `pulumi:"commonName"`
	// Array of alternative domain names.
	SubjectAlternativeNames pulumi.StringArrayInput `pulumi:"subjectAlternativeNames"`
}

func (LoadbalancerCertificateLetsencryptArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadbalancerCertificateLetsencrypt)(nil)).Elem()
}

func (i LoadbalancerCertificateLetsencryptArgs) ToLoadbalancerCertificateLetsencryptOutput() LoadbalancerCertificateLetsencryptOutput {
	return i.ToLoadbalancerCertificateLetsencryptOutputWithContext(context.Background())
}

func (i LoadbalancerCertificateLetsencryptArgs) ToLoadbalancerCertificateLetsencryptOutputWithContext(ctx context.Context) LoadbalancerCertificateLetsencryptOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadbalancerCertificateLetsencryptOutput)
}

func (i LoadbalancerCertificateLetsencryptArgs) ToLoadbalancerCertificateLetsencryptPtrOutput() LoadbalancerCertificateLetsencryptPtrOutput {
	return i.ToLoadbalancerCertificateLetsencryptPtrOutputWithContext(context.Background())
}

func (i LoadbalancerCertificateLetsencryptArgs) ToLoadbalancerCertificateLetsencryptPtrOutputWithContext(ctx context.Context) LoadbalancerCertificateLetsencryptPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadbalancerCertificateLetsencryptOutput).ToLoadbalancerCertificateLetsencryptPtrOutputWithContext(ctx)
}

// LoadbalancerCertificateLetsencryptPtrInput is an input type that accepts LoadbalancerCertificateLetsencryptArgs, LoadbalancerCertificateLetsencryptPtr and LoadbalancerCertificateLetsencryptPtrOutput values.
// You can construct a concrete instance of `LoadbalancerCertificateLetsencryptPtrInput` via:
//
//          LoadbalancerCertificateLetsencryptArgs{...}
//
//  or:
//
//          nil
type LoadbalancerCertificateLetsencryptPtrInput interface {
	pulumi.Input

	ToLoadbalancerCertificateLetsencryptPtrOutput() LoadbalancerCertificateLetsencryptPtrOutput
	ToLoadbalancerCertificateLetsencryptPtrOutputWithContext(context.Context) LoadbalancerCertificateLetsencryptPtrOutput
}

type loadbalancerCertificateLetsencryptPtrType LoadbalancerCertificateLetsencryptArgs

func LoadbalancerCertificateLetsencryptPtr(v *LoadbalancerCertificateLetsencryptArgs) LoadbalancerCertificateLetsencryptPtrInput {
	return (*loadbalancerCertificateLetsencryptPtrType)(v)
}

func (*loadbalancerCertificateLetsencryptPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LoadbalancerCertificateLetsencrypt)(nil)).Elem()
}

func (i *loadbalancerCertificateLetsencryptPtrType) ToLoadbalancerCertificateLetsencryptPtrOutput() LoadbalancerCertificateLetsencryptPtrOutput {
	return i.ToLoadbalancerCertificateLetsencryptPtrOutputWithContext(context.Background())
}

func (i *loadbalancerCertificateLetsencryptPtrType) ToLoadbalancerCertificateLetsencryptPtrOutputWithContext(ctx context.Context) LoadbalancerCertificateLetsencryptPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadbalancerCertificateLetsencryptPtrOutput)
}

type LoadbalancerCertificateLetsencryptOutput struct{ *pulumi.OutputState }

func (LoadbalancerCertificateLetsencryptOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadbalancerCertificateLetsencrypt)(nil)).Elem()
}

func (o LoadbalancerCertificateLetsencryptOutput) ToLoadbalancerCertificateLetsencryptOutput() LoadbalancerCertificateLetsencryptOutput {
	return o
}

func (o LoadbalancerCertificateLetsencryptOutput) ToLoadbalancerCertificateLetsencryptOutputWithContext(ctx context.Context) LoadbalancerCertificateLetsencryptOutput {
	return o
}

func (o LoadbalancerCertificateLetsencryptOutput) ToLoadbalancerCertificateLetsencryptPtrOutput() LoadbalancerCertificateLetsencryptPtrOutput {
	return o.ToLoadbalancerCertificateLetsencryptPtrOutputWithContext(context.Background())
}

func (o LoadbalancerCertificateLetsencryptOutput) ToLoadbalancerCertificateLetsencryptPtrOutputWithContext(ctx context.Context) LoadbalancerCertificateLetsencryptPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LoadbalancerCertificateLetsencrypt) *LoadbalancerCertificateLetsencrypt {
		return &v
	}).(LoadbalancerCertificateLetsencryptPtrOutput)
}

// Main domain of the certificate.
func (o LoadbalancerCertificateLetsencryptOutput) CommonName() pulumi.StringOutput {
	return o.ApplyT(func(v LoadbalancerCertificateLetsencrypt) string { return v.CommonName }).(pulumi.StringOutput)
}

// Array of alternative domain names.
func (o LoadbalancerCertificateLetsencryptOutput) SubjectAlternativeNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LoadbalancerCertificateLetsencrypt) []string { return v.SubjectAlternativeNames }).(pulumi.StringArrayOutput)
}

type LoadbalancerCertificateLetsencryptPtrOutput struct{ *pulumi.OutputState }

func (LoadbalancerCertificateLetsencryptPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LoadbalancerCertificateLetsencrypt)(nil)).Elem()
}

func (o LoadbalancerCertificateLetsencryptPtrOutput) ToLoadbalancerCertificateLetsencryptPtrOutput() LoadbalancerCertificateLetsencryptPtrOutput {
	return o
}

func (o LoadbalancerCertificateLetsencryptPtrOutput) ToLoadbalancerCertificateLetsencryptPtrOutputWithContext(ctx context.Context) LoadbalancerCertificateLetsencryptPtrOutput {
	return o
}

func (o LoadbalancerCertificateLetsencryptPtrOutput) Elem() LoadbalancerCertificateLetsencryptOutput {
	return o.ApplyT(func(v *LoadbalancerCertificateLetsencrypt) LoadbalancerCertificateLetsencrypt {
		if v != nil {
			return *v
		}
		var ret LoadbalancerCertificateLetsencrypt
		return ret
	}).(LoadbalancerCertificateLetsencryptOutput)
}

// Main domain of the certificate.
func (o LoadbalancerCertificateLetsencryptPtrOutput) CommonName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LoadbalancerCertificateLetsencrypt) *string {
		if v == nil {
			return nil
		}
		return &v.CommonName
	}).(pulumi.StringPtrOutput)
}

// Array of alternative domain names.
func (o LoadbalancerCertificateLetsencryptPtrOutput) SubjectAlternativeNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *LoadbalancerCertificateLetsencrypt) []string {
		if v == nil {
			return nil
		}
		return v.SubjectAlternativeNames
	}).(pulumi.StringArrayOutput)
}

type LoadbalancerFrontendAcl struct {
	// Action to undertake when an ACL filter matches.
	Action LoadbalancerFrontendAclAction `pulumi:"action"`
	// The ACL match rule. At least `ipSubnet` or `httpFilter` and `httpFilterValue` are required.
	Match LoadbalancerFrontendAclMatch `pulumi:"match"`
	// The ACL name. If not provided it will be randomly generated.
	Name *string `pulumi:"name"`
}

// LoadbalancerFrontendAclInput is an input type that accepts LoadbalancerFrontendAclArgs and LoadbalancerFrontendAclOutput values.
// You can construct a concrete instance of `LoadbalancerFrontendAclInput` via:
//
//          LoadbalancerFrontendAclArgs{...}
type LoadbalancerFrontendAclInput interface {
	pulumi.Input

	ToLoadbalancerFrontendAclOutput() LoadbalancerFrontendAclOutput
	ToLoadbalancerFrontendAclOutputWithContext(context.Context) LoadbalancerFrontendAclOutput
}

type LoadbalancerFrontendAclArgs struct {
	// Action to undertake when an ACL filter matches.
	Action LoadbalancerFrontendAclActionInput `pulumi:"action"`
	// The ACL match rule. At least `ipSubnet` or `httpFilter` and `httpFilterValue` are required.
	Match LoadbalancerFrontendAclMatchInput `pulumi:"match"`
	// The ACL name. If not provided it will be randomly generated.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (LoadbalancerFrontendAclArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadbalancerFrontendAcl)(nil)).Elem()
}

func (i LoadbalancerFrontendAclArgs) ToLoadbalancerFrontendAclOutput() LoadbalancerFrontendAclOutput {
	return i.ToLoadbalancerFrontendAclOutputWithContext(context.Background())
}

func (i LoadbalancerFrontendAclArgs) ToLoadbalancerFrontendAclOutputWithContext(ctx context.Context) LoadbalancerFrontendAclOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadbalancerFrontendAclOutput)
}

// LoadbalancerFrontendAclArrayInput is an input type that accepts LoadbalancerFrontendAclArray and LoadbalancerFrontendAclArrayOutput values.
// You can construct a concrete instance of `LoadbalancerFrontendAclArrayInput` via:
//
//          LoadbalancerFrontendAclArray{ LoadbalancerFrontendAclArgs{...} }
type LoadbalancerFrontendAclArrayInput interface {
	pulumi.Input

	ToLoadbalancerFrontendAclArrayOutput() LoadbalancerFrontendAclArrayOutput
	ToLoadbalancerFrontendAclArrayOutputWithContext(context.Context) LoadbalancerFrontendAclArrayOutput
}

type LoadbalancerFrontendAclArray []LoadbalancerFrontendAclInput

func (LoadbalancerFrontendAclArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LoadbalancerFrontendAcl)(nil)).Elem()
}

func (i LoadbalancerFrontendAclArray) ToLoadbalancerFrontendAclArrayOutput() LoadbalancerFrontendAclArrayOutput {
	return i.ToLoadbalancerFrontendAclArrayOutputWithContext(context.Background())
}

func (i LoadbalancerFrontendAclArray) ToLoadbalancerFrontendAclArrayOutputWithContext(ctx context.Context) LoadbalancerFrontendAclArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadbalancerFrontendAclArrayOutput)
}

type LoadbalancerFrontendAclOutput struct{ *pulumi.OutputState }

func (LoadbalancerFrontendAclOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadbalancerFrontendAcl)(nil)).Elem()
}

func (o LoadbalancerFrontendAclOutput) ToLoadbalancerFrontendAclOutput() LoadbalancerFrontendAclOutput {
	return o
}

func (o LoadbalancerFrontendAclOutput) ToLoadbalancerFrontendAclOutputWithContext(ctx context.Context) LoadbalancerFrontendAclOutput {
	return o
}

// Action to undertake when an ACL filter matches.
func (o LoadbalancerFrontendAclOutput) Action() LoadbalancerFrontendAclActionOutput {
	return o.ApplyT(func(v LoadbalancerFrontendAcl) LoadbalancerFrontendAclAction { return v.Action }).(LoadbalancerFrontendAclActionOutput)
}

// The ACL match rule. At least `ipSubnet` or `httpFilter` and `httpFilterValue` are required.
func (o LoadbalancerFrontendAclOutput) Match() LoadbalancerFrontendAclMatchOutput {
	return o.ApplyT(func(v LoadbalancerFrontendAcl) LoadbalancerFrontendAclMatch { return v.Match }).(LoadbalancerFrontendAclMatchOutput)
}

// The ACL name. If not provided it will be randomly generated.
func (o LoadbalancerFrontendAclOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LoadbalancerFrontendAcl) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type LoadbalancerFrontendAclArrayOutput struct{ *pulumi.OutputState }

func (LoadbalancerFrontendAclArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LoadbalancerFrontendAcl)(nil)).Elem()
}

func (o LoadbalancerFrontendAclArrayOutput) ToLoadbalancerFrontendAclArrayOutput() LoadbalancerFrontendAclArrayOutput {
	return o
}

func (o LoadbalancerFrontendAclArrayOutput) ToLoadbalancerFrontendAclArrayOutputWithContext(ctx context.Context) LoadbalancerFrontendAclArrayOutput {
	return o
}

func (o LoadbalancerFrontendAclArrayOutput) Index(i pulumi.IntInput) LoadbalancerFrontendAclOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LoadbalancerFrontendAcl {
		return vs[0].([]LoadbalancerFrontendAcl)[vs[1].(int)]
	}).(LoadbalancerFrontendAclOutput)
}

type LoadbalancerFrontendAclAction struct {
	// The action type. Possible values are: `allow` or `deny`.
	Type string `pulumi:"type"`
}

// LoadbalancerFrontendAclActionInput is an input type that accepts LoadbalancerFrontendAclActionArgs and LoadbalancerFrontendAclActionOutput values.
// You can construct a concrete instance of `LoadbalancerFrontendAclActionInput` via:
//
//          LoadbalancerFrontendAclActionArgs{...}
type LoadbalancerFrontendAclActionInput interface {
	pulumi.Input

	ToLoadbalancerFrontendAclActionOutput() LoadbalancerFrontendAclActionOutput
	ToLoadbalancerFrontendAclActionOutputWithContext(context.Context) LoadbalancerFrontendAclActionOutput
}

type LoadbalancerFrontendAclActionArgs struct {
	// The action type. Possible values are: `allow` or `deny`.
	Type pulumi.StringInput `pulumi:"type"`
}

func (LoadbalancerFrontendAclActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadbalancerFrontendAclAction)(nil)).Elem()
}

func (i LoadbalancerFrontendAclActionArgs) ToLoadbalancerFrontendAclActionOutput() LoadbalancerFrontendAclActionOutput {
	return i.ToLoadbalancerFrontendAclActionOutputWithContext(context.Background())
}

func (i LoadbalancerFrontendAclActionArgs) ToLoadbalancerFrontendAclActionOutputWithContext(ctx context.Context) LoadbalancerFrontendAclActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadbalancerFrontendAclActionOutput)
}

type LoadbalancerFrontendAclActionOutput struct{ *pulumi.OutputState }

func (LoadbalancerFrontendAclActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadbalancerFrontendAclAction)(nil)).Elem()
}

func (o LoadbalancerFrontendAclActionOutput) ToLoadbalancerFrontendAclActionOutput() LoadbalancerFrontendAclActionOutput {
	return o
}

func (o LoadbalancerFrontendAclActionOutput) ToLoadbalancerFrontendAclActionOutputWithContext(ctx context.Context) LoadbalancerFrontendAclActionOutput {
	return o
}

// The action type. Possible values are: `allow` or `deny`.
func (o LoadbalancerFrontendAclActionOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LoadbalancerFrontendAclAction) string { return v.Type }).(pulumi.StringOutput)
}

type LoadbalancerFrontendAclMatch struct {
	// The HTTP filter to match. This filter is supported only if your backend protocol has an HTTP forward protocol.
	// It extracts the request's URL path, which starts at the first slash and ends before the question mark (without the host part).
	// Possible values are: `aclHttpFilterNone`, `pathBegin`, `pathEnd` or `regex`.
	HttpFilter *string `pulumi:"httpFilter"`
	// A list of possible values to match for the given HTTP filter.
	HttpFilterValues []string `pulumi:"httpFilterValues"`
	// If set to `true`, the condition will be of type "unless".
	Invert *bool `pulumi:"invert"`
	// A list of IPs or CIDR v4/v6 addresses of the client of the session to match.
	IpSubnets []string `pulumi:"ipSubnets"`
}

// LoadbalancerFrontendAclMatchInput is an input type that accepts LoadbalancerFrontendAclMatchArgs and LoadbalancerFrontendAclMatchOutput values.
// You can construct a concrete instance of `LoadbalancerFrontendAclMatchInput` via:
//
//          LoadbalancerFrontendAclMatchArgs{...}
type LoadbalancerFrontendAclMatchInput interface {
	pulumi.Input

	ToLoadbalancerFrontendAclMatchOutput() LoadbalancerFrontendAclMatchOutput
	ToLoadbalancerFrontendAclMatchOutputWithContext(context.Context) LoadbalancerFrontendAclMatchOutput
}

type LoadbalancerFrontendAclMatchArgs struct {
	// The HTTP filter to match. This filter is supported only if your backend protocol has an HTTP forward protocol.
	// It extracts the request's URL path, which starts at the first slash and ends before the question mark (without the host part).
	// Possible values are: `aclHttpFilterNone`, `pathBegin`, `pathEnd` or `regex`.
	HttpFilter pulumi.StringPtrInput `pulumi:"httpFilter"`
	// A list of possible values to match for the given HTTP filter.
	HttpFilterValues pulumi.StringArrayInput `pulumi:"httpFilterValues"`
	// If set to `true`, the condition will be of type "unless".
	Invert pulumi.BoolPtrInput `pulumi:"invert"`
	// A list of IPs or CIDR v4/v6 addresses of the client of the session to match.
	IpSubnets pulumi.StringArrayInput `pulumi:"ipSubnets"`
}

func (LoadbalancerFrontendAclMatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadbalancerFrontendAclMatch)(nil)).Elem()
}

func (i LoadbalancerFrontendAclMatchArgs) ToLoadbalancerFrontendAclMatchOutput() LoadbalancerFrontendAclMatchOutput {
	return i.ToLoadbalancerFrontendAclMatchOutputWithContext(context.Background())
}

func (i LoadbalancerFrontendAclMatchArgs) ToLoadbalancerFrontendAclMatchOutputWithContext(ctx context.Context) LoadbalancerFrontendAclMatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadbalancerFrontendAclMatchOutput)
}

type LoadbalancerFrontendAclMatchOutput struct{ *pulumi.OutputState }

func (LoadbalancerFrontendAclMatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadbalancerFrontendAclMatch)(nil)).Elem()
}

func (o LoadbalancerFrontendAclMatchOutput) ToLoadbalancerFrontendAclMatchOutput() LoadbalancerFrontendAclMatchOutput {
	return o
}

func (o LoadbalancerFrontendAclMatchOutput) ToLoadbalancerFrontendAclMatchOutputWithContext(ctx context.Context) LoadbalancerFrontendAclMatchOutput {
	return o
}

// The HTTP filter to match. This filter is supported only if your backend protocol has an HTTP forward protocol.
// It extracts the request's URL path, which starts at the first slash and ends before the question mark (without the host part).
// Possible values are: `aclHttpFilterNone`, `pathBegin`, `pathEnd` or `regex`.
func (o LoadbalancerFrontendAclMatchOutput) HttpFilter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LoadbalancerFrontendAclMatch) *string { return v.HttpFilter }).(pulumi.StringPtrOutput)
}

// A list of possible values to match for the given HTTP filter.
func (o LoadbalancerFrontendAclMatchOutput) HttpFilterValues() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LoadbalancerFrontendAclMatch) []string { return v.HttpFilterValues }).(pulumi.StringArrayOutput)
}

// If set to `true`, the condition will be of type "unless".
func (o LoadbalancerFrontendAclMatchOutput) Invert() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LoadbalancerFrontendAclMatch) *bool { return v.Invert }).(pulumi.BoolPtrOutput)
}

// A list of IPs or CIDR v4/v6 addresses of the client of the session to match.
func (o LoadbalancerFrontendAclMatchOutput) IpSubnets() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LoadbalancerFrontendAclMatch) []string { return v.IpSubnets }).(pulumi.StringArrayOutput)
}

type LoadbalancerPrivateNetwork struct {
	DhcpConfig       *bool    `pulumi:"dhcpConfig"`
	PrivateNetworkId string   `pulumi:"privateNetworkId"`
	StaticConfigs    []string `pulumi:"staticConfigs"`
	// The Private Network attachment status
	Status *string `pulumi:"status"`
	// `zone`) The zone in which the IP should be reserved.
	Zone *string `pulumi:"zone"`
}

// LoadbalancerPrivateNetworkInput is an input type that accepts LoadbalancerPrivateNetworkArgs and LoadbalancerPrivateNetworkOutput values.
// You can construct a concrete instance of `LoadbalancerPrivateNetworkInput` via:
//
//          LoadbalancerPrivateNetworkArgs{...}
type LoadbalancerPrivateNetworkInput interface {
	pulumi.Input

	ToLoadbalancerPrivateNetworkOutput() LoadbalancerPrivateNetworkOutput
	ToLoadbalancerPrivateNetworkOutputWithContext(context.Context) LoadbalancerPrivateNetworkOutput
}

type LoadbalancerPrivateNetworkArgs struct {
	DhcpConfig       pulumi.BoolPtrInput     `pulumi:"dhcpConfig"`
	PrivateNetworkId pulumi.StringInput      `pulumi:"privateNetworkId"`
	StaticConfigs    pulumi.StringArrayInput `pulumi:"staticConfigs"`
	// The Private Network attachment status
	Status pulumi.StringPtrInput `pulumi:"status"`
	// `zone`) The zone in which the IP should be reserved.
	Zone pulumi.StringPtrInput `pulumi:"zone"`
}

func (LoadbalancerPrivateNetworkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadbalancerPrivateNetwork)(nil)).Elem()
}

func (i LoadbalancerPrivateNetworkArgs) ToLoadbalancerPrivateNetworkOutput() LoadbalancerPrivateNetworkOutput {
	return i.ToLoadbalancerPrivateNetworkOutputWithContext(context.Background())
}

func (i LoadbalancerPrivateNetworkArgs) ToLoadbalancerPrivateNetworkOutputWithContext(ctx context.Context) LoadbalancerPrivateNetworkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadbalancerPrivateNetworkOutput)
}

// LoadbalancerPrivateNetworkArrayInput is an input type that accepts LoadbalancerPrivateNetworkArray and LoadbalancerPrivateNetworkArrayOutput values.
// You can construct a concrete instance of `LoadbalancerPrivateNetworkArrayInput` via:
//
//          LoadbalancerPrivateNetworkArray{ LoadbalancerPrivateNetworkArgs{...} }
type LoadbalancerPrivateNetworkArrayInput interface {
	pulumi.Input

	ToLoadbalancerPrivateNetworkArrayOutput() LoadbalancerPrivateNetworkArrayOutput
	ToLoadbalancerPrivateNetworkArrayOutputWithContext(context.Context) LoadbalancerPrivateNetworkArrayOutput
}

type LoadbalancerPrivateNetworkArray []LoadbalancerPrivateNetworkInput

func (LoadbalancerPrivateNetworkArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LoadbalancerPrivateNetwork)(nil)).Elem()
}

func (i LoadbalancerPrivateNetworkArray) ToLoadbalancerPrivateNetworkArrayOutput() LoadbalancerPrivateNetworkArrayOutput {
	return i.ToLoadbalancerPrivateNetworkArrayOutputWithContext(context.Background())
}

func (i LoadbalancerPrivateNetworkArray) ToLoadbalancerPrivateNetworkArrayOutputWithContext(ctx context.Context) LoadbalancerPrivateNetworkArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadbalancerPrivateNetworkArrayOutput)
}

type LoadbalancerPrivateNetworkOutput struct{ *pulumi.OutputState }

func (LoadbalancerPrivateNetworkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadbalancerPrivateNetwork)(nil)).Elem()
}

func (o LoadbalancerPrivateNetworkOutput) ToLoadbalancerPrivateNetworkOutput() LoadbalancerPrivateNetworkOutput {
	return o
}

func (o LoadbalancerPrivateNetworkOutput) ToLoadbalancerPrivateNetworkOutputWithContext(ctx context.Context) LoadbalancerPrivateNetworkOutput {
	return o
}

func (o LoadbalancerPrivateNetworkOutput) DhcpConfig() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LoadbalancerPrivateNetwork) *bool { return v.DhcpConfig }).(pulumi.BoolPtrOutput)
}

func (o LoadbalancerPrivateNetworkOutput) PrivateNetworkId() pulumi.StringOutput {
	return o.ApplyT(func(v LoadbalancerPrivateNetwork) string { return v.PrivateNetworkId }).(pulumi.StringOutput)
}

func (o LoadbalancerPrivateNetworkOutput) StaticConfigs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LoadbalancerPrivateNetwork) []string { return v.StaticConfigs }).(pulumi.StringArrayOutput)
}

// The Private Network attachment status
func (o LoadbalancerPrivateNetworkOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LoadbalancerPrivateNetwork) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// `zone`) The zone in which the IP should be reserved.
func (o LoadbalancerPrivateNetworkOutput) Zone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LoadbalancerPrivateNetwork) *string { return v.Zone }).(pulumi.StringPtrOutput)
}

type LoadbalancerPrivateNetworkArrayOutput struct{ *pulumi.OutputState }

func (LoadbalancerPrivateNetworkArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LoadbalancerPrivateNetwork)(nil)).Elem()
}

func (o LoadbalancerPrivateNetworkArrayOutput) ToLoadbalancerPrivateNetworkArrayOutput() LoadbalancerPrivateNetworkArrayOutput {
	return o
}

func (o LoadbalancerPrivateNetworkArrayOutput) ToLoadbalancerPrivateNetworkArrayOutputWithContext(ctx context.Context) LoadbalancerPrivateNetworkArrayOutput {
	return o
}

func (o LoadbalancerPrivateNetworkArrayOutput) Index(i pulumi.IntInput) LoadbalancerPrivateNetworkOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LoadbalancerPrivateNetwork {
		return vs[0].([]LoadbalancerPrivateNetwork)[vs[1].(int)]
	}).(LoadbalancerPrivateNetworkOutput)
}

type ObjectBucketCorsRule struct {
	// Specifies which headers are allowed.
	AllowedHeaders []string `pulumi:"allowedHeaders"`
	// Specifies which methods are allowed. Can be `GET`, `PUT`, `POST`, `DELETE` or `HEAD`.
	AllowedMethods []string `pulumi:"allowedMethods"`
	// Specifies which origins are allowed.
	AllowedOrigins []string `pulumi:"allowedOrigins"`
	// Specifies expose header in the response.
	ExposeHeaders []string `pulumi:"exposeHeaders"`
	// Specifies time in seconds that browser can cache the response for a preflight request.
	MaxAgeSeconds *int `pulumi:"maxAgeSeconds"`
}

// ObjectBucketCorsRuleInput is an input type that accepts ObjectBucketCorsRuleArgs and ObjectBucketCorsRuleOutput values.
// You can construct a concrete instance of `ObjectBucketCorsRuleInput` via:
//
//          ObjectBucketCorsRuleArgs{...}
type ObjectBucketCorsRuleInput interface {
	pulumi.Input

	ToObjectBucketCorsRuleOutput() ObjectBucketCorsRuleOutput
	ToObjectBucketCorsRuleOutputWithContext(context.Context) ObjectBucketCorsRuleOutput
}

type ObjectBucketCorsRuleArgs struct {
	// Specifies which headers are allowed.
	AllowedHeaders pulumi.StringArrayInput `pulumi:"allowedHeaders"`
	// Specifies which methods are allowed. Can be `GET`, `PUT`, `POST`, `DELETE` or `HEAD`.
	AllowedMethods pulumi.StringArrayInput `pulumi:"allowedMethods"`
	// Specifies which origins are allowed.
	AllowedOrigins pulumi.StringArrayInput `pulumi:"allowedOrigins"`
	// Specifies expose header in the response.
	ExposeHeaders pulumi.StringArrayInput `pulumi:"exposeHeaders"`
	// Specifies time in seconds that browser can cache the response for a preflight request.
	MaxAgeSeconds pulumi.IntPtrInput `pulumi:"maxAgeSeconds"`
}

func (ObjectBucketCorsRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ObjectBucketCorsRule)(nil)).Elem()
}

func (i ObjectBucketCorsRuleArgs) ToObjectBucketCorsRuleOutput() ObjectBucketCorsRuleOutput {
	return i.ToObjectBucketCorsRuleOutputWithContext(context.Background())
}

func (i ObjectBucketCorsRuleArgs) ToObjectBucketCorsRuleOutputWithContext(ctx context.Context) ObjectBucketCorsRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ObjectBucketCorsRuleOutput)
}

// ObjectBucketCorsRuleArrayInput is an input type that accepts ObjectBucketCorsRuleArray and ObjectBucketCorsRuleArrayOutput values.
// You can construct a concrete instance of `ObjectBucketCorsRuleArrayInput` via:
//
//          ObjectBucketCorsRuleArray{ ObjectBucketCorsRuleArgs{...} }
type ObjectBucketCorsRuleArrayInput interface {
	pulumi.Input

	ToObjectBucketCorsRuleArrayOutput() ObjectBucketCorsRuleArrayOutput
	ToObjectBucketCorsRuleArrayOutputWithContext(context.Context) ObjectBucketCorsRuleArrayOutput
}

type ObjectBucketCorsRuleArray []ObjectBucketCorsRuleInput

func (ObjectBucketCorsRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ObjectBucketCorsRule)(nil)).Elem()
}

func (i ObjectBucketCorsRuleArray) ToObjectBucketCorsRuleArrayOutput() ObjectBucketCorsRuleArrayOutput {
	return i.ToObjectBucketCorsRuleArrayOutputWithContext(context.Background())
}

func (i ObjectBucketCorsRuleArray) ToObjectBucketCorsRuleArrayOutputWithContext(ctx context.Context) ObjectBucketCorsRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ObjectBucketCorsRuleArrayOutput)
}

type ObjectBucketCorsRuleOutput struct{ *pulumi.OutputState }

func (ObjectBucketCorsRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ObjectBucketCorsRule)(nil)).Elem()
}

func (o ObjectBucketCorsRuleOutput) ToObjectBucketCorsRuleOutput() ObjectBucketCorsRuleOutput {
	return o
}

func (o ObjectBucketCorsRuleOutput) ToObjectBucketCorsRuleOutputWithContext(ctx context.Context) ObjectBucketCorsRuleOutput {
	return o
}

// Specifies which headers are allowed.
func (o ObjectBucketCorsRuleOutput) AllowedHeaders() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ObjectBucketCorsRule) []string { return v.AllowedHeaders }).(pulumi.StringArrayOutput)
}

// Specifies which methods are allowed. Can be `GET`, `PUT`, `POST`, `DELETE` or `HEAD`.
func (o ObjectBucketCorsRuleOutput) AllowedMethods() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ObjectBucketCorsRule) []string { return v.AllowedMethods }).(pulumi.StringArrayOutput)
}

// Specifies which origins are allowed.
func (o ObjectBucketCorsRuleOutput) AllowedOrigins() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ObjectBucketCorsRule) []string { return v.AllowedOrigins }).(pulumi.StringArrayOutput)
}

// Specifies expose header in the response.
func (o ObjectBucketCorsRuleOutput) ExposeHeaders() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ObjectBucketCorsRule) []string { return v.ExposeHeaders }).(pulumi.StringArrayOutput)
}

// Specifies time in seconds that browser can cache the response for a preflight request.
func (o ObjectBucketCorsRuleOutput) MaxAgeSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ObjectBucketCorsRule) *int { return v.MaxAgeSeconds }).(pulumi.IntPtrOutput)
}

type ObjectBucketCorsRuleArrayOutput struct{ *pulumi.OutputState }

func (ObjectBucketCorsRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ObjectBucketCorsRule)(nil)).Elem()
}

func (o ObjectBucketCorsRuleArrayOutput) ToObjectBucketCorsRuleArrayOutput() ObjectBucketCorsRuleArrayOutput {
	return o
}

func (o ObjectBucketCorsRuleArrayOutput) ToObjectBucketCorsRuleArrayOutputWithContext(ctx context.Context) ObjectBucketCorsRuleArrayOutput {
	return o
}

func (o ObjectBucketCorsRuleArrayOutput) Index(i pulumi.IntInput) ObjectBucketCorsRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ObjectBucketCorsRule {
		return vs[0].([]ObjectBucketCorsRule)[vs[1].(int)]
	}).(ObjectBucketCorsRuleOutput)
}

type ObjectBucketVersioning struct {
	// Enable versioning. Once you version-enable a bucket, it can never return to an unversioned state. You can, however, suspend versioning on that bucket.
	Enabled *bool `pulumi:"enabled"`
}

// ObjectBucketVersioningInput is an input type that accepts ObjectBucketVersioningArgs and ObjectBucketVersioningOutput values.
// You can construct a concrete instance of `ObjectBucketVersioningInput` via:
//
//          ObjectBucketVersioningArgs{...}
type ObjectBucketVersioningInput interface {
	pulumi.Input

	ToObjectBucketVersioningOutput() ObjectBucketVersioningOutput
	ToObjectBucketVersioningOutputWithContext(context.Context) ObjectBucketVersioningOutput
}

type ObjectBucketVersioningArgs struct {
	// Enable versioning. Once you version-enable a bucket, it can never return to an unversioned state. You can, however, suspend versioning on that bucket.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
}

func (ObjectBucketVersioningArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ObjectBucketVersioning)(nil)).Elem()
}

func (i ObjectBucketVersioningArgs) ToObjectBucketVersioningOutput() ObjectBucketVersioningOutput {
	return i.ToObjectBucketVersioningOutputWithContext(context.Background())
}

func (i ObjectBucketVersioningArgs) ToObjectBucketVersioningOutputWithContext(ctx context.Context) ObjectBucketVersioningOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ObjectBucketVersioningOutput)
}

func (i ObjectBucketVersioningArgs) ToObjectBucketVersioningPtrOutput() ObjectBucketVersioningPtrOutput {
	return i.ToObjectBucketVersioningPtrOutputWithContext(context.Background())
}

func (i ObjectBucketVersioningArgs) ToObjectBucketVersioningPtrOutputWithContext(ctx context.Context) ObjectBucketVersioningPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ObjectBucketVersioningOutput).ToObjectBucketVersioningPtrOutputWithContext(ctx)
}

// ObjectBucketVersioningPtrInput is an input type that accepts ObjectBucketVersioningArgs, ObjectBucketVersioningPtr and ObjectBucketVersioningPtrOutput values.
// You can construct a concrete instance of `ObjectBucketVersioningPtrInput` via:
//
//          ObjectBucketVersioningArgs{...}
//
//  or:
//
//          nil
type ObjectBucketVersioningPtrInput interface {
	pulumi.Input

	ToObjectBucketVersioningPtrOutput() ObjectBucketVersioningPtrOutput
	ToObjectBucketVersioningPtrOutputWithContext(context.Context) ObjectBucketVersioningPtrOutput
}

type objectBucketVersioningPtrType ObjectBucketVersioningArgs

func ObjectBucketVersioningPtr(v *ObjectBucketVersioningArgs) ObjectBucketVersioningPtrInput {
	return (*objectBucketVersioningPtrType)(v)
}

func (*objectBucketVersioningPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ObjectBucketVersioning)(nil)).Elem()
}

func (i *objectBucketVersioningPtrType) ToObjectBucketVersioningPtrOutput() ObjectBucketVersioningPtrOutput {
	return i.ToObjectBucketVersioningPtrOutputWithContext(context.Background())
}

func (i *objectBucketVersioningPtrType) ToObjectBucketVersioningPtrOutputWithContext(ctx context.Context) ObjectBucketVersioningPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ObjectBucketVersioningPtrOutput)
}

type ObjectBucketVersioningOutput struct{ *pulumi.OutputState }

func (ObjectBucketVersioningOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ObjectBucketVersioning)(nil)).Elem()
}

func (o ObjectBucketVersioningOutput) ToObjectBucketVersioningOutput() ObjectBucketVersioningOutput {
	return o
}

func (o ObjectBucketVersioningOutput) ToObjectBucketVersioningOutputWithContext(ctx context.Context) ObjectBucketVersioningOutput {
	return o
}

func (o ObjectBucketVersioningOutput) ToObjectBucketVersioningPtrOutput() ObjectBucketVersioningPtrOutput {
	return o.ToObjectBucketVersioningPtrOutputWithContext(context.Background())
}

func (o ObjectBucketVersioningOutput) ToObjectBucketVersioningPtrOutputWithContext(ctx context.Context) ObjectBucketVersioningPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ObjectBucketVersioning) *ObjectBucketVersioning {
		return &v
	}).(ObjectBucketVersioningPtrOutput)
}

// Enable versioning. Once you version-enable a bucket, it can never return to an unversioned state. You can, however, suspend versioning on that bucket.
func (o ObjectBucketVersioningOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ObjectBucketVersioning) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

type ObjectBucketVersioningPtrOutput struct{ *pulumi.OutputState }

func (ObjectBucketVersioningPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ObjectBucketVersioning)(nil)).Elem()
}

func (o ObjectBucketVersioningPtrOutput) ToObjectBucketVersioningPtrOutput() ObjectBucketVersioningPtrOutput {
	return o
}

func (o ObjectBucketVersioningPtrOutput) ToObjectBucketVersioningPtrOutputWithContext(ctx context.Context) ObjectBucketVersioningPtrOutput {
	return o
}

func (o ObjectBucketVersioningPtrOutput) Elem() ObjectBucketVersioningOutput {
	return o.ApplyT(func(v *ObjectBucketVersioning) ObjectBucketVersioning {
		if v != nil {
			return *v
		}
		var ret ObjectBucketVersioning
		return ret
	}).(ObjectBucketVersioningOutput)
}

// Enable versioning. Once you version-enable a bucket, it can never return to an unversioned state. You can, however, suspend versioning on that bucket.
func (o ObjectBucketVersioningPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ObjectBucketVersioning) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

type GetBaremetalOfferCpu struct {
	CoreCount int `pulumi:"coreCount"`
	// Frequency of the memory in MHz.
	Frequency int `pulumi:"frequency"`
	// The offer name. Only one of `name` and `offerId` should be specified.
	Name        string `pulumi:"name"`
	ThreadCount int    `pulumi:"threadCount"`
}

type GetBaremetalOfferCpuOutput struct{ *pulumi.OutputState }

func (GetBaremetalOfferCpuOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBaremetalOfferCpu)(nil)).Elem()
}

func (o GetBaremetalOfferCpuOutput) ToGetBaremetalOfferCpuOutput() GetBaremetalOfferCpuOutput {
	return o
}

func (o GetBaremetalOfferCpuOutput) ToGetBaremetalOfferCpuOutputWithContext(ctx context.Context) GetBaremetalOfferCpuOutput {
	return o
}

func (o GetBaremetalOfferCpuOutput) CoreCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetBaremetalOfferCpu) int { return v.CoreCount }).(pulumi.IntOutput)
}

// Frequency of the memory in MHz.
func (o GetBaremetalOfferCpuOutput) Frequency() pulumi.IntOutput {
	return o.ApplyT(func(v GetBaremetalOfferCpu) int { return v.Frequency }).(pulumi.IntOutput)
}

// The offer name. Only one of `name` and `offerId` should be specified.
func (o GetBaremetalOfferCpuOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetBaremetalOfferCpu) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetBaremetalOfferCpuOutput) ThreadCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetBaremetalOfferCpu) int { return v.ThreadCount }).(pulumi.IntOutput)
}

type GetBaremetalOfferDisk struct {
	Capacity int `pulumi:"capacity"`
	// Type of memory.
	Type string `pulumi:"type"`
}

type GetBaremetalOfferDiskOutput struct{ *pulumi.OutputState }

func (GetBaremetalOfferDiskOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBaremetalOfferDisk)(nil)).Elem()
}

func (o GetBaremetalOfferDiskOutput) ToGetBaremetalOfferDiskOutput() GetBaremetalOfferDiskOutput {
	return o
}

func (o GetBaremetalOfferDiskOutput) ToGetBaremetalOfferDiskOutputWithContext(ctx context.Context) GetBaremetalOfferDiskOutput {
	return o
}

func (o GetBaremetalOfferDiskOutput) Capacity() pulumi.IntOutput {
	return o.ApplyT(func(v GetBaremetalOfferDisk) int { return v.Capacity }).(pulumi.IntOutput)
}

// Type of memory.
func (o GetBaremetalOfferDiskOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetBaremetalOfferDisk) string { return v.Type }).(pulumi.StringOutput)
}

type GetBaremetalOfferDiskArrayOutput struct{ *pulumi.OutputState }

func (GetBaremetalOfferDiskArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBaremetalOfferDisk)(nil)).Elem()
}

func (o GetBaremetalOfferDiskArrayOutput) ToGetBaremetalOfferDiskArrayOutput() GetBaremetalOfferDiskArrayOutput {
	return o
}

func (o GetBaremetalOfferDiskArrayOutput) ToGetBaremetalOfferDiskArrayOutputWithContext(ctx context.Context) GetBaremetalOfferDiskArrayOutput {
	return o
}

func (o GetBaremetalOfferDiskArrayOutput) Index(i pulumi.IntInput) GetBaremetalOfferDiskOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetBaremetalOfferDisk {
		return vs[0].([]GetBaremetalOfferDisk)[vs[1].(int)]
	}).(GetBaremetalOfferDiskOutput)
}

type GetBaremetalOfferMemory struct {
	Capacity int `pulumi:"capacity"`
	// Frequency of the memory in MHz.
	Frequency int  `pulumi:"frequency"`
	IsEcc     bool `pulumi:"isEcc"`
	// Type of memory.
	Type string `pulumi:"type"`
}

type GetBaremetalOfferMemoryOutput struct{ *pulumi.OutputState }

func (GetBaremetalOfferMemoryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBaremetalOfferMemory)(nil)).Elem()
}

func (o GetBaremetalOfferMemoryOutput) ToGetBaremetalOfferMemoryOutput() GetBaremetalOfferMemoryOutput {
	return o
}

func (o GetBaremetalOfferMemoryOutput) ToGetBaremetalOfferMemoryOutputWithContext(ctx context.Context) GetBaremetalOfferMemoryOutput {
	return o
}

func (o GetBaremetalOfferMemoryOutput) Capacity() pulumi.IntOutput {
	return o.ApplyT(func(v GetBaremetalOfferMemory) int { return v.Capacity }).(pulumi.IntOutput)
}

// Frequency of the memory in MHz.
func (o GetBaremetalOfferMemoryOutput) Frequency() pulumi.IntOutput {
	return o.ApplyT(func(v GetBaremetalOfferMemory) int { return v.Frequency }).(pulumi.IntOutput)
}

func (o GetBaremetalOfferMemoryOutput) IsEcc() pulumi.BoolOutput {
	return o.ApplyT(func(v GetBaremetalOfferMemory) bool { return v.IsEcc }).(pulumi.BoolOutput)
}

// Type of memory.
func (o GetBaremetalOfferMemoryOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetBaremetalOfferMemory) string { return v.Type }).(pulumi.StringOutput)
}

type GetBaremetalOfferMemoryArrayOutput struct{ *pulumi.OutputState }

func (GetBaremetalOfferMemoryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBaremetalOfferMemory)(nil)).Elem()
}

func (o GetBaremetalOfferMemoryArrayOutput) ToGetBaremetalOfferMemoryArrayOutput() GetBaremetalOfferMemoryArrayOutput {
	return o
}

func (o GetBaremetalOfferMemoryArrayOutput) ToGetBaremetalOfferMemoryArrayOutputWithContext(ctx context.Context) GetBaremetalOfferMemoryArrayOutput {
	return o
}

func (o GetBaremetalOfferMemoryArrayOutput) Index(i pulumi.IntInput) GetBaremetalOfferMemoryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetBaremetalOfferMemory {
		return vs[0].([]GetBaremetalOfferMemory)[vs[1].(int)]
	}).(GetBaremetalOfferMemoryOutput)
}

type GetDatabaseAclAclRule struct {
	// A simple text describing this rule
	Description string `pulumi:"description"`
	// The ip range to whitelist in [CIDR notation](https://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing#CIDR_notation)
	Ip string `pulumi:"ip"`
}

type GetDatabaseAclAclRuleOutput struct{ *pulumi.OutputState }

func (GetDatabaseAclAclRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatabaseAclAclRule)(nil)).Elem()
}

func (o GetDatabaseAclAclRuleOutput) ToGetDatabaseAclAclRuleOutput() GetDatabaseAclAclRuleOutput {
	return o
}

func (o GetDatabaseAclAclRuleOutput) ToGetDatabaseAclAclRuleOutputWithContext(ctx context.Context) GetDatabaseAclAclRuleOutput {
	return o
}

// A simple text describing this rule
func (o GetDatabaseAclAclRuleOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabaseAclAclRule) string { return v.Description }).(pulumi.StringOutput)
}

// The ip range to whitelist in [CIDR notation](https://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing#CIDR_notation)
func (o GetDatabaseAclAclRuleOutput) Ip() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabaseAclAclRule) string { return v.Ip }).(pulumi.StringOutput)
}

type GetDatabaseAclAclRuleArrayOutput struct{ *pulumi.OutputState }

func (GetDatabaseAclAclRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDatabaseAclAclRule)(nil)).Elem()
}

func (o GetDatabaseAclAclRuleArrayOutput) ToGetDatabaseAclAclRuleArrayOutput() GetDatabaseAclAclRuleArrayOutput {
	return o
}

func (o GetDatabaseAclAclRuleArrayOutput) ToGetDatabaseAclAclRuleArrayOutputWithContext(ctx context.Context) GetDatabaseAclAclRuleArrayOutput {
	return o
}

func (o GetDatabaseAclAclRuleArrayOutput) Index(i pulumi.IntInput) GetDatabaseAclAclRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDatabaseAclAclRule {
		return vs[0].([]GetDatabaseAclAclRule)[vs[1].(int)]
	}).(GetDatabaseAclAclRuleOutput)
}

type GetDatabaseInstanceLoadBalancer struct {
	EndpointId string `pulumi:"endpointId"`
	Hostname   string `pulumi:"hostname"`
	Ip         string `pulumi:"ip"`
	// The name of the RDB instance.
	// Only one of `name` and `instanceId` should be specified.
	Name string `pulumi:"name"`
	Port int    `pulumi:"port"`
}

type GetDatabaseInstanceLoadBalancerOutput struct{ *pulumi.OutputState }

func (GetDatabaseInstanceLoadBalancerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatabaseInstanceLoadBalancer)(nil)).Elem()
}

func (o GetDatabaseInstanceLoadBalancerOutput) ToGetDatabaseInstanceLoadBalancerOutput() GetDatabaseInstanceLoadBalancerOutput {
	return o
}

func (o GetDatabaseInstanceLoadBalancerOutput) ToGetDatabaseInstanceLoadBalancerOutputWithContext(ctx context.Context) GetDatabaseInstanceLoadBalancerOutput {
	return o
}

func (o GetDatabaseInstanceLoadBalancerOutput) EndpointId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabaseInstanceLoadBalancer) string { return v.EndpointId }).(pulumi.StringOutput)
}

func (o GetDatabaseInstanceLoadBalancerOutput) Hostname() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabaseInstanceLoadBalancer) string { return v.Hostname }).(pulumi.StringOutput)
}

func (o GetDatabaseInstanceLoadBalancerOutput) Ip() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabaseInstanceLoadBalancer) string { return v.Ip }).(pulumi.StringOutput)
}

// The name of the RDB instance.
// Only one of `name` and `instanceId` should be specified.
func (o GetDatabaseInstanceLoadBalancerOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabaseInstanceLoadBalancer) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetDatabaseInstanceLoadBalancerOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v GetDatabaseInstanceLoadBalancer) int { return v.Port }).(pulumi.IntOutput)
}

type GetDatabaseInstanceLoadBalancerArrayOutput struct{ *pulumi.OutputState }

func (GetDatabaseInstanceLoadBalancerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDatabaseInstanceLoadBalancer)(nil)).Elem()
}

func (o GetDatabaseInstanceLoadBalancerArrayOutput) ToGetDatabaseInstanceLoadBalancerArrayOutput() GetDatabaseInstanceLoadBalancerArrayOutput {
	return o
}

func (o GetDatabaseInstanceLoadBalancerArrayOutput) ToGetDatabaseInstanceLoadBalancerArrayOutputWithContext(ctx context.Context) GetDatabaseInstanceLoadBalancerArrayOutput {
	return o
}

func (o GetDatabaseInstanceLoadBalancerArrayOutput) Index(i pulumi.IntInput) GetDatabaseInstanceLoadBalancerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDatabaseInstanceLoadBalancer {
		return vs[0].([]GetDatabaseInstanceLoadBalancer)[vs[1].(int)]
	}).(GetDatabaseInstanceLoadBalancerOutput)
}

type GetDatabaseInstancePrivateNetwork struct {
	EndpointId string `pulumi:"endpointId"`
	Hostname   string `pulumi:"hostname"`
	Ip         string `pulumi:"ip"`
	IpNet      string `pulumi:"ipNet"`
	// The name of the RDB instance.
	// Only one of `name` and `instanceId` should be specified.
	Name string `pulumi:"name"`
	PnId string `pulumi:"pnId"`
	Port int    `pulumi:"port"`
	Zone string `pulumi:"zone"`
}

type GetDatabaseInstancePrivateNetworkOutput struct{ *pulumi.OutputState }

func (GetDatabaseInstancePrivateNetworkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatabaseInstancePrivateNetwork)(nil)).Elem()
}

func (o GetDatabaseInstancePrivateNetworkOutput) ToGetDatabaseInstancePrivateNetworkOutput() GetDatabaseInstancePrivateNetworkOutput {
	return o
}

func (o GetDatabaseInstancePrivateNetworkOutput) ToGetDatabaseInstancePrivateNetworkOutputWithContext(ctx context.Context) GetDatabaseInstancePrivateNetworkOutput {
	return o
}

func (o GetDatabaseInstancePrivateNetworkOutput) EndpointId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabaseInstancePrivateNetwork) string { return v.EndpointId }).(pulumi.StringOutput)
}

func (o GetDatabaseInstancePrivateNetworkOutput) Hostname() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabaseInstancePrivateNetwork) string { return v.Hostname }).(pulumi.StringOutput)
}

func (o GetDatabaseInstancePrivateNetworkOutput) Ip() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabaseInstancePrivateNetwork) string { return v.Ip }).(pulumi.StringOutput)
}

func (o GetDatabaseInstancePrivateNetworkOutput) IpNet() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabaseInstancePrivateNetwork) string { return v.IpNet }).(pulumi.StringOutput)
}

// The name of the RDB instance.
// Only one of `name` and `instanceId` should be specified.
func (o GetDatabaseInstancePrivateNetworkOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabaseInstancePrivateNetwork) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetDatabaseInstancePrivateNetworkOutput) PnId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabaseInstancePrivateNetwork) string { return v.PnId }).(pulumi.StringOutput)
}

func (o GetDatabaseInstancePrivateNetworkOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v GetDatabaseInstancePrivateNetwork) int { return v.Port }).(pulumi.IntOutput)
}

func (o GetDatabaseInstancePrivateNetworkOutput) Zone() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabaseInstancePrivateNetwork) string { return v.Zone }).(pulumi.StringOutput)
}

type GetDatabaseInstancePrivateNetworkArrayOutput struct{ *pulumi.OutputState }

func (GetDatabaseInstancePrivateNetworkArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDatabaseInstancePrivateNetwork)(nil)).Elem()
}

func (o GetDatabaseInstancePrivateNetworkArrayOutput) ToGetDatabaseInstancePrivateNetworkArrayOutput() GetDatabaseInstancePrivateNetworkArrayOutput {
	return o
}

func (o GetDatabaseInstancePrivateNetworkArrayOutput) ToGetDatabaseInstancePrivateNetworkArrayOutputWithContext(ctx context.Context) GetDatabaseInstancePrivateNetworkArrayOutput {
	return o
}

func (o GetDatabaseInstancePrivateNetworkArrayOutput) Index(i pulumi.IntInput) GetDatabaseInstancePrivateNetworkOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDatabaseInstancePrivateNetwork {
		return vs[0].([]GetDatabaseInstancePrivateNetwork)[vs[1].(int)]
	}).(GetDatabaseInstancePrivateNetworkOutput)
}

type GetDatabaseInstanceReadReplica struct {
	Ip string `pulumi:"ip"`
	// The name of the RDB instance.
	// Only one of `name` and `instanceId` should be specified.
	Name string `pulumi:"name"`
	Port int    `pulumi:"port"`
}

type GetDatabaseInstanceReadReplicaOutput struct{ *pulumi.OutputState }

func (GetDatabaseInstanceReadReplicaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatabaseInstanceReadReplica)(nil)).Elem()
}

func (o GetDatabaseInstanceReadReplicaOutput) ToGetDatabaseInstanceReadReplicaOutput() GetDatabaseInstanceReadReplicaOutput {
	return o
}

func (o GetDatabaseInstanceReadReplicaOutput) ToGetDatabaseInstanceReadReplicaOutputWithContext(ctx context.Context) GetDatabaseInstanceReadReplicaOutput {
	return o
}

func (o GetDatabaseInstanceReadReplicaOutput) Ip() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabaseInstanceReadReplica) string { return v.Ip }).(pulumi.StringOutput)
}

// The name of the RDB instance.
// Only one of `name` and `instanceId` should be specified.
func (o GetDatabaseInstanceReadReplicaOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabaseInstanceReadReplica) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetDatabaseInstanceReadReplicaOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v GetDatabaseInstanceReadReplica) int { return v.Port }).(pulumi.IntOutput)
}

type GetDatabaseInstanceReadReplicaArrayOutput struct{ *pulumi.OutputState }

func (GetDatabaseInstanceReadReplicaArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDatabaseInstanceReadReplica)(nil)).Elem()
}

func (o GetDatabaseInstanceReadReplicaArrayOutput) ToGetDatabaseInstanceReadReplicaArrayOutput() GetDatabaseInstanceReadReplicaArrayOutput {
	return o
}

func (o GetDatabaseInstanceReadReplicaArrayOutput) ToGetDatabaseInstanceReadReplicaArrayOutputWithContext(ctx context.Context) GetDatabaseInstanceReadReplicaArrayOutput {
	return o
}

func (o GetDatabaseInstanceReadReplicaArrayOutput) Index(i pulumi.IntInput) GetDatabaseInstanceReadReplicaOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDatabaseInstanceReadReplica {
		return vs[0].([]GetDatabaseInstanceReadReplica)[vs[1].(int)]
	}).(GetDatabaseInstanceReadReplicaOutput)
}

type GetDomainRecordGeoIp struct {
	Matches []GetDomainRecordGeoIpMatch `pulumi:"matches"`
}

type GetDomainRecordGeoIpOutput struct{ *pulumi.OutputState }

func (GetDomainRecordGeoIpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDomainRecordGeoIp)(nil)).Elem()
}

func (o GetDomainRecordGeoIpOutput) ToGetDomainRecordGeoIpOutput() GetDomainRecordGeoIpOutput {
	return o
}

func (o GetDomainRecordGeoIpOutput) ToGetDomainRecordGeoIpOutputWithContext(ctx context.Context) GetDomainRecordGeoIpOutput {
	return o
}

func (o GetDomainRecordGeoIpOutput) Matches() GetDomainRecordGeoIpMatchArrayOutput {
	return o.ApplyT(func(v GetDomainRecordGeoIp) []GetDomainRecordGeoIpMatch { return v.Matches }).(GetDomainRecordGeoIpMatchArrayOutput)
}

type GetDomainRecordGeoIpArrayOutput struct{ *pulumi.OutputState }

func (GetDomainRecordGeoIpArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDomainRecordGeoIp)(nil)).Elem()
}

func (o GetDomainRecordGeoIpArrayOutput) ToGetDomainRecordGeoIpArrayOutput() GetDomainRecordGeoIpArrayOutput {
	return o
}

func (o GetDomainRecordGeoIpArrayOutput) ToGetDomainRecordGeoIpArrayOutputWithContext(ctx context.Context) GetDomainRecordGeoIpArrayOutput {
	return o
}

func (o GetDomainRecordGeoIpArrayOutput) Index(i pulumi.IntInput) GetDomainRecordGeoIpOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDomainRecordGeoIp {
		return vs[0].([]GetDomainRecordGeoIp)[vs[1].(int)]
	}).(GetDomainRecordGeoIpOutput)
}

type GetDomainRecordGeoIpMatch struct {
	Continents []string `pulumi:"continents"`
	Countries  []string `pulumi:"countries"`
	// The content of the record (an IPv4 for an `A`, a string for a `TXT`...).
	// Cannot be used with `recordId`.
	Data string `pulumi:"data"`
}

type GetDomainRecordGeoIpMatchOutput struct{ *pulumi.OutputState }

func (GetDomainRecordGeoIpMatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDomainRecordGeoIpMatch)(nil)).Elem()
}

func (o GetDomainRecordGeoIpMatchOutput) ToGetDomainRecordGeoIpMatchOutput() GetDomainRecordGeoIpMatchOutput {
	return o
}

func (o GetDomainRecordGeoIpMatchOutput) ToGetDomainRecordGeoIpMatchOutputWithContext(ctx context.Context) GetDomainRecordGeoIpMatchOutput {
	return o
}

func (o GetDomainRecordGeoIpMatchOutput) Continents() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetDomainRecordGeoIpMatch) []string { return v.Continents }).(pulumi.StringArrayOutput)
}

func (o GetDomainRecordGeoIpMatchOutput) Countries() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetDomainRecordGeoIpMatch) []string { return v.Countries }).(pulumi.StringArrayOutput)
}

// The content of the record (an IPv4 for an `A`, a string for a `TXT`...).
// Cannot be used with `recordId`.
func (o GetDomainRecordGeoIpMatchOutput) Data() pulumi.StringOutput {
	return o.ApplyT(func(v GetDomainRecordGeoIpMatch) string { return v.Data }).(pulumi.StringOutput)
}

type GetDomainRecordGeoIpMatchArrayOutput struct{ *pulumi.OutputState }

func (GetDomainRecordGeoIpMatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDomainRecordGeoIpMatch)(nil)).Elem()
}

func (o GetDomainRecordGeoIpMatchArrayOutput) ToGetDomainRecordGeoIpMatchArrayOutput() GetDomainRecordGeoIpMatchArrayOutput {
	return o
}

func (o GetDomainRecordGeoIpMatchArrayOutput) ToGetDomainRecordGeoIpMatchArrayOutputWithContext(ctx context.Context) GetDomainRecordGeoIpMatchArrayOutput {
	return o
}

func (o GetDomainRecordGeoIpMatchArrayOutput) Index(i pulumi.IntInput) GetDomainRecordGeoIpMatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDomainRecordGeoIpMatch {
		return vs[0].([]GetDomainRecordGeoIpMatch)[vs[1].(int)]
	}).(GetDomainRecordGeoIpMatchOutput)
}

type GetDomainRecordHttpService struct {
	Ips         []string `pulumi:"ips"`
	MustContain string   `pulumi:"mustContain"`
	Strategy    string   `pulumi:"strategy"`
	Url         string   `pulumi:"url"`
	UserAgent   string   `pulumi:"userAgent"`
}

type GetDomainRecordHttpServiceOutput struct{ *pulumi.OutputState }

func (GetDomainRecordHttpServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDomainRecordHttpService)(nil)).Elem()
}

func (o GetDomainRecordHttpServiceOutput) ToGetDomainRecordHttpServiceOutput() GetDomainRecordHttpServiceOutput {
	return o
}

func (o GetDomainRecordHttpServiceOutput) ToGetDomainRecordHttpServiceOutputWithContext(ctx context.Context) GetDomainRecordHttpServiceOutput {
	return o
}

func (o GetDomainRecordHttpServiceOutput) Ips() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetDomainRecordHttpService) []string { return v.Ips }).(pulumi.StringArrayOutput)
}

func (o GetDomainRecordHttpServiceOutput) MustContain() pulumi.StringOutput {
	return o.ApplyT(func(v GetDomainRecordHttpService) string { return v.MustContain }).(pulumi.StringOutput)
}

func (o GetDomainRecordHttpServiceOutput) Strategy() pulumi.StringOutput {
	return o.ApplyT(func(v GetDomainRecordHttpService) string { return v.Strategy }).(pulumi.StringOutput)
}

func (o GetDomainRecordHttpServiceOutput) Url() pulumi.StringOutput {
	return o.ApplyT(func(v GetDomainRecordHttpService) string { return v.Url }).(pulumi.StringOutput)
}

func (o GetDomainRecordHttpServiceOutput) UserAgent() pulumi.StringOutput {
	return o.ApplyT(func(v GetDomainRecordHttpService) string { return v.UserAgent }).(pulumi.StringOutput)
}

type GetDomainRecordHttpServiceArrayOutput struct{ *pulumi.OutputState }

func (GetDomainRecordHttpServiceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDomainRecordHttpService)(nil)).Elem()
}

func (o GetDomainRecordHttpServiceArrayOutput) ToGetDomainRecordHttpServiceArrayOutput() GetDomainRecordHttpServiceArrayOutput {
	return o
}

func (o GetDomainRecordHttpServiceArrayOutput) ToGetDomainRecordHttpServiceArrayOutputWithContext(ctx context.Context) GetDomainRecordHttpServiceArrayOutput {
	return o
}

func (o GetDomainRecordHttpServiceArrayOutput) Index(i pulumi.IntInput) GetDomainRecordHttpServiceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDomainRecordHttpService {
		return vs[0].([]GetDomainRecordHttpService)[vs[1].(int)]
	}).(GetDomainRecordHttpServiceOutput)
}

type GetDomainRecordView struct {
	// The content of the record (an IPv4 for an `A`, a string for a `TXT`...).
	// Cannot be used with `recordId`.
	Data   string `pulumi:"data"`
	Subnet string `pulumi:"subnet"`
}

type GetDomainRecordViewOutput struct{ *pulumi.OutputState }

func (GetDomainRecordViewOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDomainRecordView)(nil)).Elem()
}

func (o GetDomainRecordViewOutput) ToGetDomainRecordViewOutput() GetDomainRecordViewOutput {
	return o
}

func (o GetDomainRecordViewOutput) ToGetDomainRecordViewOutputWithContext(ctx context.Context) GetDomainRecordViewOutput {
	return o
}

// The content of the record (an IPv4 for an `A`, a string for a `TXT`...).
// Cannot be used with `recordId`.
func (o GetDomainRecordViewOutput) Data() pulumi.StringOutput {
	return o.ApplyT(func(v GetDomainRecordView) string { return v.Data }).(pulumi.StringOutput)
}

func (o GetDomainRecordViewOutput) Subnet() pulumi.StringOutput {
	return o.ApplyT(func(v GetDomainRecordView) string { return v.Subnet }).(pulumi.StringOutput)
}

type GetDomainRecordViewArrayOutput struct{ *pulumi.OutputState }

func (GetDomainRecordViewArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDomainRecordView)(nil)).Elem()
}

func (o GetDomainRecordViewArrayOutput) ToGetDomainRecordViewArrayOutput() GetDomainRecordViewArrayOutput {
	return o
}

func (o GetDomainRecordViewArrayOutput) ToGetDomainRecordViewArrayOutputWithContext(ctx context.Context) GetDomainRecordViewArrayOutput {
	return o
}

func (o GetDomainRecordViewArrayOutput) Index(i pulumi.IntInput) GetDomainRecordViewOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDomainRecordView {
		return vs[0].([]GetDomainRecordView)[vs[1].(int)]
	}).(GetDomainRecordViewOutput)
}

type GetDomainRecordWeighted struct {
	Ip     string `pulumi:"ip"`
	Weight int    `pulumi:"weight"`
}

type GetDomainRecordWeightedOutput struct{ *pulumi.OutputState }

func (GetDomainRecordWeightedOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDomainRecordWeighted)(nil)).Elem()
}

func (o GetDomainRecordWeightedOutput) ToGetDomainRecordWeightedOutput() GetDomainRecordWeightedOutput {
	return o
}

func (o GetDomainRecordWeightedOutput) ToGetDomainRecordWeightedOutputWithContext(ctx context.Context) GetDomainRecordWeightedOutput {
	return o
}

func (o GetDomainRecordWeightedOutput) Ip() pulumi.StringOutput {
	return o.ApplyT(func(v GetDomainRecordWeighted) string { return v.Ip }).(pulumi.StringOutput)
}

func (o GetDomainRecordWeightedOutput) Weight() pulumi.IntOutput {
	return o.ApplyT(func(v GetDomainRecordWeighted) int { return v.Weight }).(pulumi.IntOutput)
}

type GetDomainRecordWeightedArrayOutput struct{ *pulumi.OutputState }

func (GetDomainRecordWeightedArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDomainRecordWeighted)(nil)).Elem()
}

func (o GetDomainRecordWeightedArrayOutput) ToGetDomainRecordWeightedArrayOutput() GetDomainRecordWeightedArrayOutput {
	return o
}

func (o GetDomainRecordWeightedArrayOutput) ToGetDomainRecordWeightedArrayOutputWithContext(ctx context.Context) GetDomainRecordWeightedArrayOutput {
	return o
}

func (o GetDomainRecordWeightedArrayOutput) Index(i pulumi.IntInput) GetDomainRecordWeightedOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDomainRecordWeighted {
		return vs[0].([]GetDomainRecordWeighted)[vs[1].(int)]
	}).(GetDomainRecordWeightedOutput)
}

type GetInstanceSecurityGroupInboundRule struct {
	// The action to take when rule match. Possible values are: `accept` or `drop`.
	Action    string `pulumi:"action"`
	Ip        string `pulumi:"ip"`
	IpRange   string `pulumi:"ipRange"`
	Port      int    `pulumi:"port"`
	PortRange string `pulumi:"portRange"`
	Protocol  string `pulumi:"protocol"`
}

type GetInstanceSecurityGroupInboundRuleOutput struct{ *pulumi.OutputState }

func (GetInstanceSecurityGroupInboundRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceSecurityGroupInboundRule)(nil)).Elem()
}

func (o GetInstanceSecurityGroupInboundRuleOutput) ToGetInstanceSecurityGroupInboundRuleOutput() GetInstanceSecurityGroupInboundRuleOutput {
	return o
}

func (o GetInstanceSecurityGroupInboundRuleOutput) ToGetInstanceSecurityGroupInboundRuleOutputWithContext(ctx context.Context) GetInstanceSecurityGroupInboundRuleOutput {
	return o
}

// The action to take when rule match. Possible values are: `accept` or `drop`.
func (o GetInstanceSecurityGroupInboundRuleOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceSecurityGroupInboundRule) string { return v.Action }).(pulumi.StringOutput)
}

func (o GetInstanceSecurityGroupInboundRuleOutput) Ip() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceSecurityGroupInboundRule) string { return v.Ip }).(pulumi.StringOutput)
}

func (o GetInstanceSecurityGroupInboundRuleOutput) IpRange() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceSecurityGroupInboundRule) string { return v.IpRange }).(pulumi.StringOutput)
}

func (o GetInstanceSecurityGroupInboundRuleOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstanceSecurityGroupInboundRule) int { return v.Port }).(pulumi.IntOutput)
}

func (o GetInstanceSecurityGroupInboundRuleOutput) PortRange() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceSecurityGroupInboundRule) string { return v.PortRange }).(pulumi.StringOutput)
}

func (o GetInstanceSecurityGroupInboundRuleOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceSecurityGroupInboundRule) string { return v.Protocol }).(pulumi.StringOutput)
}

type GetInstanceSecurityGroupInboundRuleArrayOutput struct{ *pulumi.OutputState }

func (GetInstanceSecurityGroupInboundRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceSecurityGroupInboundRule)(nil)).Elem()
}

func (o GetInstanceSecurityGroupInboundRuleArrayOutput) ToGetInstanceSecurityGroupInboundRuleArrayOutput() GetInstanceSecurityGroupInboundRuleArrayOutput {
	return o
}

func (o GetInstanceSecurityGroupInboundRuleArrayOutput) ToGetInstanceSecurityGroupInboundRuleArrayOutputWithContext(ctx context.Context) GetInstanceSecurityGroupInboundRuleArrayOutput {
	return o
}

func (o GetInstanceSecurityGroupInboundRuleArrayOutput) Index(i pulumi.IntInput) GetInstanceSecurityGroupInboundRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstanceSecurityGroupInboundRule {
		return vs[0].([]GetInstanceSecurityGroupInboundRule)[vs[1].(int)]
	}).(GetInstanceSecurityGroupInboundRuleOutput)
}

type GetInstanceSecurityGroupOutboundRule struct {
	// The action to take when rule match. Possible values are: `accept` or `drop`.
	Action    string `pulumi:"action"`
	Ip        string `pulumi:"ip"`
	IpRange   string `pulumi:"ipRange"`
	Port      int    `pulumi:"port"`
	PortRange string `pulumi:"portRange"`
	Protocol  string `pulumi:"protocol"`
}

type GetInstanceSecurityGroupOutboundRuleOutput struct{ *pulumi.OutputState }

func (GetInstanceSecurityGroupOutboundRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceSecurityGroupOutboundRule)(nil)).Elem()
}

func (o GetInstanceSecurityGroupOutboundRuleOutput) ToGetInstanceSecurityGroupOutboundRuleOutput() GetInstanceSecurityGroupOutboundRuleOutput {
	return o
}

func (o GetInstanceSecurityGroupOutboundRuleOutput) ToGetInstanceSecurityGroupOutboundRuleOutputWithContext(ctx context.Context) GetInstanceSecurityGroupOutboundRuleOutput {
	return o
}

// The action to take when rule match. Possible values are: `accept` or `drop`.
func (o GetInstanceSecurityGroupOutboundRuleOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceSecurityGroupOutboundRule) string { return v.Action }).(pulumi.StringOutput)
}

func (o GetInstanceSecurityGroupOutboundRuleOutput) Ip() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceSecurityGroupOutboundRule) string { return v.Ip }).(pulumi.StringOutput)
}

func (o GetInstanceSecurityGroupOutboundRuleOutput) IpRange() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceSecurityGroupOutboundRule) string { return v.IpRange }).(pulumi.StringOutput)
}

func (o GetInstanceSecurityGroupOutboundRuleOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstanceSecurityGroupOutboundRule) int { return v.Port }).(pulumi.IntOutput)
}

func (o GetInstanceSecurityGroupOutboundRuleOutput) PortRange() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceSecurityGroupOutboundRule) string { return v.PortRange }).(pulumi.StringOutput)
}

func (o GetInstanceSecurityGroupOutboundRuleOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceSecurityGroupOutboundRule) string { return v.Protocol }).(pulumi.StringOutput)
}

type GetInstanceSecurityGroupOutboundRuleArrayOutput struct{ *pulumi.OutputState }

func (GetInstanceSecurityGroupOutboundRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceSecurityGroupOutboundRule)(nil)).Elem()
}

func (o GetInstanceSecurityGroupOutboundRuleArrayOutput) ToGetInstanceSecurityGroupOutboundRuleArrayOutput() GetInstanceSecurityGroupOutboundRuleArrayOutput {
	return o
}

func (o GetInstanceSecurityGroupOutboundRuleArrayOutput) ToGetInstanceSecurityGroupOutboundRuleArrayOutputWithContext(ctx context.Context) GetInstanceSecurityGroupOutboundRuleArrayOutput {
	return o
}

func (o GetInstanceSecurityGroupOutboundRuleArrayOutput) Index(i pulumi.IntInput) GetInstanceSecurityGroupOutboundRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstanceSecurityGroupOutboundRule {
		return vs[0].([]GetInstanceSecurityGroupOutboundRule)[vs[1].(int)]
	}).(GetInstanceSecurityGroupOutboundRuleOutput)
}

type GetInstanceServerPrivateNetwork struct {
	MacAddress string `pulumi:"macAddress"`
	PnId       string `pulumi:"pnId"`
	Status     string `pulumi:"status"`
	// `zone`) The zone in which the server exists.
	Zone string `pulumi:"zone"`
}

type GetInstanceServerPrivateNetworkOutput struct{ *pulumi.OutputState }

func (GetInstanceServerPrivateNetworkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceServerPrivateNetwork)(nil)).Elem()
}

func (o GetInstanceServerPrivateNetworkOutput) ToGetInstanceServerPrivateNetworkOutput() GetInstanceServerPrivateNetworkOutput {
	return o
}

func (o GetInstanceServerPrivateNetworkOutput) ToGetInstanceServerPrivateNetworkOutputWithContext(ctx context.Context) GetInstanceServerPrivateNetworkOutput {
	return o
}

func (o GetInstanceServerPrivateNetworkOutput) MacAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceServerPrivateNetwork) string { return v.MacAddress }).(pulumi.StringOutput)
}

func (o GetInstanceServerPrivateNetworkOutput) PnId() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceServerPrivateNetwork) string { return v.PnId }).(pulumi.StringOutput)
}

func (o GetInstanceServerPrivateNetworkOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceServerPrivateNetwork) string { return v.Status }).(pulumi.StringOutput)
}

// `zone`) The zone in which the server exists.
func (o GetInstanceServerPrivateNetworkOutput) Zone() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceServerPrivateNetwork) string { return v.Zone }).(pulumi.StringOutput)
}

type GetInstanceServerPrivateNetworkArrayOutput struct{ *pulumi.OutputState }

func (GetInstanceServerPrivateNetworkArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceServerPrivateNetwork)(nil)).Elem()
}

func (o GetInstanceServerPrivateNetworkArrayOutput) ToGetInstanceServerPrivateNetworkArrayOutput() GetInstanceServerPrivateNetworkArrayOutput {
	return o
}

func (o GetInstanceServerPrivateNetworkArrayOutput) ToGetInstanceServerPrivateNetworkArrayOutputWithContext(ctx context.Context) GetInstanceServerPrivateNetworkArrayOutput {
	return o
}

func (o GetInstanceServerPrivateNetworkArrayOutput) Index(i pulumi.IntInput) GetInstanceServerPrivateNetworkOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstanceServerPrivateNetwork {
		return vs[0].([]GetInstanceServerPrivateNetwork)[vs[1].(int)]
	}).(GetInstanceServerPrivateNetworkOutput)
}

type GetInstanceServerRootVolume struct {
	Boot bool `pulumi:"boot"`
	// Forces deletion of the root volume on instance termination.
	DeleteOnTermination bool `pulumi:"deleteOnTermination"`
	// Size of the root volume in gigabytes.
	SizeInGb int `pulumi:"sizeInGb"`
	// The volume ID of the root volume of the server.
	VolumeId string `pulumi:"volumeId"`
}

type GetInstanceServerRootVolumeOutput struct{ *pulumi.OutputState }

func (GetInstanceServerRootVolumeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceServerRootVolume)(nil)).Elem()
}

func (o GetInstanceServerRootVolumeOutput) ToGetInstanceServerRootVolumeOutput() GetInstanceServerRootVolumeOutput {
	return o
}

func (o GetInstanceServerRootVolumeOutput) ToGetInstanceServerRootVolumeOutputWithContext(ctx context.Context) GetInstanceServerRootVolumeOutput {
	return o
}

func (o GetInstanceServerRootVolumeOutput) Boot() pulumi.BoolOutput {
	return o.ApplyT(func(v GetInstanceServerRootVolume) bool { return v.Boot }).(pulumi.BoolOutput)
}

// Forces deletion of the root volume on instance termination.
func (o GetInstanceServerRootVolumeOutput) DeleteOnTermination() pulumi.BoolOutput {
	return o.ApplyT(func(v GetInstanceServerRootVolume) bool { return v.DeleteOnTermination }).(pulumi.BoolOutput)
}

// Size of the root volume in gigabytes.
func (o GetInstanceServerRootVolumeOutput) SizeInGb() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstanceServerRootVolume) int { return v.SizeInGb }).(pulumi.IntOutput)
}

// The volume ID of the root volume of the server.
func (o GetInstanceServerRootVolumeOutput) VolumeId() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceServerRootVolume) string { return v.VolumeId }).(pulumi.StringOutput)
}

type GetInstanceServerRootVolumeArrayOutput struct{ *pulumi.OutputState }

func (GetInstanceServerRootVolumeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceServerRootVolume)(nil)).Elem()
}

func (o GetInstanceServerRootVolumeArrayOutput) ToGetInstanceServerRootVolumeArrayOutput() GetInstanceServerRootVolumeArrayOutput {
	return o
}

func (o GetInstanceServerRootVolumeArrayOutput) ToGetInstanceServerRootVolumeArrayOutputWithContext(ctx context.Context) GetInstanceServerRootVolumeArrayOutput {
	return o
}

func (o GetInstanceServerRootVolumeArrayOutput) Index(i pulumi.IntInput) GetInstanceServerRootVolumeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstanceServerRootVolume {
		return vs[0].([]GetInstanceServerRootVolume)[vs[1].(int)]
	}).(GetInstanceServerRootVolumeOutput)
}

type GetKubernetesClusterAutoUpgrade struct {
	// True if Kubernetes patch version auto upgrades is enabled.
	Enable bool `pulumi:"enable"`
	// The day of the auto upgrade maintenance window (`monday` to `sunday`, or `any`).
	MaintenanceWindowDay string `pulumi:"maintenanceWindowDay"`
	// The start hour (UTC) of the 2-hour auto upgrade maintenance window (0 to 23).
	MaintenanceWindowStartHour int `pulumi:"maintenanceWindowStartHour"`
}

type GetKubernetesClusterAutoUpgradeOutput struct{ *pulumi.OutputState }

func (GetKubernetesClusterAutoUpgradeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKubernetesClusterAutoUpgrade)(nil)).Elem()
}

func (o GetKubernetesClusterAutoUpgradeOutput) ToGetKubernetesClusterAutoUpgradeOutput() GetKubernetesClusterAutoUpgradeOutput {
	return o
}

func (o GetKubernetesClusterAutoUpgradeOutput) ToGetKubernetesClusterAutoUpgradeOutputWithContext(ctx context.Context) GetKubernetesClusterAutoUpgradeOutput {
	return o
}

// True if Kubernetes patch version auto upgrades is enabled.
func (o GetKubernetesClusterAutoUpgradeOutput) Enable() pulumi.BoolOutput {
	return o.ApplyT(func(v GetKubernetesClusterAutoUpgrade) bool { return v.Enable }).(pulumi.BoolOutput)
}

// The day of the auto upgrade maintenance window (`monday` to `sunday`, or `any`).
func (o GetKubernetesClusterAutoUpgradeOutput) MaintenanceWindowDay() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesClusterAutoUpgrade) string { return v.MaintenanceWindowDay }).(pulumi.StringOutput)
}

// The start hour (UTC) of the 2-hour auto upgrade maintenance window (0 to 23).
func (o GetKubernetesClusterAutoUpgradeOutput) MaintenanceWindowStartHour() pulumi.IntOutput {
	return o.ApplyT(func(v GetKubernetesClusterAutoUpgrade) int { return v.MaintenanceWindowStartHour }).(pulumi.IntOutput)
}

type GetKubernetesClusterAutoUpgradeArrayOutput struct{ *pulumi.OutputState }

func (GetKubernetesClusterAutoUpgradeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKubernetesClusterAutoUpgrade)(nil)).Elem()
}

func (o GetKubernetesClusterAutoUpgradeArrayOutput) ToGetKubernetesClusterAutoUpgradeArrayOutput() GetKubernetesClusterAutoUpgradeArrayOutput {
	return o
}

func (o GetKubernetesClusterAutoUpgradeArrayOutput) ToGetKubernetesClusterAutoUpgradeArrayOutputWithContext(ctx context.Context) GetKubernetesClusterAutoUpgradeArrayOutput {
	return o
}

func (o GetKubernetesClusterAutoUpgradeArrayOutput) Index(i pulumi.IntInput) GetKubernetesClusterAutoUpgradeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetKubernetesClusterAutoUpgrade {
		return vs[0].([]GetKubernetesClusterAutoUpgrade)[vs[1].(int)]
	}).(GetKubernetesClusterAutoUpgradeOutput)
}

type GetKubernetesClusterAutoscalerConfig struct {
	// True if detecting similar node groups and balance the number of nodes between them is enabled.
	BalanceSimilarNodeGroups bool `pulumi:"balanceSimilarNodeGroups"`
	// True if the scale down feature of the autoscaler is disabled.
	DisableScaleDown bool `pulumi:"disableScaleDown"`
	// The type of resource estimator used in scale up.
	Estimator string `pulumi:"estimator"`
	// The type of node group expander be used in scale up.
	Expander string `pulumi:"expander"`
	// Pods with priority below cutoff will be expendable. They can be killed without any consideration during scale down and they don't cause scale up. Pods with null priority (PodPriority disabled) are non expendable.
	ExpendablePodsPriorityCutoff int `pulumi:"expendablePodsPriorityCutoff"`
	// True if ignoring DaemonSet pods when calculating resource utilization for scaling down is enabled.
	IgnoreDaemonsetsUtilization bool `pulumi:"ignoreDaemonsetsUtilization"`
	MaxGracefulTerminationSec   int  `pulumi:"maxGracefulTerminationSec"`
	// The duration after scale up that scale down evaluation resumes.
	ScaleDownDelayAfterAdd string `pulumi:"scaleDownDelayAfterAdd"`
	// The duration a node should be unneeded before it is eligible for scale down.
	ScaleDownUnneededTime         string  `pulumi:"scaleDownUnneededTime"`
	ScaleDownUtilizationThreshold float64 `pulumi:"scaleDownUtilizationThreshold"`
}

type GetKubernetesClusterAutoscalerConfigOutput struct{ *pulumi.OutputState }

func (GetKubernetesClusterAutoscalerConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKubernetesClusterAutoscalerConfig)(nil)).Elem()
}

func (o GetKubernetesClusterAutoscalerConfigOutput) ToGetKubernetesClusterAutoscalerConfigOutput() GetKubernetesClusterAutoscalerConfigOutput {
	return o
}

func (o GetKubernetesClusterAutoscalerConfigOutput) ToGetKubernetesClusterAutoscalerConfigOutputWithContext(ctx context.Context) GetKubernetesClusterAutoscalerConfigOutput {
	return o
}

// True if detecting similar node groups and balance the number of nodes between them is enabled.
func (o GetKubernetesClusterAutoscalerConfigOutput) BalanceSimilarNodeGroups() pulumi.BoolOutput {
	return o.ApplyT(func(v GetKubernetesClusterAutoscalerConfig) bool { return v.BalanceSimilarNodeGroups }).(pulumi.BoolOutput)
}

// True if the scale down feature of the autoscaler is disabled.
func (o GetKubernetesClusterAutoscalerConfigOutput) DisableScaleDown() pulumi.BoolOutput {
	return o.ApplyT(func(v GetKubernetesClusterAutoscalerConfig) bool { return v.DisableScaleDown }).(pulumi.BoolOutput)
}

// The type of resource estimator used in scale up.
func (o GetKubernetesClusterAutoscalerConfigOutput) Estimator() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesClusterAutoscalerConfig) string { return v.Estimator }).(pulumi.StringOutput)
}

// The type of node group expander be used in scale up.
func (o GetKubernetesClusterAutoscalerConfigOutput) Expander() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesClusterAutoscalerConfig) string { return v.Expander }).(pulumi.StringOutput)
}

// Pods with priority below cutoff will be expendable. They can be killed without any consideration during scale down and they don't cause scale up. Pods with null priority (PodPriority disabled) are non expendable.
func (o GetKubernetesClusterAutoscalerConfigOutput) ExpendablePodsPriorityCutoff() pulumi.IntOutput {
	return o.ApplyT(func(v GetKubernetesClusterAutoscalerConfig) int { return v.ExpendablePodsPriorityCutoff }).(pulumi.IntOutput)
}

// True if ignoring DaemonSet pods when calculating resource utilization for scaling down is enabled.
func (o GetKubernetesClusterAutoscalerConfigOutput) IgnoreDaemonsetsUtilization() pulumi.BoolOutput {
	return o.ApplyT(func(v GetKubernetesClusterAutoscalerConfig) bool { return v.IgnoreDaemonsetsUtilization }).(pulumi.BoolOutput)
}

func (o GetKubernetesClusterAutoscalerConfigOutput) MaxGracefulTerminationSec() pulumi.IntOutput {
	return o.ApplyT(func(v GetKubernetesClusterAutoscalerConfig) int { return v.MaxGracefulTerminationSec }).(pulumi.IntOutput)
}

// The duration after scale up that scale down evaluation resumes.
func (o GetKubernetesClusterAutoscalerConfigOutput) ScaleDownDelayAfterAdd() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesClusterAutoscalerConfig) string { return v.ScaleDownDelayAfterAdd }).(pulumi.StringOutput)
}

// The duration a node should be unneeded before it is eligible for scale down.
func (o GetKubernetesClusterAutoscalerConfigOutput) ScaleDownUnneededTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesClusterAutoscalerConfig) string { return v.ScaleDownUnneededTime }).(pulumi.StringOutput)
}

func (o GetKubernetesClusterAutoscalerConfigOutput) ScaleDownUtilizationThreshold() pulumi.Float64Output {
	return o.ApplyT(func(v GetKubernetesClusterAutoscalerConfig) float64 { return v.ScaleDownUtilizationThreshold }).(pulumi.Float64Output)
}

type GetKubernetesClusterAutoscalerConfigArrayOutput struct{ *pulumi.OutputState }

func (GetKubernetesClusterAutoscalerConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKubernetesClusterAutoscalerConfig)(nil)).Elem()
}

func (o GetKubernetesClusterAutoscalerConfigArrayOutput) ToGetKubernetesClusterAutoscalerConfigArrayOutput() GetKubernetesClusterAutoscalerConfigArrayOutput {
	return o
}

func (o GetKubernetesClusterAutoscalerConfigArrayOutput) ToGetKubernetesClusterAutoscalerConfigArrayOutputWithContext(ctx context.Context) GetKubernetesClusterAutoscalerConfigArrayOutput {
	return o
}

func (o GetKubernetesClusterAutoscalerConfigArrayOutput) Index(i pulumi.IntInput) GetKubernetesClusterAutoscalerConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetKubernetesClusterAutoscalerConfig {
		return vs[0].([]GetKubernetesClusterAutoscalerConfig)[vs[1].(int)]
	}).(GetKubernetesClusterAutoscalerConfigOutput)
}

type GetKubernetesClusterKubeconfig struct {
	// The CA certificate of the Kubernetes API server.
	ClusterCaCertificate string `pulumi:"clusterCaCertificate"`
	// The raw kubeconfig file.
	ConfigFile string `pulumi:"configFile"`
	// The URL of the Kubernetes API server.
	Host string `pulumi:"host"`
	// The token to connect to the Kubernetes API server.
	Token string `pulumi:"token"`
}

type GetKubernetesClusterKubeconfigOutput struct{ *pulumi.OutputState }

func (GetKubernetesClusterKubeconfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKubernetesClusterKubeconfig)(nil)).Elem()
}

func (o GetKubernetesClusterKubeconfigOutput) ToGetKubernetesClusterKubeconfigOutput() GetKubernetesClusterKubeconfigOutput {
	return o
}

func (o GetKubernetesClusterKubeconfigOutput) ToGetKubernetesClusterKubeconfigOutputWithContext(ctx context.Context) GetKubernetesClusterKubeconfigOutput {
	return o
}

// The CA certificate of the Kubernetes API server.
func (o GetKubernetesClusterKubeconfigOutput) ClusterCaCertificate() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesClusterKubeconfig) string { return v.ClusterCaCertificate }).(pulumi.StringOutput)
}

// The raw kubeconfig file.
func (o GetKubernetesClusterKubeconfigOutput) ConfigFile() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesClusterKubeconfig) string { return v.ConfigFile }).(pulumi.StringOutput)
}

// The URL of the Kubernetes API server.
func (o GetKubernetesClusterKubeconfigOutput) Host() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesClusterKubeconfig) string { return v.Host }).(pulumi.StringOutput)
}

// The token to connect to the Kubernetes API server.
func (o GetKubernetesClusterKubeconfigOutput) Token() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesClusterKubeconfig) string { return v.Token }).(pulumi.StringOutput)
}

type GetKubernetesClusterKubeconfigArrayOutput struct{ *pulumi.OutputState }

func (GetKubernetesClusterKubeconfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKubernetesClusterKubeconfig)(nil)).Elem()
}

func (o GetKubernetesClusterKubeconfigArrayOutput) ToGetKubernetesClusterKubeconfigArrayOutput() GetKubernetesClusterKubeconfigArrayOutput {
	return o
}

func (o GetKubernetesClusterKubeconfigArrayOutput) ToGetKubernetesClusterKubeconfigArrayOutputWithContext(ctx context.Context) GetKubernetesClusterKubeconfigArrayOutput {
	return o
}

func (o GetKubernetesClusterKubeconfigArrayOutput) Index(i pulumi.IntInput) GetKubernetesClusterKubeconfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetKubernetesClusterKubeconfig {
		return vs[0].([]GetKubernetesClusterKubeconfig)[vs[1].(int)]
	}).(GetKubernetesClusterKubeconfigOutput)
}

type GetKubernetesClusterOpenIdConnectConfig struct {
	ClientId       string   `pulumi:"clientId"`
	GroupsClaims   []string `pulumi:"groupsClaims"`
	GroupsPrefix   string   `pulumi:"groupsPrefix"`
	IssuerUrl      string   `pulumi:"issuerUrl"`
	RequiredClaims []string `pulumi:"requiredClaims"`
	UsernameClaim  string   `pulumi:"usernameClaim"`
	UsernamePrefix string   `pulumi:"usernamePrefix"`
}

type GetKubernetesClusterOpenIdConnectConfigOutput struct{ *pulumi.OutputState }

func (GetKubernetesClusterOpenIdConnectConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKubernetesClusterOpenIdConnectConfig)(nil)).Elem()
}

func (o GetKubernetesClusterOpenIdConnectConfigOutput) ToGetKubernetesClusterOpenIdConnectConfigOutput() GetKubernetesClusterOpenIdConnectConfigOutput {
	return o
}

func (o GetKubernetesClusterOpenIdConnectConfigOutput) ToGetKubernetesClusterOpenIdConnectConfigOutputWithContext(ctx context.Context) GetKubernetesClusterOpenIdConnectConfigOutput {
	return o
}

func (o GetKubernetesClusterOpenIdConnectConfigOutput) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesClusterOpenIdConnectConfig) string { return v.ClientId }).(pulumi.StringOutput)
}

func (o GetKubernetesClusterOpenIdConnectConfigOutput) GroupsClaims() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetKubernetesClusterOpenIdConnectConfig) []string { return v.GroupsClaims }).(pulumi.StringArrayOutput)
}

func (o GetKubernetesClusterOpenIdConnectConfigOutput) GroupsPrefix() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesClusterOpenIdConnectConfig) string { return v.GroupsPrefix }).(pulumi.StringOutput)
}

func (o GetKubernetesClusterOpenIdConnectConfigOutput) IssuerUrl() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesClusterOpenIdConnectConfig) string { return v.IssuerUrl }).(pulumi.StringOutput)
}

func (o GetKubernetesClusterOpenIdConnectConfigOutput) RequiredClaims() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetKubernetesClusterOpenIdConnectConfig) []string { return v.RequiredClaims }).(pulumi.StringArrayOutput)
}

func (o GetKubernetesClusterOpenIdConnectConfigOutput) UsernameClaim() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesClusterOpenIdConnectConfig) string { return v.UsernameClaim }).(pulumi.StringOutput)
}

func (o GetKubernetesClusterOpenIdConnectConfigOutput) UsernamePrefix() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesClusterOpenIdConnectConfig) string { return v.UsernamePrefix }).(pulumi.StringOutput)
}

type GetKubernetesClusterOpenIdConnectConfigArrayOutput struct{ *pulumi.OutputState }

func (GetKubernetesClusterOpenIdConnectConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKubernetesClusterOpenIdConnectConfig)(nil)).Elem()
}

func (o GetKubernetesClusterOpenIdConnectConfigArrayOutput) ToGetKubernetesClusterOpenIdConnectConfigArrayOutput() GetKubernetesClusterOpenIdConnectConfigArrayOutput {
	return o
}

func (o GetKubernetesClusterOpenIdConnectConfigArrayOutput) ToGetKubernetesClusterOpenIdConnectConfigArrayOutputWithContext(ctx context.Context) GetKubernetesClusterOpenIdConnectConfigArrayOutput {
	return o
}

func (o GetKubernetesClusterOpenIdConnectConfigArrayOutput) Index(i pulumi.IntInput) GetKubernetesClusterOpenIdConnectConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetKubernetesClusterOpenIdConnectConfig {
		return vs[0].([]GetKubernetesClusterOpenIdConnectConfig)[vs[1].(int)]
	}).(GetKubernetesClusterOpenIdConnectConfigOutput)
}

type GetKubernetesNodePoolNode struct {
	// The pool name. Only one of `name` and `poolId` should be specified. `clusterId` should be specified with `name`.
	Name string `pulumi:"name"`
	// The public IPv4.
	PublicIp string `pulumi:"publicIp"`
	// The public IPv6.
	PublicIpV6 string `pulumi:"publicIpV6"`
	// The status of the node.
	Status string `pulumi:"status"`
}

type GetKubernetesNodePoolNodeOutput struct{ *pulumi.OutputState }

func (GetKubernetesNodePoolNodeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKubernetesNodePoolNode)(nil)).Elem()
}

func (o GetKubernetesNodePoolNodeOutput) ToGetKubernetesNodePoolNodeOutput() GetKubernetesNodePoolNodeOutput {
	return o
}

func (o GetKubernetesNodePoolNodeOutput) ToGetKubernetesNodePoolNodeOutputWithContext(ctx context.Context) GetKubernetesNodePoolNodeOutput {
	return o
}

// The pool name. Only one of `name` and `poolId` should be specified. `clusterId` should be specified with `name`.
func (o GetKubernetesNodePoolNodeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesNodePoolNode) string { return v.Name }).(pulumi.StringOutput)
}

// The public IPv4.
func (o GetKubernetesNodePoolNodeOutput) PublicIp() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesNodePoolNode) string { return v.PublicIp }).(pulumi.StringOutput)
}

// The public IPv6.
func (o GetKubernetesNodePoolNodeOutput) PublicIpV6() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesNodePoolNode) string { return v.PublicIpV6 }).(pulumi.StringOutput)
}

// The status of the node.
func (o GetKubernetesNodePoolNodeOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesNodePoolNode) string { return v.Status }).(pulumi.StringOutput)
}

type GetKubernetesNodePoolNodeArrayOutput struct{ *pulumi.OutputState }

func (GetKubernetesNodePoolNodeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKubernetesNodePoolNode)(nil)).Elem()
}

func (o GetKubernetesNodePoolNodeArrayOutput) ToGetKubernetesNodePoolNodeArrayOutput() GetKubernetesNodePoolNodeArrayOutput {
	return o
}

func (o GetKubernetesNodePoolNodeArrayOutput) ToGetKubernetesNodePoolNodeArrayOutputWithContext(ctx context.Context) GetKubernetesNodePoolNodeArrayOutput {
	return o
}

func (o GetKubernetesNodePoolNodeArrayOutput) Index(i pulumi.IntInput) GetKubernetesNodePoolNodeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetKubernetesNodePoolNode {
		return vs[0].([]GetKubernetesNodePoolNode)[vs[1].(int)]
	}).(GetKubernetesNodePoolNodeOutput)
}

type GetKubernetesNodePoolUpgradePolicy struct {
	MaxSurge       int `pulumi:"maxSurge"`
	MaxUnavailable int `pulumi:"maxUnavailable"`
}

type GetKubernetesNodePoolUpgradePolicyOutput struct{ *pulumi.OutputState }

func (GetKubernetesNodePoolUpgradePolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKubernetesNodePoolUpgradePolicy)(nil)).Elem()
}

func (o GetKubernetesNodePoolUpgradePolicyOutput) ToGetKubernetesNodePoolUpgradePolicyOutput() GetKubernetesNodePoolUpgradePolicyOutput {
	return o
}

func (o GetKubernetesNodePoolUpgradePolicyOutput) ToGetKubernetesNodePoolUpgradePolicyOutputWithContext(ctx context.Context) GetKubernetesNodePoolUpgradePolicyOutput {
	return o
}

func (o GetKubernetesNodePoolUpgradePolicyOutput) MaxSurge() pulumi.IntOutput {
	return o.ApplyT(func(v GetKubernetesNodePoolUpgradePolicy) int { return v.MaxSurge }).(pulumi.IntOutput)
}

func (o GetKubernetesNodePoolUpgradePolicyOutput) MaxUnavailable() pulumi.IntOutput {
	return o.ApplyT(func(v GetKubernetesNodePoolUpgradePolicy) int { return v.MaxUnavailable }).(pulumi.IntOutput)
}

type GetKubernetesNodePoolUpgradePolicyArrayOutput struct{ *pulumi.OutputState }

func (GetKubernetesNodePoolUpgradePolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKubernetesNodePoolUpgradePolicy)(nil)).Elem()
}

func (o GetKubernetesNodePoolUpgradePolicyArrayOutput) ToGetKubernetesNodePoolUpgradePolicyArrayOutput() GetKubernetesNodePoolUpgradePolicyArrayOutput {
	return o
}

func (o GetKubernetesNodePoolUpgradePolicyArrayOutput) ToGetKubernetesNodePoolUpgradePolicyArrayOutputWithContext(ctx context.Context) GetKubernetesNodePoolUpgradePolicyArrayOutput {
	return o
}

func (o GetKubernetesNodePoolUpgradePolicyArrayOutput) Index(i pulumi.IntInput) GetKubernetesNodePoolUpgradePolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetKubernetesNodePoolUpgradePolicy {
		return vs[0].([]GetKubernetesNodePoolUpgradePolicy)[vs[1].(int)]
	}).(GetKubernetesNodePoolUpgradePolicyOutput)
}

type GetLoadbalancerPrivateNetwork struct {
	DhcpConfig       bool     `pulumi:"dhcpConfig"`
	PrivateNetworkId string   `pulumi:"privateNetworkId"`
	StaticConfigs    []string `pulumi:"staticConfigs"`
	Status           string   `pulumi:"status"`
	// `region`) The region in which the LB exists.
	Zone string `pulumi:"zone"`
}

type GetLoadbalancerPrivateNetworkOutput struct{ *pulumi.OutputState }

func (GetLoadbalancerPrivateNetworkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLoadbalancerPrivateNetwork)(nil)).Elem()
}

func (o GetLoadbalancerPrivateNetworkOutput) ToGetLoadbalancerPrivateNetworkOutput() GetLoadbalancerPrivateNetworkOutput {
	return o
}

func (o GetLoadbalancerPrivateNetworkOutput) ToGetLoadbalancerPrivateNetworkOutputWithContext(ctx context.Context) GetLoadbalancerPrivateNetworkOutput {
	return o
}

func (o GetLoadbalancerPrivateNetworkOutput) DhcpConfig() pulumi.BoolOutput {
	return o.ApplyT(func(v GetLoadbalancerPrivateNetwork) bool { return v.DhcpConfig }).(pulumi.BoolOutput)
}

func (o GetLoadbalancerPrivateNetworkOutput) PrivateNetworkId() pulumi.StringOutput {
	return o.ApplyT(func(v GetLoadbalancerPrivateNetwork) string { return v.PrivateNetworkId }).(pulumi.StringOutput)
}

func (o GetLoadbalancerPrivateNetworkOutput) StaticConfigs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetLoadbalancerPrivateNetwork) []string { return v.StaticConfigs }).(pulumi.StringArrayOutput)
}

func (o GetLoadbalancerPrivateNetworkOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetLoadbalancerPrivateNetwork) string { return v.Status }).(pulumi.StringOutput)
}

// `region`) The region in which the LB exists.
func (o GetLoadbalancerPrivateNetworkOutput) Zone() pulumi.StringOutput {
	return o.ApplyT(func(v GetLoadbalancerPrivateNetwork) string { return v.Zone }).(pulumi.StringOutput)
}

type GetLoadbalancerPrivateNetworkArrayOutput struct{ *pulumi.OutputState }

func (GetLoadbalancerPrivateNetworkArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLoadbalancerPrivateNetwork)(nil)).Elem()
}

func (o GetLoadbalancerPrivateNetworkArrayOutput) ToGetLoadbalancerPrivateNetworkArrayOutput() GetLoadbalancerPrivateNetworkArrayOutput {
	return o
}

func (o GetLoadbalancerPrivateNetworkArrayOutput) ToGetLoadbalancerPrivateNetworkArrayOutputWithContext(ctx context.Context) GetLoadbalancerPrivateNetworkArrayOutput {
	return o
}

func (o GetLoadbalancerPrivateNetworkArrayOutput) Index(i pulumi.IntInput) GetLoadbalancerPrivateNetworkOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetLoadbalancerPrivateNetwork {
		return vs[0].([]GetLoadbalancerPrivateNetwork)[vs[1].(int)]
	}).(GetLoadbalancerPrivateNetworkOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DatabaseAclAclRuleInput)(nil)).Elem(), DatabaseAclAclRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatabaseAclAclRuleArrayInput)(nil)).Elem(), DatabaseAclAclRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatabaseInstancePrivateNetworkInput)(nil)).Elem(), DatabaseInstancePrivateNetworkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatabaseInstancePrivateNetworkPtrInput)(nil)).Elem(), DatabaseInstancePrivateNetworkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainRecordGeoIpInput)(nil)).Elem(), DomainRecordGeoIpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainRecordGeoIpPtrInput)(nil)).Elem(), DomainRecordGeoIpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainRecordGeoIpMatchInput)(nil)).Elem(), DomainRecordGeoIpMatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainRecordGeoIpMatchArrayInput)(nil)).Elem(), DomainRecordGeoIpMatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainRecordHttpServiceInput)(nil)).Elem(), DomainRecordHttpServiceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainRecordHttpServicePtrInput)(nil)).Elem(), DomainRecordHttpServiceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainRecordViewInput)(nil)).Elem(), DomainRecordViewArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainRecordViewArrayInput)(nil)).Elem(), DomainRecordViewArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainRecordWeightedInput)(nil)).Elem(), DomainRecordWeightedArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainRecordWeightedArrayInput)(nil)).Elem(), DomainRecordWeightedArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceSecurityGroupInboundRuleInput)(nil)).Elem(), InstanceSecurityGroupInboundRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceSecurityGroupInboundRuleArrayInput)(nil)).Elem(), InstanceSecurityGroupInboundRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceSecurityGroupOutboundRuleInput)(nil)).Elem(), InstanceSecurityGroupOutboundRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceSecurityGroupOutboundRuleArrayInput)(nil)).Elem(), InstanceSecurityGroupOutboundRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceSecurityGroupRulesInboundRuleInput)(nil)).Elem(), InstanceSecurityGroupRulesInboundRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceSecurityGroupRulesInboundRuleArrayInput)(nil)).Elem(), InstanceSecurityGroupRulesInboundRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceSecurityGroupRulesOutboundRuleInput)(nil)).Elem(), InstanceSecurityGroupRulesOutboundRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceSecurityGroupRulesOutboundRuleArrayInput)(nil)).Elem(), InstanceSecurityGroupRulesOutboundRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceServerPrivateNetworkInput)(nil)).Elem(), InstanceServerPrivateNetworkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceServerPrivateNetworkArrayInput)(nil)).Elem(), InstanceServerPrivateNetworkArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceServerRootVolumeInput)(nil)).Elem(), InstanceServerRootVolumeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceServerRootVolumePtrInput)(nil)).Elem(), InstanceServerRootVolumeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IotDeviceCertificateInput)(nil)).Elem(), IotDeviceCertificateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IotDeviceCertificatePtrInput)(nil)).Elem(), IotDeviceCertificateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IotDeviceMessageFiltersInput)(nil)).Elem(), IotDeviceMessageFiltersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IotDeviceMessageFiltersPtrInput)(nil)).Elem(), IotDeviceMessageFiltersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IotDeviceMessageFiltersPublishInput)(nil)).Elem(), IotDeviceMessageFiltersPublishArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IotDeviceMessageFiltersPublishPtrInput)(nil)).Elem(), IotDeviceMessageFiltersPublishArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IotDeviceMessageFiltersSubscribeInput)(nil)).Elem(), IotDeviceMessageFiltersSubscribeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IotDeviceMessageFiltersSubscribePtrInput)(nil)).Elem(), IotDeviceMessageFiltersSubscribeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IotRouteDatabaseInput)(nil)).Elem(), IotRouteDatabaseArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IotRouteDatabasePtrInput)(nil)).Elem(), IotRouteDatabaseArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IotRouteRestInput)(nil)).Elem(), IotRouteRestArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IotRouteRestPtrInput)(nil)).Elem(), IotRouteRestArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IotRouteS3Input)(nil)).Elem(), IotRouteS3Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*IotRouteS3PtrInput)(nil)).Elem(), IotRouteS3Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*KubernetesClusterAutoUpgradeInput)(nil)).Elem(), KubernetesClusterAutoUpgradeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KubernetesClusterAutoUpgradePtrInput)(nil)).Elem(), KubernetesClusterAutoUpgradeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KubernetesClusterAutoscalerConfigInput)(nil)).Elem(), KubernetesClusterAutoscalerConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KubernetesClusterAutoscalerConfigPtrInput)(nil)).Elem(), KubernetesClusterAutoscalerConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KubernetesClusterOpenIdConnectConfigInput)(nil)).Elem(), KubernetesClusterOpenIdConnectConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KubernetesClusterOpenIdConnectConfigPtrInput)(nil)).Elem(), KubernetesClusterOpenIdConnectConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KubernetesNodePoolUpgradePolicyInput)(nil)).Elem(), KubernetesNodePoolUpgradePolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KubernetesNodePoolUpgradePolicyPtrInput)(nil)).Elem(), KubernetesNodePoolUpgradePolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LoadbalancerBackendHealthCheckHttpInput)(nil)).Elem(), LoadbalancerBackendHealthCheckHttpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LoadbalancerBackendHealthCheckHttpPtrInput)(nil)).Elem(), LoadbalancerBackendHealthCheckHttpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LoadbalancerBackendHealthCheckHttpsInput)(nil)).Elem(), LoadbalancerBackendHealthCheckHttpsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LoadbalancerBackendHealthCheckHttpsPtrInput)(nil)).Elem(), LoadbalancerBackendHealthCheckHttpsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LoadbalancerBackendHealthCheckTcpInput)(nil)).Elem(), LoadbalancerBackendHealthCheckTcpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LoadbalancerBackendHealthCheckTcpPtrInput)(nil)).Elem(), LoadbalancerBackendHealthCheckTcpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LoadbalancerCertificateCustomCertificateInput)(nil)).Elem(), LoadbalancerCertificateCustomCertificateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LoadbalancerCertificateCustomCertificatePtrInput)(nil)).Elem(), LoadbalancerCertificateCustomCertificateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LoadbalancerCertificateLetsencryptInput)(nil)).Elem(), LoadbalancerCertificateLetsencryptArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LoadbalancerCertificateLetsencryptPtrInput)(nil)).Elem(), LoadbalancerCertificateLetsencryptArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LoadbalancerFrontendAclInput)(nil)).Elem(), LoadbalancerFrontendAclArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LoadbalancerFrontendAclArrayInput)(nil)).Elem(), LoadbalancerFrontendAclArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*LoadbalancerFrontendAclActionInput)(nil)).Elem(), LoadbalancerFrontendAclActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LoadbalancerFrontendAclMatchInput)(nil)).Elem(), LoadbalancerFrontendAclMatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LoadbalancerPrivateNetworkInput)(nil)).Elem(), LoadbalancerPrivateNetworkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LoadbalancerPrivateNetworkArrayInput)(nil)).Elem(), LoadbalancerPrivateNetworkArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ObjectBucketCorsRuleInput)(nil)).Elem(), ObjectBucketCorsRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ObjectBucketCorsRuleArrayInput)(nil)).Elem(), ObjectBucketCorsRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ObjectBucketVersioningInput)(nil)).Elem(), ObjectBucketVersioningArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ObjectBucketVersioningPtrInput)(nil)).Elem(), ObjectBucketVersioningArgs{})
	pulumi.RegisterOutputType(BaremetalServerIpOutput{})
	pulumi.RegisterOutputType(BaremetalServerIpArrayOutput{})
	pulumi.RegisterOutputType(DatabaseAclAclRuleOutput{})
	pulumi.RegisterOutputType(DatabaseAclAclRuleArrayOutput{})
	pulumi.RegisterOutputType(DatabaseInstanceLoadBalancerOutput{})
	pulumi.RegisterOutputType(DatabaseInstanceLoadBalancerArrayOutput{})
	pulumi.RegisterOutputType(DatabaseInstancePrivateNetworkOutput{})
	pulumi.RegisterOutputType(DatabaseInstancePrivateNetworkPtrOutput{})
	pulumi.RegisterOutputType(DatabaseInstanceReadReplicaOutput{})
	pulumi.RegisterOutputType(DatabaseInstanceReadReplicaArrayOutput{})
	pulumi.RegisterOutputType(DomainRecordGeoIpOutput{})
	pulumi.RegisterOutputType(DomainRecordGeoIpPtrOutput{})
	pulumi.RegisterOutputType(DomainRecordGeoIpMatchOutput{})
	pulumi.RegisterOutputType(DomainRecordGeoIpMatchArrayOutput{})
	pulumi.RegisterOutputType(DomainRecordHttpServiceOutput{})
	pulumi.RegisterOutputType(DomainRecordHttpServicePtrOutput{})
	pulumi.RegisterOutputType(DomainRecordViewOutput{})
	pulumi.RegisterOutputType(DomainRecordViewArrayOutput{})
	pulumi.RegisterOutputType(DomainRecordWeightedOutput{})
	pulumi.RegisterOutputType(DomainRecordWeightedArrayOutput{})
	pulumi.RegisterOutputType(InstanceSecurityGroupInboundRuleOutput{})
	pulumi.RegisterOutputType(InstanceSecurityGroupInboundRuleArrayOutput{})
	pulumi.RegisterOutputType(InstanceSecurityGroupOutboundRuleOutput{})
	pulumi.RegisterOutputType(InstanceSecurityGroupOutboundRuleArrayOutput{})
	pulumi.RegisterOutputType(InstanceSecurityGroupRulesInboundRuleOutput{})
	pulumi.RegisterOutputType(InstanceSecurityGroupRulesInboundRuleArrayOutput{})
	pulumi.RegisterOutputType(InstanceSecurityGroupRulesOutboundRuleOutput{})
	pulumi.RegisterOutputType(InstanceSecurityGroupRulesOutboundRuleArrayOutput{})
	pulumi.RegisterOutputType(InstanceServerPrivateNetworkOutput{})
	pulumi.RegisterOutputType(InstanceServerPrivateNetworkArrayOutput{})
	pulumi.RegisterOutputType(InstanceServerRootVolumeOutput{})
	pulumi.RegisterOutputType(InstanceServerRootVolumePtrOutput{})
	pulumi.RegisterOutputType(IotDeviceCertificateOutput{})
	pulumi.RegisterOutputType(IotDeviceCertificatePtrOutput{})
	pulumi.RegisterOutputType(IotDeviceMessageFiltersOutput{})
	pulumi.RegisterOutputType(IotDeviceMessageFiltersPtrOutput{})
	pulumi.RegisterOutputType(IotDeviceMessageFiltersPublishOutput{})
	pulumi.RegisterOutputType(IotDeviceMessageFiltersPublishPtrOutput{})
	pulumi.RegisterOutputType(IotDeviceMessageFiltersSubscribeOutput{})
	pulumi.RegisterOutputType(IotDeviceMessageFiltersSubscribePtrOutput{})
	pulumi.RegisterOutputType(IotRouteDatabaseOutput{})
	pulumi.RegisterOutputType(IotRouteDatabasePtrOutput{})
	pulumi.RegisterOutputType(IotRouteRestOutput{})
	pulumi.RegisterOutputType(IotRouteRestPtrOutput{})
	pulumi.RegisterOutputType(IotRouteS3Output{})
	pulumi.RegisterOutputType(IotRouteS3PtrOutput{})
	pulumi.RegisterOutputType(KubernetesClusterAutoUpgradeOutput{})
	pulumi.RegisterOutputType(KubernetesClusterAutoUpgradePtrOutput{})
	pulumi.RegisterOutputType(KubernetesClusterAutoscalerConfigOutput{})
	pulumi.RegisterOutputType(KubernetesClusterAutoscalerConfigPtrOutput{})
	pulumi.RegisterOutputType(KubernetesClusterKubeconfigOutput{})
	pulumi.RegisterOutputType(KubernetesClusterKubeconfigArrayOutput{})
	pulumi.RegisterOutputType(KubernetesClusterOpenIdConnectConfigOutput{})
	pulumi.RegisterOutputType(KubernetesClusterOpenIdConnectConfigPtrOutput{})
	pulumi.RegisterOutputType(KubernetesNodePoolNodeOutput{})
	pulumi.RegisterOutputType(KubernetesNodePoolNodeArrayOutput{})
	pulumi.RegisterOutputType(KubernetesNodePoolUpgradePolicyOutput{})
	pulumi.RegisterOutputType(KubernetesNodePoolUpgradePolicyPtrOutput{})
	pulumi.RegisterOutputType(LoadbalancerBackendHealthCheckHttpOutput{})
	pulumi.RegisterOutputType(LoadbalancerBackendHealthCheckHttpPtrOutput{})
	pulumi.RegisterOutputType(LoadbalancerBackendHealthCheckHttpsOutput{})
	pulumi.RegisterOutputType(LoadbalancerBackendHealthCheckHttpsPtrOutput{})
	pulumi.RegisterOutputType(LoadbalancerBackendHealthCheckTcpOutput{})
	pulumi.RegisterOutputType(LoadbalancerBackendHealthCheckTcpPtrOutput{})
	pulumi.RegisterOutputType(LoadbalancerCertificateCustomCertificateOutput{})
	pulumi.RegisterOutputType(LoadbalancerCertificateCustomCertificatePtrOutput{})
	pulumi.RegisterOutputType(LoadbalancerCertificateLetsencryptOutput{})
	pulumi.RegisterOutputType(LoadbalancerCertificateLetsencryptPtrOutput{})
	pulumi.RegisterOutputType(LoadbalancerFrontendAclOutput{})
	pulumi.RegisterOutputType(LoadbalancerFrontendAclArrayOutput{})
	pulumi.RegisterOutputType(LoadbalancerFrontendAclActionOutput{})
	pulumi.RegisterOutputType(LoadbalancerFrontendAclMatchOutput{})
	pulumi.RegisterOutputType(LoadbalancerPrivateNetworkOutput{})
	pulumi.RegisterOutputType(LoadbalancerPrivateNetworkArrayOutput{})
	pulumi.RegisterOutputType(ObjectBucketCorsRuleOutput{})
	pulumi.RegisterOutputType(ObjectBucketCorsRuleArrayOutput{})
	pulumi.RegisterOutputType(ObjectBucketVersioningOutput{})
	pulumi.RegisterOutputType(ObjectBucketVersioningPtrOutput{})
	pulumi.RegisterOutputType(GetBaremetalOfferCpuOutput{})
	pulumi.RegisterOutputType(GetBaremetalOfferDiskOutput{})
	pulumi.RegisterOutputType(GetBaremetalOfferDiskArrayOutput{})
	pulumi.RegisterOutputType(GetBaremetalOfferMemoryOutput{})
	pulumi.RegisterOutputType(GetBaremetalOfferMemoryArrayOutput{})
	pulumi.RegisterOutputType(GetDatabaseAclAclRuleOutput{})
	pulumi.RegisterOutputType(GetDatabaseAclAclRuleArrayOutput{})
	pulumi.RegisterOutputType(GetDatabaseInstanceLoadBalancerOutput{})
	pulumi.RegisterOutputType(GetDatabaseInstanceLoadBalancerArrayOutput{})
	pulumi.RegisterOutputType(GetDatabaseInstancePrivateNetworkOutput{})
	pulumi.RegisterOutputType(GetDatabaseInstancePrivateNetworkArrayOutput{})
	pulumi.RegisterOutputType(GetDatabaseInstanceReadReplicaOutput{})
	pulumi.RegisterOutputType(GetDatabaseInstanceReadReplicaArrayOutput{})
	pulumi.RegisterOutputType(GetDomainRecordGeoIpOutput{})
	pulumi.RegisterOutputType(GetDomainRecordGeoIpArrayOutput{})
	pulumi.RegisterOutputType(GetDomainRecordGeoIpMatchOutput{})
	pulumi.RegisterOutputType(GetDomainRecordGeoIpMatchArrayOutput{})
	pulumi.RegisterOutputType(GetDomainRecordHttpServiceOutput{})
	pulumi.RegisterOutputType(GetDomainRecordHttpServiceArrayOutput{})
	pulumi.RegisterOutputType(GetDomainRecordViewOutput{})
	pulumi.RegisterOutputType(GetDomainRecordViewArrayOutput{})
	pulumi.RegisterOutputType(GetDomainRecordWeightedOutput{})
	pulumi.RegisterOutputType(GetDomainRecordWeightedArrayOutput{})
	pulumi.RegisterOutputType(GetInstanceSecurityGroupInboundRuleOutput{})
	pulumi.RegisterOutputType(GetInstanceSecurityGroupInboundRuleArrayOutput{})
	pulumi.RegisterOutputType(GetInstanceSecurityGroupOutboundRuleOutput{})
	pulumi.RegisterOutputType(GetInstanceSecurityGroupOutboundRuleArrayOutput{})
	pulumi.RegisterOutputType(GetInstanceServerPrivateNetworkOutput{})
	pulumi.RegisterOutputType(GetInstanceServerPrivateNetworkArrayOutput{})
	pulumi.RegisterOutputType(GetInstanceServerRootVolumeOutput{})
	pulumi.RegisterOutputType(GetInstanceServerRootVolumeArrayOutput{})
	pulumi.RegisterOutputType(GetKubernetesClusterAutoUpgradeOutput{})
	pulumi.RegisterOutputType(GetKubernetesClusterAutoUpgradeArrayOutput{})
	pulumi.RegisterOutputType(GetKubernetesClusterAutoscalerConfigOutput{})
	pulumi.RegisterOutputType(GetKubernetesClusterAutoscalerConfigArrayOutput{})
	pulumi.RegisterOutputType(GetKubernetesClusterKubeconfigOutput{})
	pulumi.RegisterOutputType(GetKubernetesClusterKubeconfigArrayOutput{})
	pulumi.RegisterOutputType(GetKubernetesClusterOpenIdConnectConfigOutput{})
	pulumi.RegisterOutputType(GetKubernetesClusterOpenIdConnectConfigArrayOutput{})
	pulumi.RegisterOutputType(GetKubernetesNodePoolNodeOutput{})
	pulumi.RegisterOutputType(GetKubernetesNodePoolNodeArrayOutput{})
	pulumi.RegisterOutputType(GetKubernetesNodePoolUpgradePolicyOutput{})
	pulumi.RegisterOutputType(GetKubernetesNodePoolUpgradePolicyArrayOutput{})
	pulumi.RegisterOutputType(GetLoadbalancerPrivateNetworkOutput{})
	pulumi.RegisterOutputType(GetLoadbalancerPrivateNetworkArrayOutput{})
}
