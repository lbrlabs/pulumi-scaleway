// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package scaleway

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type VpcPublicGateway struct {
	pulumi.CustomResourceState

	// The date and time of the creation of the public gateway
	CreatedAt pulumi.StringOutput `pulumi:"createdAt"`
	// attach an existing IP to the gateway
	IpId pulumi.StringOutput `pulumi:"ipId"`
	// name of the gateway
	Name pulumi.StringOutput `pulumi:"name"`
	// The organization_id you want to attach the resource to
	OrganizationId pulumi.StringOutput `pulumi:"organizationId"`
	// The project_id you want to attach the resource to
	ProjectId pulumi.StringOutput `pulumi:"projectId"`
	// The tags associated with public gateway
	Tags pulumi.StringArrayOutput `pulumi:"tags"`
	// gateway type
	Type pulumi.StringOutput `pulumi:"type"`
	// The date and time of the last update of the public gateway
	UpdatedAt pulumi.StringOutput `pulumi:"updatedAt"`
	// override the gateway's default recursive DNS servers, if DNS features are enabled
	UpstreamDnsServers pulumi.StringArrayOutput `pulumi:"upstreamDnsServers"`
	// The zone you want to attach the resource to
	Zone pulumi.StringOutput `pulumi:"zone"`
}

// NewVpcPublicGateway registers a new resource with the given unique name, arguments, and options.
func NewVpcPublicGateway(ctx *pulumi.Context,
	name string, args *VpcPublicGatewayArgs, opts ...pulumi.ResourceOption) (*VpcPublicGateway, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Type == nil {
		return nil, errors.New("invalid value for required argument 'Type'")
	}
	opts = pkgResourceDefaultOpts(opts)
	var resource VpcPublicGateway
	err := ctx.RegisterResource("scaleway:index/vpcPublicGateway:VpcPublicGateway", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetVpcPublicGateway gets an existing VpcPublicGateway resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetVpcPublicGateway(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *VpcPublicGatewayState, opts ...pulumi.ResourceOption) (*VpcPublicGateway, error) {
	var resource VpcPublicGateway
	err := ctx.ReadResource("scaleway:index/vpcPublicGateway:VpcPublicGateway", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering VpcPublicGateway resources.
type vpcPublicGatewayState struct {
	// The date and time of the creation of the public gateway
	CreatedAt *string `pulumi:"createdAt"`
	// attach an existing IP to the gateway
	IpId *string `pulumi:"ipId"`
	// name of the gateway
	Name *string `pulumi:"name"`
	// The organization_id you want to attach the resource to
	OrganizationId *string `pulumi:"organizationId"`
	// The project_id you want to attach the resource to
	ProjectId *string `pulumi:"projectId"`
	// The tags associated with public gateway
	Tags []string `pulumi:"tags"`
	// gateway type
	Type *string `pulumi:"type"`
	// The date and time of the last update of the public gateway
	UpdatedAt *string `pulumi:"updatedAt"`
	// override the gateway's default recursive DNS servers, if DNS features are enabled
	UpstreamDnsServers []string `pulumi:"upstreamDnsServers"`
	// The zone you want to attach the resource to
	Zone *string `pulumi:"zone"`
}

type VpcPublicGatewayState struct {
	// The date and time of the creation of the public gateway
	CreatedAt pulumi.StringPtrInput
	// attach an existing IP to the gateway
	IpId pulumi.StringPtrInput
	// name of the gateway
	Name pulumi.StringPtrInput
	// The organization_id you want to attach the resource to
	OrganizationId pulumi.StringPtrInput
	// The project_id you want to attach the resource to
	ProjectId pulumi.StringPtrInput
	// The tags associated with public gateway
	Tags pulumi.StringArrayInput
	// gateway type
	Type pulumi.StringPtrInput
	// The date and time of the last update of the public gateway
	UpdatedAt pulumi.StringPtrInput
	// override the gateway's default recursive DNS servers, if DNS features are enabled
	UpstreamDnsServers pulumi.StringArrayInput
	// The zone you want to attach the resource to
	Zone pulumi.StringPtrInput
}

func (VpcPublicGatewayState) ElementType() reflect.Type {
	return reflect.TypeOf((*vpcPublicGatewayState)(nil)).Elem()
}

type vpcPublicGatewayArgs struct {
	// attach an existing IP to the gateway
	IpId *string `pulumi:"ipId"`
	// name of the gateway
	Name *string `pulumi:"name"`
	// The project_id you want to attach the resource to
	ProjectId *string `pulumi:"projectId"`
	// The tags associated with public gateway
	Tags []string `pulumi:"tags"`
	// gateway type
	Type string `pulumi:"type"`
	// override the gateway's default recursive DNS servers, if DNS features are enabled
	UpstreamDnsServers []string `pulumi:"upstreamDnsServers"`
	// The zone you want to attach the resource to
	Zone *string `pulumi:"zone"`
}

// The set of arguments for constructing a VpcPublicGateway resource.
type VpcPublicGatewayArgs struct {
	// attach an existing IP to the gateway
	IpId pulumi.StringPtrInput
	// name of the gateway
	Name pulumi.StringPtrInput
	// The project_id you want to attach the resource to
	ProjectId pulumi.StringPtrInput
	// The tags associated with public gateway
	Tags pulumi.StringArrayInput
	// gateway type
	Type pulumi.StringInput
	// override the gateway's default recursive DNS servers, if DNS features are enabled
	UpstreamDnsServers pulumi.StringArrayInput
	// The zone you want to attach the resource to
	Zone pulumi.StringPtrInput
}

func (VpcPublicGatewayArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*vpcPublicGatewayArgs)(nil)).Elem()
}

type VpcPublicGatewayInput interface {
	pulumi.Input

	ToVpcPublicGatewayOutput() VpcPublicGatewayOutput
	ToVpcPublicGatewayOutputWithContext(ctx context.Context) VpcPublicGatewayOutput
}

func (*VpcPublicGateway) ElementType() reflect.Type {
	return reflect.TypeOf((**VpcPublicGateway)(nil)).Elem()
}

func (i *VpcPublicGateway) ToVpcPublicGatewayOutput() VpcPublicGatewayOutput {
	return i.ToVpcPublicGatewayOutputWithContext(context.Background())
}

func (i *VpcPublicGateway) ToVpcPublicGatewayOutputWithContext(ctx context.Context) VpcPublicGatewayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcPublicGatewayOutput)
}

type VpcPublicGatewayOutput struct{ *pulumi.OutputState }

func (VpcPublicGatewayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VpcPublicGateway)(nil)).Elem()
}

func (o VpcPublicGatewayOutput) ToVpcPublicGatewayOutput() VpcPublicGatewayOutput {
	return o
}

func (o VpcPublicGatewayOutput) ToVpcPublicGatewayOutputWithContext(ctx context.Context) VpcPublicGatewayOutput {
	return o
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*VpcPublicGatewayInput)(nil)).Elem(), &VpcPublicGateway{})
	pulumi.RegisterOutputType(VpcPublicGatewayOutput{})
}
