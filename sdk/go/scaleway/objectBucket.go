// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package scaleway

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type ObjectBucket struct {
	pulumi.CustomResourceState

	// ACL of the bucket: either 'public-read' or 'private'.
	Acl       pulumi.StringPtrOutput          `pulumi:"acl"`
	CorsRules ObjectBucketCorsRuleArrayOutput `pulumi:"corsRules"`
	// Endpoint of the bucket
	Endpoint pulumi.StringOutput `pulumi:"endpoint"`
	// Delete objects in bucket
	ForceDestroy pulumi.BoolPtrOutput `pulumi:"forceDestroy"`
	// Lifecycle configuration is a set of rules that define actions that Scaleway Object Storage applies to a group of objects
	LifecycleRules ObjectBucketLifecycleRuleArrayOutput `pulumi:"lifecycleRules"`
	// The name of the bucket
	Name pulumi.StringOutput `pulumi:"name"`
	// The region you want to attach the resource to
	Region pulumi.StringOutput `pulumi:"region"`
	// The tags associated with this bucket
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// Allow multiple versions of an object in the same bucket
	Versioning ObjectBucketVersioningOutput `pulumi:"versioning"`
}

// NewObjectBucket registers a new resource with the given unique name, arguments, and options.
func NewObjectBucket(ctx *pulumi.Context,
	name string, args *ObjectBucketArgs, opts ...pulumi.ResourceOption) (*ObjectBucket, error) {
	if args == nil {
		args = &ObjectBucketArgs{}
	}

	opts = pkgResourceDefaultOpts(opts)
	var resource ObjectBucket
	err := ctx.RegisterResource("scaleway:index/objectBucket:ObjectBucket", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetObjectBucket gets an existing ObjectBucket resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetObjectBucket(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ObjectBucketState, opts ...pulumi.ResourceOption) (*ObjectBucket, error) {
	var resource ObjectBucket
	err := ctx.ReadResource("scaleway:index/objectBucket:ObjectBucket", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ObjectBucket resources.
type objectBucketState struct {
	// ACL of the bucket: either 'public-read' or 'private'.
	Acl       *string                `pulumi:"acl"`
	CorsRules []ObjectBucketCorsRule `pulumi:"corsRules"`
	// Endpoint of the bucket
	Endpoint *string `pulumi:"endpoint"`
	// Delete objects in bucket
	ForceDestroy *bool `pulumi:"forceDestroy"`
	// Lifecycle configuration is a set of rules that define actions that Scaleway Object Storage applies to a group of objects
	LifecycleRules []ObjectBucketLifecycleRule `pulumi:"lifecycleRules"`
	// The name of the bucket
	Name *string `pulumi:"name"`
	// The region you want to attach the resource to
	Region *string `pulumi:"region"`
	// The tags associated with this bucket
	Tags map[string]string `pulumi:"tags"`
	// Allow multiple versions of an object in the same bucket
	Versioning *ObjectBucketVersioning `pulumi:"versioning"`
}

type ObjectBucketState struct {
	// ACL of the bucket: either 'public-read' or 'private'.
	Acl       pulumi.StringPtrInput
	CorsRules ObjectBucketCorsRuleArrayInput
	// Endpoint of the bucket
	Endpoint pulumi.StringPtrInput
	// Delete objects in bucket
	ForceDestroy pulumi.BoolPtrInput
	// Lifecycle configuration is a set of rules that define actions that Scaleway Object Storage applies to a group of objects
	LifecycleRules ObjectBucketLifecycleRuleArrayInput
	// The name of the bucket
	Name pulumi.StringPtrInput
	// The region you want to attach the resource to
	Region pulumi.StringPtrInput
	// The tags associated with this bucket
	Tags pulumi.StringMapInput
	// Allow multiple versions of an object in the same bucket
	Versioning ObjectBucketVersioningPtrInput
}

func (ObjectBucketState) ElementType() reflect.Type {
	return reflect.TypeOf((*objectBucketState)(nil)).Elem()
}

type objectBucketArgs struct {
	// ACL of the bucket: either 'public-read' or 'private'.
	Acl       *string                `pulumi:"acl"`
	CorsRules []ObjectBucketCorsRule `pulumi:"corsRules"`
	// Delete objects in bucket
	ForceDestroy *bool `pulumi:"forceDestroy"`
	// Lifecycle configuration is a set of rules that define actions that Scaleway Object Storage applies to a group of objects
	LifecycleRules []ObjectBucketLifecycleRule `pulumi:"lifecycleRules"`
	// The name of the bucket
	Name *string `pulumi:"name"`
	// The region you want to attach the resource to
	Region *string `pulumi:"region"`
	// The tags associated with this bucket
	Tags map[string]string `pulumi:"tags"`
	// Allow multiple versions of an object in the same bucket
	Versioning *ObjectBucketVersioning `pulumi:"versioning"`
}

// The set of arguments for constructing a ObjectBucket resource.
type ObjectBucketArgs struct {
	// ACL of the bucket: either 'public-read' or 'private'.
	Acl       pulumi.StringPtrInput
	CorsRules ObjectBucketCorsRuleArrayInput
	// Delete objects in bucket
	ForceDestroy pulumi.BoolPtrInput
	// Lifecycle configuration is a set of rules that define actions that Scaleway Object Storage applies to a group of objects
	LifecycleRules ObjectBucketLifecycleRuleArrayInput
	// The name of the bucket
	Name pulumi.StringPtrInput
	// The region you want to attach the resource to
	Region pulumi.StringPtrInput
	// The tags associated with this bucket
	Tags pulumi.StringMapInput
	// Allow multiple versions of an object in the same bucket
	Versioning ObjectBucketVersioningPtrInput
}

func (ObjectBucketArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*objectBucketArgs)(nil)).Elem()
}

type ObjectBucketInput interface {
	pulumi.Input

	ToObjectBucketOutput() ObjectBucketOutput
	ToObjectBucketOutputWithContext(ctx context.Context) ObjectBucketOutput
}

func (*ObjectBucket) ElementType() reflect.Type {
	return reflect.TypeOf((**ObjectBucket)(nil)).Elem()
}

func (i *ObjectBucket) ToObjectBucketOutput() ObjectBucketOutput {
	return i.ToObjectBucketOutputWithContext(context.Background())
}

func (i *ObjectBucket) ToObjectBucketOutputWithContext(ctx context.Context) ObjectBucketOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ObjectBucketOutput)
}

type ObjectBucketOutput struct{ *pulumi.OutputState }

func (ObjectBucketOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ObjectBucket)(nil)).Elem()
}

func (o ObjectBucketOutput) ToObjectBucketOutput() ObjectBucketOutput {
	return o
}

func (o ObjectBucketOutput) ToObjectBucketOutputWithContext(ctx context.Context) ObjectBucketOutput {
	return o
}

// ACL of the bucket: either 'public-read' or 'private'.
func (o ObjectBucketOutput) Acl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ObjectBucket) pulumi.StringPtrOutput { return v.Acl }).(pulumi.StringPtrOutput)
}

func (o ObjectBucketOutput) CorsRules() ObjectBucketCorsRuleArrayOutput {
	return o.ApplyT(func(v *ObjectBucket) ObjectBucketCorsRuleArrayOutput { return v.CorsRules }).(ObjectBucketCorsRuleArrayOutput)
}

// Endpoint of the bucket
func (o ObjectBucketOutput) Endpoint() pulumi.StringOutput {
	return o.ApplyT(func(v *ObjectBucket) pulumi.StringOutput { return v.Endpoint }).(pulumi.StringOutput)
}

// Delete objects in bucket
func (o ObjectBucketOutput) ForceDestroy() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ObjectBucket) pulumi.BoolPtrOutput { return v.ForceDestroy }).(pulumi.BoolPtrOutput)
}

// Lifecycle configuration is a set of rules that define actions that Scaleway Object Storage applies to a group of objects
func (o ObjectBucketOutput) LifecycleRules() ObjectBucketLifecycleRuleArrayOutput {
	return o.ApplyT(func(v *ObjectBucket) ObjectBucketLifecycleRuleArrayOutput { return v.LifecycleRules }).(ObjectBucketLifecycleRuleArrayOutput)
}

// The name of the bucket
func (o ObjectBucketOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ObjectBucket) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The region you want to attach the resource to
func (o ObjectBucketOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v *ObjectBucket) pulumi.StringOutput { return v.Region }).(pulumi.StringOutput)
}

// The tags associated with this bucket
func (o ObjectBucketOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ObjectBucket) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

// Allow multiple versions of an object in the same bucket
func (o ObjectBucketOutput) Versioning() ObjectBucketVersioningOutput {
	return o.ApplyT(func(v *ObjectBucket) ObjectBucketVersioningOutput { return v.Versioning }).(ObjectBucketVersioningOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ObjectBucketInput)(nil)).Elem(), &ObjectBucket{})
	pulumi.RegisterOutputType(ObjectBucketOutput{})
}
