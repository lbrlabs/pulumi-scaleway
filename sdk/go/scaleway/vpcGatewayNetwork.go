// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package scaleway

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Creates and manages Scaleway VPC Public Gateway Network.
// It allows attaching Private Networks to the VPC Public Gateway and your DHCP config
// For more information, see [the documentation](https://developers.scaleway.com/en/products/vpc-gw/api/v1/#step-3-attach-private-networks-to-the-vpc-public-gateway).
//
// ## Example
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-scaleway/sdk/go/scaleway"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		pn01, err := scaleway.NewVpcPrivateNetwork(ctx, "pn01", nil)
// 		if err != nil {
// 			return err
// 		}
// 		gw01, err := scaleway.NewVpcPublicGatewayIp(ctx, "gw01", nil)
// 		if err != nil {
// 			return err
// 		}
// 		dhcp01, err := scaleway.NewVpcPublicGatewayDhcp(ctx, "dhcp01", &scaleway.VpcPublicGatewayDhcpArgs{
// 			Subnet: pulumi.String("192.168.1.0/24"),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		pg01, err := scaleway.NewVpcPublicGateway(ctx, "pg01", &scaleway.VpcPublicGatewayArgs{
// 			Type: pulumi.String("VPC-GW-S"),
// 			IpId: gw01.ID(),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		_, err = scaleway.NewVpcGatewayNetwork(ctx, "main", &scaleway.VpcGatewayNetworkArgs{
// 			GatewayId:        pg01.ID(),
// 			PrivateNetworkId: pn01.ID(),
// 			DhcpId:           dhcp01.ID(),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
//
// ## Import
//
// Gateway network can be imported using the `{zone}/{id}`, e.g. bash
//
// ```sh
//  $ pulumi import scaleway:index/vpcGatewayNetwork:VpcGatewayNetwork main fr-par-1/11111111-1111-1111-1111-111111111111
// ```
type VpcGatewayNetwork struct {
	pulumi.CustomResourceState

	// Remove DHCP config on this network on destroy. It requires DHCP id.
	CleanupDhcp pulumi.BoolPtrOutput `pulumi:"cleanupDhcp"`
	// The date and time of the creation of the gateway network.
	CreatedAt pulumi.StringOutput `pulumi:"createdAt"`
	// The ID of the public gateway DHCP config.
	DhcpId pulumi.StringPtrOutput `pulumi:"dhcpId"`
	// Enable DHCP config on this network. It requires DHCP id.
	EnableDhcp pulumi.BoolPtrOutput `pulumi:"enableDhcp"`
	// Enable masquerade on this network
	EnableMasquerade pulumi.BoolPtrOutput `pulumi:"enableMasquerade"`
	// The ID of the public gateway.
	GatewayId pulumi.StringOutput `pulumi:"gatewayId"`
	// The mac address of the creation of the gateway network.
	MacAddress pulumi.StringOutput `pulumi:"macAddress"`
	// The ID of the private network.
	PrivateNetworkId pulumi.StringOutput `pulumi:"privateNetworkId"`
	// Enable DHCP config on this network
	StaticAddress pulumi.StringPtrOutput `pulumi:"staticAddress"`
	// The date and time of the last update of the gateway network.
	UpdatedAt pulumi.StringOutput `pulumi:"updatedAt"`
	// `zone`) The zone in which the gateway network should be created.
	Zone pulumi.StringOutput `pulumi:"zone"`
}

// NewVpcGatewayNetwork registers a new resource with the given unique name, arguments, and options.
func NewVpcGatewayNetwork(ctx *pulumi.Context,
	name string, args *VpcGatewayNetworkArgs, opts ...pulumi.ResourceOption) (*VpcGatewayNetwork, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.GatewayId == nil {
		return nil, errors.New("invalid value for required argument 'GatewayId'")
	}
	if args.PrivateNetworkId == nil {
		return nil, errors.New("invalid value for required argument 'PrivateNetworkId'")
	}
	var resource VpcGatewayNetwork
	err := ctx.RegisterResource("scaleway:index/vpcGatewayNetwork:VpcGatewayNetwork", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetVpcGatewayNetwork gets an existing VpcGatewayNetwork resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetVpcGatewayNetwork(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *VpcGatewayNetworkState, opts ...pulumi.ResourceOption) (*VpcGatewayNetwork, error) {
	var resource VpcGatewayNetwork
	err := ctx.ReadResource("scaleway:index/vpcGatewayNetwork:VpcGatewayNetwork", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering VpcGatewayNetwork resources.
type vpcGatewayNetworkState struct {
	// Remove DHCP config on this network on destroy. It requires DHCP id.
	CleanupDhcp *bool `pulumi:"cleanupDhcp"`
	// The date and time of the creation of the gateway network.
	CreatedAt *string `pulumi:"createdAt"`
	// The ID of the public gateway DHCP config.
	DhcpId *string `pulumi:"dhcpId"`
	// Enable DHCP config on this network. It requires DHCP id.
	EnableDhcp *bool `pulumi:"enableDhcp"`
	// Enable masquerade on this network
	EnableMasquerade *bool `pulumi:"enableMasquerade"`
	// The ID of the public gateway.
	GatewayId *string `pulumi:"gatewayId"`
	// The mac address of the creation of the gateway network.
	MacAddress *string `pulumi:"macAddress"`
	// The ID of the private network.
	PrivateNetworkId *string `pulumi:"privateNetworkId"`
	// Enable DHCP config on this network
	StaticAddress *string `pulumi:"staticAddress"`
	// The date and time of the last update of the gateway network.
	UpdatedAt *string `pulumi:"updatedAt"`
	// `zone`) The zone in which the gateway network should be created.
	Zone *string `pulumi:"zone"`
}

type VpcGatewayNetworkState struct {
	// Remove DHCP config on this network on destroy. It requires DHCP id.
	CleanupDhcp pulumi.BoolPtrInput
	// The date and time of the creation of the gateway network.
	CreatedAt pulumi.StringPtrInput
	// The ID of the public gateway DHCP config.
	DhcpId pulumi.StringPtrInput
	// Enable DHCP config on this network. It requires DHCP id.
	EnableDhcp pulumi.BoolPtrInput
	// Enable masquerade on this network
	EnableMasquerade pulumi.BoolPtrInput
	// The ID of the public gateway.
	GatewayId pulumi.StringPtrInput
	// The mac address of the creation of the gateway network.
	MacAddress pulumi.StringPtrInput
	// The ID of the private network.
	PrivateNetworkId pulumi.StringPtrInput
	// Enable DHCP config on this network
	StaticAddress pulumi.StringPtrInput
	// The date and time of the last update of the gateway network.
	UpdatedAt pulumi.StringPtrInput
	// `zone`) The zone in which the gateway network should be created.
	Zone pulumi.StringPtrInput
}

func (VpcGatewayNetworkState) ElementType() reflect.Type {
	return reflect.TypeOf((*vpcGatewayNetworkState)(nil)).Elem()
}

type vpcGatewayNetworkArgs struct {
	// Remove DHCP config on this network on destroy. It requires DHCP id.
	CleanupDhcp *bool `pulumi:"cleanupDhcp"`
	// The ID of the public gateway DHCP config.
	DhcpId *string `pulumi:"dhcpId"`
	// Enable DHCP config on this network. It requires DHCP id.
	EnableDhcp *bool `pulumi:"enableDhcp"`
	// Enable masquerade on this network
	EnableMasquerade *bool `pulumi:"enableMasquerade"`
	// The ID of the public gateway.
	GatewayId string `pulumi:"gatewayId"`
	// The ID of the private network.
	PrivateNetworkId string `pulumi:"privateNetworkId"`
	// Enable DHCP config on this network
	StaticAddress *string `pulumi:"staticAddress"`
	// `zone`) The zone in which the gateway network should be created.
	Zone *string `pulumi:"zone"`
}

// The set of arguments for constructing a VpcGatewayNetwork resource.
type VpcGatewayNetworkArgs struct {
	// Remove DHCP config on this network on destroy. It requires DHCP id.
	CleanupDhcp pulumi.BoolPtrInput
	// The ID of the public gateway DHCP config.
	DhcpId pulumi.StringPtrInput
	// Enable DHCP config on this network. It requires DHCP id.
	EnableDhcp pulumi.BoolPtrInput
	// Enable masquerade on this network
	EnableMasquerade pulumi.BoolPtrInput
	// The ID of the public gateway.
	GatewayId pulumi.StringInput
	// The ID of the private network.
	PrivateNetworkId pulumi.StringInput
	// Enable DHCP config on this network
	StaticAddress pulumi.StringPtrInput
	// `zone`) The zone in which the gateway network should be created.
	Zone pulumi.StringPtrInput
}

func (VpcGatewayNetworkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*vpcGatewayNetworkArgs)(nil)).Elem()
}

type VpcGatewayNetworkInput interface {
	pulumi.Input

	ToVpcGatewayNetworkOutput() VpcGatewayNetworkOutput
	ToVpcGatewayNetworkOutputWithContext(ctx context.Context) VpcGatewayNetworkOutput
}

func (*VpcGatewayNetwork) ElementType() reflect.Type {
	return reflect.TypeOf((**VpcGatewayNetwork)(nil)).Elem()
}

func (i *VpcGatewayNetwork) ToVpcGatewayNetworkOutput() VpcGatewayNetworkOutput {
	return i.ToVpcGatewayNetworkOutputWithContext(context.Background())
}

func (i *VpcGatewayNetwork) ToVpcGatewayNetworkOutputWithContext(ctx context.Context) VpcGatewayNetworkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcGatewayNetworkOutput)
}

type VpcGatewayNetworkOutput struct{ *pulumi.OutputState }

func (VpcGatewayNetworkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VpcGatewayNetwork)(nil)).Elem()
}

func (o VpcGatewayNetworkOutput) ToVpcGatewayNetworkOutput() VpcGatewayNetworkOutput {
	return o
}

func (o VpcGatewayNetworkOutput) ToVpcGatewayNetworkOutputWithContext(ctx context.Context) VpcGatewayNetworkOutput {
	return o
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*VpcGatewayNetworkInput)(nil)).Elem(), &VpcGatewayNetwork{})
	pulumi.RegisterOutputType(VpcGatewayNetworkOutput{})
}
