// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package scaleway

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type VpcPublicGatewayIp struct {
	pulumi.CustomResourceState

	// the IP itself
	Address pulumi.StringOutput `pulumi:"address"`
	// The date and time of the creation of the public gateway IP
	CreatedAt pulumi.StringOutput `pulumi:"createdAt"`
	// The organization_id you want to attach the resource to
	OrganizationId pulumi.StringOutput `pulumi:"organizationId"`
	// The project_id you want to attach the resource to
	ProjectId pulumi.StringOutput `pulumi:"projectId"`
	// reverse domain name for the IP address
	Reverse pulumi.StringOutput `pulumi:"reverse"`
	// The tags associated with public gateway IP
	Tags pulumi.StringArrayOutput `pulumi:"tags"`
	// The date and time of the last update of the public gateway IP
	UpdatedAt pulumi.StringOutput `pulumi:"updatedAt"`
	// The zone you want to attach the resource to
	Zone pulumi.StringOutput `pulumi:"zone"`
}

// NewVpcPublicGatewayIp registers a new resource with the given unique name, arguments, and options.
func NewVpcPublicGatewayIp(ctx *pulumi.Context,
	name string, args *VpcPublicGatewayIpArgs, opts ...pulumi.ResourceOption) (*VpcPublicGatewayIp, error) {
	if args == nil {
		args = &VpcPublicGatewayIpArgs{}
	}

	opts = pkgResourceDefaultOpts(opts)
	var resource VpcPublicGatewayIp
	err := ctx.RegisterResource("scaleway:index/vpcPublicGatewayIp:VpcPublicGatewayIp", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetVpcPublicGatewayIp gets an existing VpcPublicGatewayIp resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetVpcPublicGatewayIp(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *VpcPublicGatewayIpState, opts ...pulumi.ResourceOption) (*VpcPublicGatewayIp, error) {
	var resource VpcPublicGatewayIp
	err := ctx.ReadResource("scaleway:index/vpcPublicGatewayIp:VpcPublicGatewayIp", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering VpcPublicGatewayIp resources.
type vpcPublicGatewayIpState struct {
	// the IP itself
	Address *string `pulumi:"address"`
	// The date and time of the creation of the public gateway IP
	CreatedAt *string `pulumi:"createdAt"`
	// The organization_id you want to attach the resource to
	OrganizationId *string `pulumi:"organizationId"`
	// The project_id you want to attach the resource to
	ProjectId *string `pulumi:"projectId"`
	// reverse domain name for the IP address
	Reverse *string `pulumi:"reverse"`
	// The tags associated with public gateway IP
	Tags []string `pulumi:"tags"`
	// The date and time of the last update of the public gateway IP
	UpdatedAt *string `pulumi:"updatedAt"`
	// The zone you want to attach the resource to
	Zone *string `pulumi:"zone"`
}

type VpcPublicGatewayIpState struct {
	// the IP itself
	Address pulumi.StringPtrInput
	// The date and time of the creation of the public gateway IP
	CreatedAt pulumi.StringPtrInput
	// The organization_id you want to attach the resource to
	OrganizationId pulumi.StringPtrInput
	// The project_id you want to attach the resource to
	ProjectId pulumi.StringPtrInput
	// reverse domain name for the IP address
	Reverse pulumi.StringPtrInput
	// The tags associated with public gateway IP
	Tags pulumi.StringArrayInput
	// The date and time of the last update of the public gateway IP
	UpdatedAt pulumi.StringPtrInput
	// The zone you want to attach the resource to
	Zone pulumi.StringPtrInput
}

func (VpcPublicGatewayIpState) ElementType() reflect.Type {
	return reflect.TypeOf((*vpcPublicGatewayIpState)(nil)).Elem()
}

type vpcPublicGatewayIpArgs struct {
	// The project_id you want to attach the resource to
	ProjectId *string `pulumi:"projectId"`
	// reverse domain name for the IP address
	Reverse *string `pulumi:"reverse"`
	// The tags associated with public gateway IP
	Tags []string `pulumi:"tags"`
	// The zone you want to attach the resource to
	Zone *string `pulumi:"zone"`
}

// The set of arguments for constructing a VpcPublicGatewayIp resource.
type VpcPublicGatewayIpArgs struct {
	// The project_id you want to attach the resource to
	ProjectId pulumi.StringPtrInput
	// reverse domain name for the IP address
	Reverse pulumi.StringPtrInput
	// The tags associated with public gateway IP
	Tags pulumi.StringArrayInput
	// The zone you want to attach the resource to
	Zone pulumi.StringPtrInput
}

func (VpcPublicGatewayIpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*vpcPublicGatewayIpArgs)(nil)).Elem()
}

type VpcPublicGatewayIpInput interface {
	pulumi.Input

	ToVpcPublicGatewayIpOutput() VpcPublicGatewayIpOutput
	ToVpcPublicGatewayIpOutputWithContext(ctx context.Context) VpcPublicGatewayIpOutput
}

func (*VpcPublicGatewayIp) ElementType() reflect.Type {
	return reflect.TypeOf((**VpcPublicGatewayIp)(nil)).Elem()
}

func (i *VpcPublicGatewayIp) ToVpcPublicGatewayIpOutput() VpcPublicGatewayIpOutput {
	return i.ToVpcPublicGatewayIpOutputWithContext(context.Background())
}

func (i *VpcPublicGatewayIp) ToVpcPublicGatewayIpOutputWithContext(ctx context.Context) VpcPublicGatewayIpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcPublicGatewayIpOutput)
}

// VpcPublicGatewayIpArrayInput is an input type that accepts VpcPublicGatewayIpArray and VpcPublicGatewayIpArrayOutput values.
// You can construct a concrete instance of `VpcPublicGatewayIpArrayInput` via:
//
//          VpcPublicGatewayIpArray{ VpcPublicGatewayIpArgs{...} }
type VpcPublicGatewayIpArrayInput interface {
	pulumi.Input

	ToVpcPublicGatewayIpArrayOutput() VpcPublicGatewayIpArrayOutput
	ToVpcPublicGatewayIpArrayOutputWithContext(context.Context) VpcPublicGatewayIpArrayOutput
}

type VpcPublicGatewayIpArray []VpcPublicGatewayIpInput

func (VpcPublicGatewayIpArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*VpcPublicGatewayIp)(nil)).Elem()
}

func (i VpcPublicGatewayIpArray) ToVpcPublicGatewayIpArrayOutput() VpcPublicGatewayIpArrayOutput {
	return i.ToVpcPublicGatewayIpArrayOutputWithContext(context.Background())
}

func (i VpcPublicGatewayIpArray) ToVpcPublicGatewayIpArrayOutputWithContext(ctx context.Context) VpcPublicGatewayIpArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcPublicGatewayIpArrayOutput)
}

// VpcPublicGatewayIpMapInput is an input type that accepts VpcPublicGatewayIpMap and VpcPublicGatewayIpMapOutput values.
// You can construct a concrete instance of `VpcPublicGatewayIpMapInput` via:
//
//          VpcPublicGatewayIpMap{ "key": VpcPublicGatewayIpArgs{...} }
type VpcPublicGatewayIpMapInput interface {
	pulumi.Input

	ToVpcPublicGatewayIpMapOutput() VpcPublicGatewayIpMapOutput
	ToVpcPublicGatewayIpMapOutputWithContext(context.Context) VpcPublicGatewayIpMapOutput
}

type VpcPublicGatewayIpMap map[string]VpcPublicGatewayIpInput

func (VpcPublicGatewayIpMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*VpcPublicGatewayIp)(nil)).Elem()
}

func (i VpcPublicGatewayIpMap) ToVpcPublicGatewayIpMapOutput() VpcPublicGatewayIpMapOutput {
	return i.ToVpcPublicGatewayIpMapOutputWithContext(context.Background())
}

func (i VpcPublicGatewayIpMap) ToVpcPublicGatewayIpMapOutputWithContext(ctx context.Context) VpcPublicGatewayIpMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcPublicGatewayIpMapOutput)
}

type VpcPublicGatewayIpOutput struct{ *pulumi.OutputState }

func (VpcPublicGatewayIpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VpcPublicGatewayIp)(nil)).Elem()
}

func (o VpcPublicGatewayIpOutput) ToVpcPublicGatewayIpOutput() VpcPublicGatewayIpOutput {
	return o
}

func (o VpcPublicGatewayIpOutput) ToVpcPublicGatewayIpOutputWithContext(ctx context.Context) VpcPublicGatewayIpOutput {
	return o
}

// the IP itself
func (o VpcPublicGatewayIpOutput) Address() pulumi.StringOutput {
	return o.ApplyT(func(v *VpcPublicGatewayIp) pulumi.StringOutput { return v.Address }).(pulumi.StringOutput)
}

// The date and time of the creation of the public gateway IP
func (o VpcPublicGatewayIpOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *VpcPublicGatewayIp) pulumi.StringOutput { return v.CreatedAt }).(pulumi.StringOutput)
}

// The organization_id you want to attach the resource to
func (o VpcPublicGatewayIpOutput) OrganizationId() pulumi.StringOutput {
	return o.ApplyT(func(v *VpcPublicGatewayIp) pulumi.StringOutput { return v.OrganizationId }).(pulumi.StringOutput)
}

// The project_id you want to attach the resource to
func (o VpcPublicGatewayIpOutput) ProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v *VpcPublicGatewayIp) pulumi.StringOutput { return v.ProjectId }).(pulumi.StringOutput)
}

// reverse domain name for the IP address
func (o VpcPublicGatewayIpOutput) Reverse() pulumi.StringOutput {
	return o.ApplyT(func(v *VpcPublicGatewayIp) pulumi.StringOutput { return v.Reverse }).(pulumi.StringOutput)
}

// The tags associated with public gateway IP
func (o VpcPublicGatewayIpOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *VpcPublicGatewayIp) pulumi.StringArrayOutput { return v.Tags }).(pulumi.StringArrayOutput)
}

// The date and time of the last update of the public gateway IP
func (o VpcPublicGatewayIpOutput) UpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *VpcPublicGatewayIp) pulumi.StringOutput { return v.UpdatedAt }).(pulumi.StringOutput)
}

// The zone you want to attach the resource to
func (o VpcPublicGatewayIpOutput) Zone() pulumi.StringOutput {
	return o.ApplyT(func(v *VpcPublicGatewayIp) pulumi.StringOutput { return v.Zone }).(pulumi.StringOutput)
}

type VpcPublicGatewayIpArrayOutput struct{ *pulumi.OutputState }

func (VpcPublicGatewayIpArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*VpcPublicGatewayIp)(nil)).Elem()
}

func (o VpcPublicGatewayIpArrayOutput) ToVpcPublicGatewayIpArrayOutput() VpcPublicGatewayIpArrayOutput {
	return o
}

func (o VpcPublicGatewayIpArrayOutput) ToVpcPublicGatewayIpArrayOutputWithContext(ctx context.Context) VpcPublicGatewayIpArrayOutput {
	return o
}

func (o VpcPublicGatewayIpArrayOutput) Index(i pulumi.IntInput) VpcPublicGatewayIpOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *VpcPublicGatewayIp {
		return vs[0].([]*VpcPublicGatewayIp)[vs[1].(int)]
	}).(VpcPublicGatewayIpOutput)
}

type VpcPublicGatewayIpMapOutput struct{ *pulumi.OutputState }

func (VpcPublicGatewayIpMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*VpcPublicGatewayIp)(nil)).Elem()
}

func (o VpcPublicGatewayIpMapOutput) ToVpcPublicGatewayIpMapOutput() VpcPublicGatewayIpMapOutput {
	return o
}

func (o VpcPublicGatewayIpMapOutput) ToVpcPublicGatewayIpMapOutputWithContext(ctx context.Context) VpcPublicGatewayIpMapOutput {
	return o
}

func (o VpcPublicGatewayIpMapOutput) MapIndex(k pulumi.StringInput) VpcPublicGatewayIpOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *VpcPublicGatewayIp {
		return vs[0].(map[string]*VpcPublicGatewayIp)[vs[1].(string)]
	}).(VpcPublicGatewayIpOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*VpcPublicGatewayIpInput)(nil)).Elem(), &VpcPublicGatewayIp{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpcPublicGatewayIpArrayInput)(nil)).Elem(), VpcPublicGatewayIpArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpcPublicGatewayIpMapInput)(nil)).Elem(), VpcPublicGatewayIpMap{})
	pulumi.RegisterOutputType(VpcPublicGatewayIpOutput{})
	pulumi.RegisterOutputType(VpcPublicGatewayIpArrayOutput{})
	pulumi.RegisterOutputType(VpcPublicGatewayIpMapOutput{})
}
