// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package scaleway

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Creates and manages Scaleway VPC Public Gateway IP.
// For more information, see [the documentation](https://developers.scaleway.com/en/products/vpc-gw/api/v1).
//
// ## Example
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-scaleway/sdk/go/scaleway"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := scaleway.NewVpcPublicGatewayIp(ctx, "main", &scaleway.VpcPublicGatewayIpArgs{
// 			Reverse: pulumi.String("example.com"),
// 			Tags: pulumi.StringArray{
// 				pulumi.String("demo"),
// 				pulumi.String("terraform"),
// 			},
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
//
// ## Import
//
// Public gateway can be imported using the `{zone}/{id}`, e.g. bash
//
// ```sh
//  $ pulumi import scaleway:index/vpcPublicGatewayIp:VpcPublicGatewayIp main fr-par-1/11111111-1111-1111-1111-111111111111
// ```
type VpcPublicGatewayIp struct {
	pulumi.CustomResourceState

	// The IP address itself.
	Address pulumi.StringOutput `pulumi:"address"`
	// The date and time of the creation of the public gateway ip.
	CreatedAt pulumi.StringOutput `pulumi:"createdAt"`
	// The organization ID the public gateway ip is associated with.
	OrganizationId pulumi.StringOutput `pulumi:"organizationId"`
	// `projectId`) The ID of the project the public gateway ip is associated with.
	ProjectId pulumi.StringOutput `pulumi:"projectId"`
	// The reverse domain name for the IP address
	Reverse pulumi.StringOutput `pulumi:"reverse"`
	// The tags associated with the public gateway IP.
	Tags pulumi.StringArrayOutput `pulumi:"tags"`
	// The date and time of the last update of the public gateway ip.
	UpdatedAt pulumi.StringOutput `pulumi:"updatedAt"`
	// `zone`) The zone in which the public gateway ip should be created.
	Zone pulumi.StringOutput `pulumi:"zone"`
}

// NewVpcPublicGatewayIp registers a new resource with the given unique name, arguments, and options.
func NewVpcPublicGatewayIp(ctx *pulumi.Context,
	name string, args *VpcPublicGatewayIpArgs, opts ...pulumi.ResourceOption) (*VpcPublicGatewayIp, error) {
	if args == nil {
		args = &VpcPublicGatewayIpArgs{}
	}

	var resource VpcPublicGatewayIp
	err := ctx.RegisterResource("scaleway:index/vpcPublicGatewayIp:VpcPublicGatewayIp", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetVpcPublicGatewayIp gets an existing VpcPublicGatewayIp resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetVpcPublicGatewayIp(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *VpcPublicGatewayIpState, opts ...pulumi.ResourceOption) (*VpcPublicGatewayIp, error) {
	var resource VpcPublicGatewayIp
	err := ctx.ReadResource("scaleway:index/vpcPublicGatewayIp:VpcPublicGatewayIp", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering VpcPublicGatewayIp resources.
type vpcPublicGatewayIpState struct {
	// The IP address itself.
	Address *string `pulumi:"address"`
	// The date and time of the creation of the public gateway ip.
	CreatedAt *string `pulumi:"createdAt"`
	// The organization ID the public gateway ip is associated with.
	OrganizationId *string `pulumi:"organizationId"`
	// `projectId`) The ID of the project the public gateway ip is associated with.
	ProjectId *string `pulumi:"projectId"`
	// The reverse domain name for the IP address
	Reverse *string `pulumi:"reverse"`
	// The tags associated with the public gateway IP.
	Tags []string `pulumi:"tags"`
	// The date and time of the last update of the public gateway ip.
	UpdatedAt *string `pulumi:"updatedAt"`
	// `zone`) The zone in which the public gateway ip should be created.
	Zone *string `pulumi:"zone"`
}

type VpcPublicGatewayIpState struct {
	// The IP address itself.
	Address pulumi.StringPtrInput
	// The date and time of the creation of the public gateway ip.
	CreatedAt pulumi.StringPtrInput
	// The organization ID the public gateway ip is associated with.
	OrganizationId pulumi.StringPtrInput
	// `projectId`) The ID of the project the public gateway ip is associated with.
	ProjectId pulumi.StringPtrInput
	// The reverse domain name for the IP address
	Reverse pulumi.StringPtrInput
	// The tags associated with the public gateway IP.
	Tags pulumi.StringArrayInput
	// The date and time of the last update of the public gateway ip.
	UpdatedAt pulumi.StringPtrInput
	// `zone`) The zone in which the public gateway ip should be created.
	Zone pulumi.StringPtrInput
}

func (VpcPublicGatewayIpState) ElementType() reflect.Type {
	return reflect.TypeOf((*vpcPublicGatewayIpState)(nil)).Elem()
}

type vpcPublicGatewayIpArgs struct {
	// `projectId`) The ID of the project the public gateway ip is associated with.
	ProjectId *string `pulumi:"projectId"`
	// The reverse domain name for the IP address
	Reverse *string `pulumi:"reverse"`
	// The tags associated with the public gateway IP.
	Tags []string `pulumi:"tags"`
	// `zone`) The zone in which the public gateway ip should be created.
	Zone *string `pulumi:"zone"`
}

// The set of arguments for constructing a VpcPublicGatewayIp resource.
type VpcPublicGatewayIpArgs struct {
	// `projectId`) The ID of the project the public gateway ip is associated with.
	ProjectId pulumi.StringPtrInput
	// The reverse domain name for the IP address
	Reverse pulumi.StringPtrInput
	// The tags associated with the public gateway IP.
	Tags pulumi.StringArrayInput
	// `zone`) The zone in which the public gateway ip should be created.
	Zone pulumi.StringPtrInput
}

func (VpcPublicGatewayIpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*vpcPublicGatewayIpArgs)(nil)).Elem()
}

type VpcPublicGatewayIpInput interface {
	pulumi.Input

	ToVpcPublicGatewayIpOutput() VpcPublicGatewayIpOutput
	ToVpcPublicGatewayIpOutputWithContext(ctx context.Context) VpcPublicGatewayIpOutput
}

func (*VpcPublicGatewayIp) ElementType() reflect.Type {
	return reflect.TypeOf((**VpcPublicGatewayIp)(nil)).Elem()
}

func (i *VpcPublicGatewayIp) ToVpcPublicGatewayIpOutput() VpcPublicGatewayIpOutput {
	return i.ToVpcPublicGatewayIpOutputWithContext(context.Background())
}

func (i *VpcPublicGatewayIp) ToVpcPublicGatewayIpOutputWithContext(ctx context.Context) VpcPublicGatewayIpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcPublicGatewayIpOutput)
}

type VpcPublicGatewayIpOutput struct{ *pulumi.OutputState }

func (VpcPublicGatewayIpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VpcPublicGatewayIp)(nil)).Elem()
}

func (o VpcPublicGatewayIpOutput) ToVpcPublicGatewayIpOutput() VpcPublicGatewayIpOutput {
	return o
}

func (o VpcPublicGatewayIpOutput) ToVpcPublicGatewayIpOutputWithContext(ctx context.Context) VpcPublicGatewayIpOutput {
	return o
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*VpcPublicGatewayIpInput)(nil)).Elem(), &VpcPublicGatewayIp{})
	pulumi.RegisterOutputType(VpcPublicGatewayIpOutput{})
}
