// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package scaleway

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func LookupDomainRecord(ctx *pulumi.Context, args *LookupDomainRecordArgs, opts ...pulumi.InvokeOption) (*LookupDomainRecordResult, error) {
	opts = pkgInvokeDefaultOpts(opts)
	var rv LookupDomainRecordResult
	err := ctx.Invoke("scaleway:index/getDomainRecord:getDomainRecord", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getDomainRecord.
type LookupDomainRecordArgs struct {
	Data     *string `pulumi:"data"`
	DnsZone  *string `pulumi:"dnsZone"`
	Name     *string `pulumi:"name"`
	RecordId *string `pulumi:"recordId"`
	Type     *string `pulumi:"type"`
}

// A collection of values returned by getDomainRecord.
type LookupDomainRecordResult struct {
	Data         *string                      `pulumi:"data"`
	DnsZone      *string                      `pulumi:"dnsZone"`
	GeoIps       []GetDomainRecordGeoIp       `pulumi:"geoIps"`
	HttpServices []GetDomainRecordHttpService `pulumi:"httpServices"`
	// The provider-assigned unique ID for this managed resource.
	Id            string                    `pulumi:"id"`
	KeepEmptyZone bool                      `pulumi:"keepEmptyZone"`
	Name          *string                   `pulumi:"name"`
	Priority      int                       `pulumi:"priority"`
	ProjectId     string                    `pulumi:"projectId"`
	RecordId      *string                   `pulumi:"recordId"`
	RootZone      bool                      `pulumi:"rootZone"`
	Ttl           int                       `pulumi:"ttl"`
	Type          *string                   `pulumi:"type"`
	Views         []GetDomainRecordView     `pulumi:"views"`
	Weighteds     []GetDomainRecordWeighted `pulumi:"weighteds"`
}

func LookupDomainRecordOutput(ctx *pulumi.Context, args LookupDomainRecordOutputArgs, opts ...pulumi.InvokeOption) LookupDomainRecordResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupDomainRecordResult, error) {
			args := v.(LookupDomainRecordArgs)
			r, err := LookupDomainRecord(ctx, &args, opts...)
			var s LookupDomainRecordResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupDomainRecordResultOutput)
}

// A collection of arguments for invoking getDomainRecord.
type LookupDomainRecordOutputArgs struct {
	Data     pulumi.StringPtrInput `pulumi:"data"`
	DnsZone  pulumi.StringPtrInput `pulumi:"dnsZone"`
	Name     pulumi.StringPtrInput `pulumi:"name"`
	RecordId pulumi.StringPtrInput `pulumi:"recordId"`
	Type     pulumi.StringPtrInput `pulumi:"type"`
}

func (LookupDomainRecordOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDomainRecordArgs)(nil)).Elem()
}

// A collection of values returned by getDomainRecord.
type LookupDomainRecordResultOutput struct{ *pulumi.OutputState }

func (LookupDomainRecordResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDomainRecordResult)(nil)).Elem()
}

func (o LookupDomainRecordResultOutput) ToLookupDomainRecordResultOutput() LookupDomainRecordResultOutput {
	return o
}

func (o LookupDomainRecordResultOutput) ToLookupDomainRecordResultOutputWithContext(ctx context.Context) LookupDomainRecordResultOutput {
	return o
}

func (o LookupDomainRecordResultOutput) Data() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupDomainRecordResult) *string { return v.Data }).(pulumi.StringPtrOutput)
}

func (o LookupDomainRecordResultOutput) DnsZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupDomainRecordResult) *string { return v.DnsZone }).(pulumi.StringPtrOutput)
}

func (o LookupDomainRecordResultOutput) GeoIps() GetDomainRecordGeoIpArrayOutput {
	return o.ApplyT(func(v LookupDomainRecordResult) []GetDomainRecordGeoIp { return v.GeoIps }).(GetDomainRecordGeoIpArrayOutput)
}

func (o LookupDomainRecordResultOutput) HttpServices() GetDomainRecordHttpServiceArrayOutput {
	return o.ApplyT(func(v LookupDomainRecordResult) []GetDomainRecordHttpService { return v.HttpServices }).(GetDomainRecordHttpServiceArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupDomainRecordResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDomainRecordResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupDomainRecordResultOutput) KeepEmptyZone() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupDomainRecordResult) bool { return v.KeepEmptyZone }).(pulumi.BoolOutput)
}

func (o LookupDomainRecordResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupDomainRecordResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o LookupDomainRecordResultOutput) Priority() pulumi.IntOutput {
	return o.ApplyT(func(v LookupDomainRecordResult) int { return v.Priority }).(pulumi.IntOutput)
}

func (o LookupDomainRecordResultOutput) ProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDomainRecordResult) string { return v.ProjectId }).(pulumi.StringOutput)
}

func (o LookupDomainRecordResultOutput) RecordId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupDomainRecordResult) *string { return v.RecordId }).(pulumi.StringPtrOutput)
}

func (o LookupDomainRecordResultOutput) RootZone() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupDomainRecordResult) bool { return v.RootZone }).(pulumi.BoolOutput)
}

func (o LookupDomainRecordResultOutput) Ttl() pulumi.IntOutput {
	return o.ApplyT(func(v LookupDomainRecordResult) int { return v.Ttl }).(pulumi.IntOutput)
}

func (o LookupDomainRecordResultOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupDomainRecordResult) *string { return v.Type }).(pulumi.StringPtrOutput)
}

func (o LookupDomainRecordResultOutput) Views() GetDomainRecordViewArrayOutput {
	return o.ApplyT(func(v LookupDomainRecordResult) []GetDomainRecordView { return v.Views }).(GetDomainRecordViewArrayOutput)
}

func (o LookupDomainRecordResultOutput) Weighteds() GetDomainRecordWeightedArrayOutput {
	return o.ApplyT(func(v LookupDomainRecordResult) []GetDomainRecordWeighted { return v.Weighteds }).(GetDomainRecordWeightedArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupDomainRecordResultOutput{})
}
