// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.scaleway;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.scaleway.AppleSliconValleyServerArgs;
import com.pulumi.scaleway.Utilities;
import com.pulumi.scaleway.inputs.AppleSliconValleyServerState;
import java.lang.String;
import javax.annotation.Nullable;

/**
 * Creates and manages Scaleway Apple silicon M1. For more information,
 * see [the documentation](https://www.scaleway.com/en/docs/compute/apple-silicon/concepts).
 * 
 * ## Examples
 * 
 * ### Basic
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.scaleway.AppleSliconValleyServer;
 * import com.pulumi.scaleway.AppleSliconValleyServerArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var server = new AppleSliconValleyServer(&#34;server&#34;, AppleSliconValleyServerArgs.builder()        
 *             .type(&#34;M1-M&#34;)
 *             .build());
 * 
 *     }
 * }
 * ```
 * 
 * ## Import
 * 
 * Instance servers can be imported using the `{zone}/{id}`, e.g. bash
 * 
 * ```sh
 *  $ pulumi import scaleway:index/appleSliconValleyServer:AppleSliconValleyServer server fr-par-1/11111111-1111-1111-1111-111111111111
 * ```
 * 
 */
@ResourceType(type="scaleway:index/appleSliconValleyServer:AppleSliconValleyServer")
public class AppleSliconValleyServer extends com.pulumi.resources.CustomResource {
    /**
     * The date and time of the creation of the Apple Silicon server.
     * 
     */
    @Export(name="createdAt", refs={String.class}, tree="[0]")
    private Output<String> createdAt;

    /**
     * @return The date and time of the creation of the Apple Silicon server.
     * 
     */
    public Output<String> createdAt() {
        return this.createdAt;
    }
    /**
     * The minimal date and time on which you can delete this server due to Apple licence
     * 
     */
    @Export(name="deletableAt", refs={String.class}, tree="[0]")
    private Output<String> deletableAt;

    /**
     * @return The minimal date and time on which you can delete this server due to Apple licence
     * 
     */
    public Output<String> deletableAt() {
        return this.deletableAt;
    }
    /**
     * IPv4 address of the server (IPv4 address).
     * 
     */
    @Export(name="ip", refs={String.class}, tree="[0]")
    private Output<String> ip;

    /**
     * @return IPv4 address of the server (IPv4 address).
     * 
     */
    public Output<String> ip() {
        return this.ip;
    }
    /**
     * The name of the server.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return The name of the server.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * The organization ID the server is associated with.
     * 
     */
    @Export(name="organizationId", refs={String.class}, tree="[0]")
    private Output<String> organizationId;

    /**
     * @return The organization ID the server is associated with.
     * 
     */
    public Output<String> organizationId() {
        return this.organizationId;
    }
    /**
     * `project_id`) The ID of the project the server is
     * associated with.
     * 
     */
    @Export(name="projectId", refs={String.class}, tree="[0]")
    private Output<String> projectId;

    /**
     * @return `project_id`) The ID of the project the server is
     * associated with.
     * 
     */
    public Output<String> projectId() {
        return this.projectId;
    }
    /**
     * The state of the server. Check the possible values on
     * our [sdk](https://github.com/scaleway/scaleway-sdk-go/blob/master/api/applesilicon/v1alpha1/applesilicon_sdk.go#L103).
     * 
     */
    @Export(name="state", refs={String.class}, tree="[0]")
    private Output<String> state;

    /**
     * @return The state of the server. Check the possible values on
     * our [sdk](https://github.com/scaleway/scaleway-sdk-go/blob/master/api/applesilicon/v1alpha1/applesilicon_sdk.go#L103).
     * 
     */
    public Output<String> state() {
        return this.state;
    }
    /**
     * The commercial type of the server. You find all the available types on
     * the [pricing page](https://www.scaleway.com/en/pricing/#apple-silicon). Updates to this field will recreate a new
     * resource.
     * 
     */
    @Export(name="type", refs={String.class}, tree="[0]")
    private Output<String> type;

    /**
     * @return The commercial type of the server. You find all the available types on
     * the [pricing page](https://www.scaleway.com/en/pricing/#apple-silicon). Updates to this field will recreate a new
     * resource.
     * 
     */
    public Output<String> type() {
        return this.type;
    }
    /**
     * The date and time of the last update of the Apple Silicon server.
     * 
     */
    @Export(name="updatedAt", refs={String.class}, tree="[0]")
    private Output<String> updatedAt;

    /**
     * @return The date and time of the last update of the Apple Silicon server.
     * 
     */
    public Output<String> updatedAt() {
        return this.updatedAt;
    }
    /**
     * URL of the VNC.
     * 
     */
    @Export(name="vncUrl", refs={String.class}, tree="[0]")
    private Output<String> vncUrl;

    /**
     * @return URL of the VNC.
     * 
     */
    public Output<String> vncUrl() {
        return this.vncUrl;
    }
    /**
     * `zone`) The zone in which
     * the server should be created.
     * 
     */
    @Export(name="zone", refs={String.class}, tree="[0]")
    private Output<String> zone;

    /**
     * @return `zone`) The zone in which
     * the server should be created.
     * 
     */
    public Output<String> zone() {
        return this.zone;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public AppleSliconValleyServer(String name) {
        this(name, AppleSliconValleyServerArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public AppleSliconValleyServer(String name, AppleSliconValleyServerArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public AppleSliconValleyServer(String name, AppleSliconValleyServerArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("scaleway:index/appleSliconValleyServer:AppleSliconValleyServer", name, args == null ? AppleSliconValleyServerArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private AppleSliconValleyServer(String name, Output<String> id, @Nullable AppleSliconValleyServerState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("scaleway:index/appleSliconValleyServer:AppleSliconValleyServer", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static AppleSliconValleyServer get(String name, Output<String> id, @Nullable AppleSliconValleyServerState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new AppleSliconValleyServer(name, id, state, options);
    }
}
