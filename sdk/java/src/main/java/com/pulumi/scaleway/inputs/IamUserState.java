// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.scaleway.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class IamUserState extends com.pulumi.resources.ResourceArgs {

    public static final IamUserState Empty = new IamUserState();

    /**
     * The ID of the account root user associated with the user.
     * 
     */
    @Import(name="accountRootUserId")
    private @Nullable Output<String> accountRootUserId;

    /**
     * @return The ID of the account root user associated with the user.
     * 
     */
    public Optional<Output<String>> accountRootUserId() {
        return Optional.ofNullable(this.accountRootUserId);
    }

    /**
     * The date and time of the creation of the iam user.
     * 
     */
    @Import(name="createdAt")
    private @Nullable Output<String> createdAt;

    /**
     * @return The date and time of the creation of the iam user.
     * 
     */
    public Optional<Output<String>> createdAt() {
        return Optional.ofNullable(this.createdAt);
    }

    /**
     * Whether the iam user is deletable.
     * 
     */
    @Import(name="deletable")
    private @Nullable Output<Boolean> deletable;

    /**
     * @return Whether the iam user is deletable.
     * 
     */
    public Optional<Output<Boolean>> deletable() {
        return Optional.ofNullable(this.deletable);
    }

    /**
     * The email of the IAM user.
     * 
     */
    @Import(name="email")
    private @Nullable Output<String> email;

    /**
     * @return The email of the IAM user.
     * 
     */
    public Optional<Output<String>> email() {
        return Optional.ofNullable(this.email);
    }

    /**
     * The date of the last login.
     * 
     */
    @Import(name="lastLoginAt")
    private @Nullable Output<String> lastLoginAt;

    /**
     * @return The date of the last login.
     * 
     */
    public Optional<Output<String>> lastLoginAt() {
        return Optional.ofNullable(this.lastLoginAt);
    }

    /**
     * Whether the MFA is enabled.
     * 
     */
    @Import(name="mfa")
    private @Nullable Output<Boolean> mfa;

    /**
     * @return Whether the MFA is enabled.
     * 
     */
    public Optional<Output<Boolean>> mfa() {
        return Optional.ofNullable(this.mfa);
    }

    /**
     * `organization_id`) The ID of the organization the user is associated with.
     * 
     */
    @Import(name="organizationId")
    private @Nullable Output<String> organizationId;

    /**
     * @return `organization_id`) The ID of the organization the user is associated with.
     * 
     */
    public Optional<Output<String>> organizationId() {
        return Optional.ofNullable(this.organizationId);
    }

    /**
     * The status of user invitation. Check the possible values in the [api doc](https://www.scaleway.com/en/developers/api/iam/#path-users-get-a-given-user).
     * 
     */
    @Import(name="status")
    private @Nullable Output<String> status;

    /**
     * @return The status of user invitation. Check the possible values in the [api doc](https://www.scaleway.com/en/developers/api/iam/#path-users-get-a-given-user).
     * 
     */
    public Optional<Output<String>> status() {
        return Optional.ofNullable(this.status);
    }

    /**
     * The type of user. Check the possible values in the [api doc](https://www.scaleway.com/en/developers/api/iam/#path-users-get-a-given-user).
     * 
     */
    @Import(name="type")
    private @Nullable Output<String> type;

    /**
     * @return The type of user. Check the possible values in the [api doc](https://www.scaleway.com/en/developers/api/iam/#path-users-get-a-given-user).
     * 
     */
    public Optional<Output<String>> type() {
        return Optional.ofNullable(this.type);
    }

    /**
     * The date and time of the last update of the iam user.
     * 
     */
    @Import(name="updatedAt")
    private @Nullable Output<String> updatedAt;

    /**
     * @return The date and time of the last update of the iam user.
     * 
     */
    public Optional<Output<String>> updatedAt() {
        return Optional.ofNullable(this.updatedAt);
    }

    private IamUserState() {}

    private IamUserState(IamUserState $) {
        this.accountRootUserId = $.accountRootUserId;
        this.createdAt = $.createdAt;
        this.deletable = $.deletable;
        this.email = $.email;
        this.lastLoginAt = $.lastLoginAt;
        this.mfa = $.mfa;
        this.organizationId = $.organizationId;
        this.status = $.status;
        this.type = $.type;
        this.updatedAt = $.updatedAt;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(IamUserState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private IamUserState $;

        public Builder() {
            $ = new IamUserState();
        }

        public Builder(IamUserState defaults) {
            $ = new IamUserState(Objects.requireNonNull(defaults));
        }

        /**
         * @param accountRootUserId The ID of the account root user associated with the user.
         * 
         * @return builder
         * 
         */
        public Builder accountRootUserId(@Nullable Output<String> accountRootUserId) {
            $.accountRootUserId = accountRootUserId;
            return this;
        }

        /**
         * @param accountRootUserId The ID of the account root user associated with the user.
         * 
         * @return builder
         * 
         */
        public Builder accountRootUserId(String accountRootUserId) {
            return accountRootUserId(Output.of(accountRootUserId));
        }

        /**
         * @param createdAt The date and time of the creation of the iam user.
         * 
         * @return builder
         * 
         */
        public Builder createdAt(@Nullable Output<String> createdAt) {
            $.createdAt = createdAt;
            return this;
        }

        /**
         * @param createdAt The date and time of the creation of the iam user.
         * 
         * @return builder
         * 
         */
        public Builder createdAt(String createdAt) {
            return createdAt(Output.of(createdAt));
        }

        /**
         * @param deletable Whether the iam user is deletable.
         * 
         * @return builder
         * 
         */
        public Builder deletable(@Nullable Output<Boolean> deletable) {
            $.deletable = deletable;
            return this;
        }

        /**
         * @param deletable Whether the iam user is deletable.
         * 
         * @return builder
         * 
         */
        public Builder deletable(Boolean deletable) {
            return deletable(Output.of(deletable));
        }

        /**
         * @param email The email of the IAM user.
         * 
         * @return builder
         * 
         */
        public Builder email(@Nullable Output<String> email) {
            $.email = email;
            return this;
        }

        /**
         * @param email The email of the IAM user.
         * 
         * @return builder
         * 
         */
        public Builder email(String email) {
            return email(Output.of(email));
        }

        /**
         * @param lastLoginAt The date of the last login.
         * 
         * @return builder
         * 
         */
        public Builder lastLoginAt(@Nullable Output<String> lastLoginAt) {
            $.lastLoginAt = lastLoginAt;
            return this;
        }

        /**
         * @param lastLoginAt The date of the last login.
         * 
         * @return builder
         * 
         */
        public Builder lastLoginAt(String lastLoginAt) {
            return lastLoginAt(Output.of(lastLoginAt));
        }

        /**
         * @param mfa Whether the MFA is enabled.
         * 
         * @return builder
         * 
         */
        public Builder mfa(@Nullable Output<Boolean> mfa) {
            $.mfa = mfa;
            return this;
        }

        /**
         * @param mfa Whether the MFA is enabled.
         * 
         * @return builder
         * 
         */
        public Builder mfa(Boolean mfa) {
            return mfa(Output.of(mfa));
        }

        /**
         * @param organizationId `organization_id`) The ID of the organization the user is associated with.
         * 
         * @return builder
         * 
         */
        public Builder organizationId(@Nullable Output<String> organizationId) {
            $.organizationId = organizationId;
            return this;
        }

        /**
         * @param organizationId `organization_id`) The ID of the organization the user is associated with.
         * 
         * @return builder
         * 
         */
        public Builder organizationId(String organizationId) {
            return organizationId(Output.of(organizationId));
        }

        /**
         * @param status The status of user invitation. Check the possible values in the [api doc](https://www.scaleway.com/en/developers/api/iam/#path-users-get-a-given-user).
         * 
         * @return builder
         * 
         */
        public Builder status(@Nullable Output<String> status) {
            $.status = status;
            return this;
        }

        /**
         * @param status The status of user invitation. Check the possible values in the [api doc](https://www.scaleway.com/en/developers/api/iam/#path-users-get-a-given-user).
         * 
         * @return builder
         * 
         */
        public Builder status(String status) {
            return status(Output.of(status));
        }

        /**
         * @param type The type of user. Check the possible values in the [api doc](https://www.scaleway.com/en/developers/api/iam/#path-users-get-a-given-user).
         * 
         * @return builder
         * 
         */
        public Builder type(@Nullable Output<String> type) {
            $.type = type;
            return this;
        }

        /**
         * @param type The type of user. Check the possible values in the [api doc](https://www.scaleway.com/en/developers/api/iam/#path-users-get-a-given-user).
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            return type(Output.of(type));
        }

        /**
         * @param updatedAt The date and time of the last update of the iam user.
         * 
         * @return builder
         * 
         */
        public Builder updatedAt(@Nullable Output<String> updatedAt) {
            $.updatedAt = updatedAt;
            return this;
        }

        /**
         * @param updatedAt The date and time of the last update of the iam user.
         * 
         * @return builder
         * 
         */
        public Builder updatedAt(String updatedAt) {
            return updatedAt(Output.of(updatedAt));
        }

        public IamUserState build() {
            return $;
        }
    }

}
