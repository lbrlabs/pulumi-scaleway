// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.scaleway.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class InstanceServerPublicIpArgs extends com.pulumi.resources.ResourceArgs {

    public static final InstanceServerPublicIpArgs Empty = new InstanceServerPublicIpArgs();

    /**
     * The address of the IP
     * 
     */
    @Import(name="address")
    private @Nullable Output<String> address;

    /**
     * @return The address of the IP
     * 
     */
    public Optional<Output<String>> address() {
        return Optional.ofNullable(this.address);
    }

    /**
     * The ID of the IP
     * 
     */
    @Import(name="id")
    private @Nullable Output<String> id;

    /**
     * @return The ID of the IP
     * 
     */
    public Optional<Output<String>> id() {
        return Optional.ofNullable(this.id);
    }

    private InstanceServerPublicIpArgs() {}

    private InstanceServerPublicIpArgs(InstanceServerPublicIpArgs $) {
        this.address = $.address;
        this.id = $.id;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(InstanceServerPublicIpArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private InstanceServerPublicIpArgs $;

        public Builder() {
            $ = new InstanceServerPublicIpArgs();
        }

        public Builder(InstanceServerPublicIpArgs defaults) {
            $ = new InstanceServerPublicIpArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param address The address of the IP
         * 
         * @return builder
         * 
         */
        public Builder address(@Nullable Output<String> address) {
            $.address = address;
            return this;
        }

        /**
         * @param address The address of the IP
         * 
         * @return builder
         * 
         */
        public Builder address(String address) {
            return address(Output.of(address));
        }

        /**
         * @param id The ID of the IP
         * 
         * @return builder
         * 
         */
        public Builder id(@Nullable Output<String> id) {
            $.id = id;
            return this;
        }

        /**
         * @param id The ID of the IP
         * 
         * @return builder
         * 
         */
        public Builder id(String id) {
            return id(Output.of(id));
        }

        public InstanceServerPublicIpArgs build() {
            return $;
        }
    }

}
