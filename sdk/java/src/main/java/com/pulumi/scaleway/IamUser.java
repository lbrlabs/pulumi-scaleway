// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.scaleway;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.scaleway.IamUserArgs;
import com.pulumi.scaleway.Utilities;
import com.pulumi.scaleway.inputs.IamUserState;
import java.lang.Boolean;
import java.lang.String;
import javax.annotation.Nullable;

/**
 * Creates and manages Scaleway IAM Users.
 * For more information, see [the documentation](https://www.scaleway.com/en/developers/api/iam/#path-users-list-users-of-an-organization).
 * 
 * ## Examples
 * 
 * ### Basic
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.scaleway.IamUser;
 * import com.pulumi.scaleway.IamUserArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var basic = new IamUser(&#34;basic&#34;, IamUserArgs.builder()        
 *             .email(&#34;test@test.com&#34;)
 *             .build());
 * 
 *     }
 * }
 * ```
 * 
 * ## Import
 * 
 * IAM users can be imported using the `{id}`, e.g. bash
 * 
 * ```sh
 *  $ pulumi import scaleway:index/iamUser:IamUser basic 11111111-1111-1111-1111-111111111111
 * ```
 * 
 */
@ResourceType(type="scaleway:index/iamUser:IamUser")
public class IamUser extends com.pulumi.resources.CustomResource {
    /**
     * The ID of the account root user associated with the user.
     * 
     */
    @Export(name="accountRootUserId", refs={String.class}, tree="[0]")
    private Output<String> accountRootUserId;

    /**
     * @return The ID of the account root user associated with the user.
     * 
     */
    public Output<String> accountRootUserId() {
        return this.accountRootUserId;
    }
    /**
     * The date and time of the creation of the iam user.
     * 
     */
    @Export(name="createdAt", refs={String.class}, tree="[0]")
    private Output<String> createdAt;

    /**
     * @return The date and time of the creation of the iam user.
     * 
     */
    public Output<String> createdAt() {
        return this.createdAt;
    }
    /**
     * Whether the iam user is deletable.
     * 
     */
    @Export(name="deletable", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> deletable;

    /**
     * @return Whether the iam user is deletable.
     * 
     */
    public Output<Boolean> deletable() {
        return this.deletable;
    }
    /**
     * The email of the IAM user.
     * 
     */
    @Export(name="email", refs={String.class}, tree="[0]")
    private Output<String> email;

    /**
     * @return The email of the IAM user.
     * 
     */
    public Output<String> email() {
        return this.email;
    }
    /**
     * The date of the last login.
     * 
     */
    @Export(name="lastLoginAt", refs={String.class}, tree="[0]")
    private Output<String> lastLoginAt;

    /**
     * @return The date of the last login.
     * 
     */
    public Output<String> lastLoginAt() {
        return this.lastLoginAt;
    }
    /**
     * Whether the MFA is enabled.
     * 
     */
    @Export(name="mfa", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> mfa;

    /**
     * @return Whether the MFA is enabled.
     * 
     */
    public Output<Boolean> mfa() {
        return this.mfa;
    }
    /**
     * `organization_id`) The ID of the organization the user is associated with.
     * 
     */
    @Export(name="organizationId", refs={String.class}, tree="[0]")
    private Output<String> organizationId;

    /**
     * @return `organization_id`) The ID of the organization the user is associated with.
     * 
     */
    public Output<String> organizationId() {
        return this.organizationId;
    }
    /**
     * The status of user invitation. Check the possible values in the [api doc](https://www.scaleway.com/en/developers/api/iam/#path-users-get-a-given-user).
     * 
     */
    @Export(name="status", refs={String.class}, tree="[0]")
    private Output<String> status;

    /**
     * @return The status of user invitation. Check the possible values in the [api doc](https://www.scaleway.com/en/developers/api/iam/#path-users-get-a-given-user).
     * 
     */
    public Output<String> status() {
        return this.status;
    }
    /**
     * The type of user. Check the possible values in the [api doc](https://www.scaleway.com/en/developers/api/iam/#path-users-get-a-given-user).
     * 
     */
    @Export(name="type", refs={String.class}, tree="[0]")
    private Output<String> type;

    /**
     * @return The type of user. Check the possible values in the [api doc](https://www.scaleway.com/en/developers/api/iam/#path-users-get-a-given-user).
     * 
     */
    public Output<String> type() {
        return this.type;
    }
    /**
     * The date and time of the last update of the iam user.
     * 
     */
    @Export(name="updatedAt", refs={String.class}, tree="[0]")
    private Output<String> updatedAt;

    /**
     * @return The date and time of the last update of the iam user.
     * 
     */
    public Output<String> updatedAt() {
        return this.updatedAt;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public IamUser(String name) {
        this(name, IamUserArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public IamUser(String name, IamUserArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public IamUser(String name, IamUserArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("scaleway:index/iamUser:IamUser", name, args == null ? IamUserArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private IamUser(String name, Output<String> id, @Nullable IamUserState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("scaleway:index/iamUser:IamUser", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static IamUser get(String name, Output<String> id, @Nullable IamUserState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new IamUser(name, id, state, options);
    }
}
