// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.scaleway.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.scaleway.outputs.GetFlexibleIpsIpMacAddress;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetFlexibleIpsIp {
    /**
     * @return The date on which the flexible IP was created (RFC 3339 format).
     * 
     */
    private String createdAt;
    /**
     * @return The description of the flexible IP.
     * 
     */
    private String description;
    /**
     * @return The MAC address ID.
     * 
     */
    private String id;
    private String ipAddress;
    /**
     * @return The MAC address of the Virtual MAC.
     * 
     */
    private List<GetFlexibleIpsIpMacAddress> macAddresses;
    /**
     * @return (Defaults to provider `organization_id`) The ID of the organization the IP is in.
     * 
     */
    private String organizationId;
    /**
     * @return (Defaults to provider `project_id`) The ID of the project the IP is in.
     * 
     */
    private String projectId;
    /**
     * @return The reverse domain associated with this IP.
     * 
     */
    private String reverse;
    /**
     * @return The status of virtual MAC.
     * 
     */
    private String status;
    /**
     * @return List of tags used as filter. IPs with these exact tags are listed.
     * 
     */
    private List<String> tags;
    /**
     * @return The date on which the flexible IP was last updated (RFC 3339 format).
     * 
     */
    private String updatedAt;
    /**
     * @return `zone`) The zone in which IPs exist.
     * 
     */
    private String zone;

    private GetFlexibleIpsIp() {}
    /**
     * @return The date on which the flexible IP was created (RFC 3339 format).
     * 
     */
    public String createdAt() {
        return this.createdAt;
    }
    /**
     * @return The description of the flexible IP.
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return The MAC address ID.
     * 
     */
    public String id() {
        return this.id;
    }
    public String ipAddress() {
        return this.ipAddress;
    }
    /**
     * @return The MAC address of the Virtual MAC.
     * 
     */
    public List<GetFlexibleIpsIpMacAddress> macAddresses() {
        return this.macAddresses;
    }
    /**
     * @return (Defaults to provider `organization_id`) The ID of the organization the IP is in.
     * 
     */
    public String organizationId() {
        return this.organizationId;
    }
    /**
     * @return (Defaults to provider `project_id`) The ID of the project the IP is in.
     * 
     */
    public String projectId() {
        return this.projectId;
    }
    /**
     * @return The reverse domain associated with this IP.
     * 
     */
    public String reverse() {
        return this.reverse;
    }
    /**
     * @return The status of virtual MAC.
     * 
     */
    public String status() {
        return this.status;
    }
    /**
     * @return List of tags used as filter. IPs with these exact tags are listed.
     * 
     */
    public List<String> tags() {
        return this.tags;
    }
    /**
     * @return The date on which the flexible IP was last updated (RFC 3339 format).
     * 
     */
    public String updatedAt() {
        return this.updatedAt;
    }
    /**
     * @return `zone`) The zone in which IPs exist.
     * 
     */
    public String zone() {
        return this.zone;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetFlexibleIpsIp defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String createdAt;
        private String description;
        private String id;
        private String ipAddress;
        private List<GetFlexibleIpsIpMacAddress> macAddresses;
        private String organizationId;
        private String projectId;
        private String reverse;
        private String status;
        private List<String> tags;
        private String updatedAt;
        private String zone;
        public Builder() {}
        public Builder(GetFlexibleIpsIp defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.createdAt = defaults.createdAt;
    	      this.description = defaults.description;
    	      this.id = defaults.id;
    	      this.ipAddress = defaults.ipAddress;
    	      this.macAddresses = defaults.macAddresses;
    	      this.organizationId = defaults.organizationId;
    	      this.projectId = defaults.projectId;
    	      this.reverse = defaults.reverse;
    	      this.status = defaults.status;
    	      this.tags = defaults.tags;
    	      this.updatedAt = defaults.updatedAt;
    	      this.zone = defaults.zone;
        }

        @CustomType.Setter
        public Builder createdAt(String createdAt) {
            this.createdAt = Objects.requireNonNull(createdAt);
            return this;
        }
        @CustomType.Setter
        public Builder description(String description) {
            this.description = Objects.requireNonNull(description);
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder ipAddress(String ipAddress) {
            this.ipAddress = Objects.requireNonNull(ipAddress);
            return this;
        }
        @CustomType.Setter
        public Builder macAddresses(List<GetFlexibleIpsIpMacAddress> macAddresses) {
            this.macAddresses = Objects.requireNonNull(macAddresses);
            return this;
        }
        public Builder macAddresses(GetFlexibleIpsIpMacAddress... macAddresses) {
            return macAddresses(List.of(macAddresses));
        }
        @CustomType.Setter
        public Builder organizationId(String organizationId) {
            this.organizationId = Objects.requireNonNull(organizationId);
            return this;
        }
        @CustomType.Setter
        public Builder projectId(String projectId) {
            this.projectId = Objects.requireNonNull(projectId);
            return this;
        }
        @CustomType.Setter
        public Builder reverse(String reverse) {
            this.reverse = Objects.requireNonNull(reverse);
            return this;
        }
        @CustomType.Setter
        public Builder status(String status) {
            this.status = Objects.requireNonNull(status);
            return this;
        }
        @CustomType.Setter
        public Builder tags(List<String> tags) {
            this.tags = Objects.requireNonNull(tags);
            return this;
        }
        public Builder tags(String... tags) {
            return tags(List.of(tags));
        }
        @CustomType.Setter
        public Builder updatedAt(String updatedAt) {
            this.updatedAt = Objects.requireNonNull(updatedAt);
            return this;
        }
        @CustomType.Setter
        public Builder zone(String zone) {
            this.zone = Objects.requireNonNull(zone);
            return this;
        }
        public GetFlexibleIpsIp build() {
            final var o = new GetFlexibleIpsIp();
            o.createdAt = createdAt;
            o.description = description;
            o.id = id;
            o.ipAddress = ipAddress;
            o.macAddresses = macAddresses;
            o.organizationId = organizationId;
            o.projectId = projectId;
            o.reverse = reverse;
            o.status = status;
            o.tags = tags;
            o.updatedAt = updatedAt;
            o.zone = zone;
            return o;
        }
    }
}
