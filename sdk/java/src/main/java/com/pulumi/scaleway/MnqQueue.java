// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.scaleway;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.scaleway.MnqQueueArgs;
import com.pulumi.scaleway.Utilities;
import com.pulumi.scaleway.inputs.MnqQueueState;
import com.pulumi.scaleway.outputs.MnqQueueNats;
import com.pulumi.scaleway.outputs.MnqQueueSqs;
import java.lang.Integer;
import java.lang.String;
import java.util.Optional;
import javax.annotation.Nullable;

@ResourceType(type="scaleway:index/mnqQueue:MnqQueue")
public class MnqQueue extends com.pulumi.resources.CustomResource {
    /**
     * The number of seconds the queue retains a message.
     * 
     */
    @Export(name="messageMaxAge", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> messageMaxAge;

    /**
     * @return The number of seconds the queue retains a message.
     * 
     */
    public Output<Optional<Integer>> messageMaxAge() {
        return Codegen.optional(this.messageMaxAge);
    }
    /**
     * The maximum size of a message. Should be in bytes.
     * 
     */
    @Export(name="messageMaxSize", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> messageMaxSize;

    /**
     * @return The maximum size of a message. Should be in bytes.
     * 
     */
    public Output<Optional<Integer>> messageMaxSize() {
        return Codegen.optional(this.messageMaxSize);
    }
    /**
     * The name of the queue. Conflicts with name_prefix.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return The name of the queue. Conflicts with name_prefix.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * Creates a unique name beginning with the specified prefix. Conflicts with name.
     * 
     */
    @Export(name="namePrefix", refs={String.class}, tree="[0]")
    private Output<String> namePrefix;

    /**
     * @return Creates a unique name beginning with the specified prefix. Conflicts with name.
     * 
     */
    public Output<String> namePrefix() {
        return this.namePrefix;
    }
    /**
     * The ID of the Namespace associated to
     * 
     */
    @Export(name="namespaceId", refs={String.class}, tree="[0]")
    private Output<String> namespaceId;

    /**
     * @return The ID of the Namespace associated to
     * 
     */
    public Output<String> namespaceId() {
        return this.namespaceId;
    }
    /**
     * The NATS attributes of the queue
     * 
     */
    @Export(name="nats", refs={MnqQueueNats.class}, tree="[0]")
    private Output</* @Nullable */ MnqQueueNats> nats;

    /**
     * @return The NATS attributes of the queue
     * 
     */
    public Output<Optional<MnqQueueNats>> nats() {
        return Codegen.optional(this.nats);
    }
    /**
     * The SQS attributes of the queue
     * 
     */
    @Export(name="sqs", refs={MnqQueueSqs.class}, tree="[0]")
    private Output</* @Nullable */ MnqQueueSqs> sqs;

    /**
     * @return The SQS attributes of the queue
     * 
     */
    public Output<Optional<MnqQueueSqs>> sqs() {
        return Codegen.optional(this.sqs);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public MnqQueue(String name) {
        this(name, MnqQueueArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public MnqQueue(String name, MnqQueueArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public MnqQueue(String name, MnqQueueArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("scaleway:index/mnqQueue:MnqQueue", name, args == null ? MnqQueueArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private MnqQueue(String name, Output<String> id, @Nullable MnqQueueState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("scaleway:index/mnqQueue:MnqQueue", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static MnqQueue get(String name, Output<String> id, @Nullable MnqQueueState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new MnqQueue(name, id, state, options);
    }
}
