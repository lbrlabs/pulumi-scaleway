// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.scaleway.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class TemDomainReputationArgs extends com.pulumi.resources.ResourceArgs {

    public static final TemDomainReputationArgs Empty = new TemDomainReputationArgs();

    /**
     * The previously-calculated domain&#39;s reputation score.
     * 
     */
    @Import(name="previousScore")
    private @Nullable Output<Integer> previousScore;

    /**
     * @return The previously-calculated domain&#39;s reputation score.
     * 
     */
    public Optional<Output<Integer>> previousScore() {
        return Optional.ofNullable(this.previousScore);
    }

    /**
     * The time and date the previous reputation score was calculated.
     * 
     */
    @Import(name="previousScoredAt")
    private @Nullable Output<String> previousScoredAt;

    /**
     * @return The time and date the previous reputation score was calculated.
     * 
     */
    public Optional<Output<String>> previousScoredAt() {
        return Optional.ofNullable(this.previousScoredAt);
    }

    /**
     * A range from 0 to 100 that determines your domain&#39;s reputation score.
     * 
     */
    @Import(name="score")
    private @Nullable Output<Integer> score;

    /**
     * @return A range from 0 to 100 that determines your domain&#39;s reputation score.
     * 
     */
    public Optional<Output<Integer>> score() {
        return Optional.ofNullable(this.score);
    }

    /**
     * The time and date the score was calculated.
     * 
     */
    @Import(name="scoredAt")
    private @Nullable Output<String> scoredAt;

    /**
     * @return The time and date the score was calculated.
     * 
     */
    public Optional<Output<String>> scoredAt() {
        return Optional.ofNullable(this.scoredAt);
    }

    /**
     * The status of the domain&#39;s reputation.
     * 
     */
    @Import(name="status")
    private @Nullable Output<String> status;

    /**
     * @return The status of the domain&#39;s reputation.
     * 
     */
    public Optional<Output<String>> status() {
        return Optional.ofNullable(this.status);
    }

    private TemDomainReputationArgs() {}

    private TemDomainReputationArgs(TemDomainReputationArgs $) {
        this.previousScore = $.previousScore;
        this.previousScoredAt = $.previousScoredAt;
        this.score = $.score;
        this.scoredAt = $.scoredAt;
        this.status = $.status;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(TemDomainReputationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private TemDomainReputationArgs $;

        public Builder() {
            $ = new TemDomainReputationArgs();
        }

        public Builder(TemDomainReputationArgs defaults) {
            $ = new TemDomainReputationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param previousScore The previously-calculated domain&#39;s reputation score.
         * 
         * @return builder
         * 
         */
        public Builder previousScore(@Nullable Output<Integer> previousScore) {
            $.previousScore = previousScore;
            return this;
        }

        /**
         * @param previousScore The previously-calculated domain&#39;s reputation score.
         * 
         * @return builder
         * 
         */
        public Builder previousScore(Integer previousScore) {
            return previousScore(Output.of(previousScore));
        }

        /**
         * @param previousScoredAt The time and date the previous reputation score was calculated.
         * 
         * @return builder
         * 
         */
        public Builder previousScoredAt(@Nullable Output<String> previousScoredAt) {
            $.previousScoredAt = previousScoredAt;
            return this;
        }

        /**
         * @param previousScoredAt The time and date the previous reputation score was calculated.
         * 
         * @return builder
         * 
         */
        public Builder previousScoredAt(String previousScoredAt) {
            return previousScoredAt(Output.of(previousScoredAt));
        }

        /**
         * @param score A range from 0 to 100 that determines your domain&#39;s reputation score.
         * 
         * @return builder
         * 
         */
        public Builder score(@Nullable Output<Integer> score) {
            $.score = score;
            return this;
        }

        /**
         * @param score A range from 0 to 100 that determines your domain&#39;s reputation score.
         * 
         * @return builder
         * 
         */
        public Builder score(Integer score) {
            return score(Output.of(score));
        }

        /**
         * @param scoredAt The time and date the score was calculated.
         * 
         * @return builder
         * 
         */
        public Builder scoredAt(@Nullable Output<String> scoredAt) {
            $.scoredAt = scoredAt;
            return this;
        }

        /**
         * @param scoredAt The time and date the score was calculated.
         * 
         * @return builder
         * 
         */
        public Builder scoredAt(String scoredAt) {
            return scoredAt(Output.of(scoredAt));
        }

        /**
         * @param status The status of the domain&#39;s reputation.
         * 
         * @return builder
         * 
         */
        public Builder status(@Nullable Output<String> status) {
            $.status = status;
            return this;
        }

        /**
         * @param status The status of the domain&#39;s reputation.
         * 
         * @return builder
         * 
         */
        public Builder status(String status) {
            return status(Output.of(status));
        }

        public TemDomainReputationArgs build() {
            return $;
        }
    }

}
