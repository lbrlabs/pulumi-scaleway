// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.scaleway.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.scaleway.outputs.GetVpcsVpc;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetVpcsResult {
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    private @Nullable String name;
    /**
     * @return The organization ID the VPC is associated with.
     * 
     */
    private String organizationId;
    /**
     * @return The ID of the project the VPC is associated with.
     * 
     */
    private String projectId;
    private String region;
    private @Nullable List<String> tags;
    /**
     * @return List of found vpcs
     * 
     */
    private List<GetVpcsVpc> vpcs;

    private GetVpcsResult() {}
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }
    /**
     * @return The organization ID the VPC is associated with.
     * 
     */
    public String organizationId() {
        return this.organizationId;
    }
    /**
     * @return The ID of the project the VPC is associated with.
     * 
     */
    public String projectId() {
        return this.projectId;
    }
    public String region() {
        return this.region;
    }
    public List<String> tags() {
        return this.tags == null ? List.of() : this.tags;
    }
    /**
     * @return List of found vpcs
     * 
     */
    public List<GetVpcsVpc> vpcs() {
        return this.vpcs;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetVpcsResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String id;
        private @Nullable String name;
        private String organizationId;
        private String projectId;
        private String region;
        private @Nullable List<String> tags;
        private List<GetVpcsVpc> vpcs;
        public Builder() {}
        public Builder(GetVpcsResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.id = defaults.id;
    	      this.name = defaults.name;
    	      this.organizationId = defaults.organizationId;
    	      this.projectId = defaults.projectId;
    	      this.region = defaults.region;
    	      this.tags = defaults.tags;
    	      this.vpcs = defaults.vpcs;
        }

        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder name(@Nullable String name) {
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder organizationId(String organizationId) {
            this.organizationId = Objects.requireNonNull(organizationId);
            return this;
        }
        @CustomType.Setter
        public Builder projectId(String projectId) {
            this.projectId = Objects.requireNonNull(projectId);
            return this;
        }
        @CustomType.Setter
        public Builder region(String region) {
            this.region = Objects.requireNonNull(region);
            return this;
        }
        @CustomType.Setter
        public Builder tags(@Nullable List<String> tags) {
            this.tags = tags;
            return this;
        }
        public Builder tags(String... tags) {
            return tags(List.of(tags));
        }
        @CustomType.Setter
        public Builder vpcs(List<GetVpcsVpc> vpcs) {
            this.vpcs = Objects.requireNonNull(vpcs);
            return this;
        }
        public Builder vpcs(GetVpcsVpc... vpcs) {
            return vpcs(List.of(vpcs));
        }
        public GetVpcsResult build() {
            final var o = new GetVpcsResult();
            o.id = id;
            o.name = name;
            o.organizationId = organizationId;
            o.projectId = projectId;
            o.region = region;
            o.tags = tags;
            o.vpcs = vpcs;
            return o;
        }
    }
}
