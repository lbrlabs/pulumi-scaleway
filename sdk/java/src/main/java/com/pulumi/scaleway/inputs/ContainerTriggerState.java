// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.scaleway.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.scaleway.inputs.ContainerTriggerNatsArgs;
import com.pulumi.scaleway.inputs.ContainerTriggerSqsArgs;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ContainerTriggerState extends com.pulumi.resources.ResourceArgs {

    public static final ContainerTriggerState Empty = new ContainerTriggerState();

    /**
     * The ID of the container to create a trigger for
     * 
     */
    @Import(name="containerId")
    private @Nullable Output<String> containerId;

    /**
     * @return The ID of the container to create a trigger for
     * 
     */
    public Optional<Output<String>> containerId() {
        return Optional.ofNullable(this.containerId);
    }

    /**
     * The description of the trigger.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return The description of the trigger.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * The unique name of the trigger. Default to a generated name.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The unique name of the trigger. Default to a generated name.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The configuration for the Scaleway&#39;s Nats used by the trigger
     * 
     */
    @Import(name="nats")
    private @Nullable Output<ContainerTriggerNatsArgs> nats;

    /**
     * @return The configuration for the Scaleway&#39;s Nats used by the trigger
     * 
     */
    public Optional<Output<ContainerTriggerNatsArgs>> nats() {
        return Optional.ofNullable(this.nats);
    }

    /**
     * `region`). The region in which the namespace should be created.
     * 
     */
    @Import(name="region")
    private @Nullable Output<String> region;

    /**
     * @return `region`). The region in which the namespace should be created.
     * 
     */
    public Optional<Output<String>> region() {
        return Optional.ofNullable(this.region);
    }

    /**
     * The configuration of the Scaleway&#39;s SQS used by the trigger
     * 
     */
    @Import(name="sqs")
    private @Nullable Output<ContainerTriggerSqsArgs> sqs;

    /**
     * @return The configuration of the Scaleway&#39;s SQS used by the trigger
     * 
     */
    public Optional<Output<ContainerTriggerSqsArgs>> sqs() {
        return Optional.ofNullable(this.sqs);
    }

    private ContainerTriggerState() {}

    private ContainerTriggerState(ContainerTriggerState $) {
        this.containerId = $.containerId;
        this.description = $.description;
        this.name = $.name;
        this.nats = $.nats;
        this.region = $.region;
        this.sqs = $.sqs;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ContainerTriggerState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ContainerTriggerState $;

        public Builder() {
            $ = new ContainerTriggerState();
        }

        public Builder(ContainerTriggerState defaults) {
            $ = new ContainerTriggerState(Objects.requireNonNull(defaults));
        }

        /**
         * @param containerId The ID of the container to create a trigger for
         * 
         * @return builder
         * 
         */
        public Builder containerId(@Nullable Output<String> containerId) {
            $.containerId = containerId;
            return this;
        }

        /**
         * @param containerId The ID of the container to create a trigger for
         * 
         * @return builder
         * 
         */
        public Builder containerId(String containerId) {
            return containerId(Output.of(containerId));
        }

        /**
         * @param description The description of the trigger.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description The description of the trigger.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param name The unique name of the trigger. Default to a generated name.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The unique name of the trigger. Default to a generated name.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param nats The configuration for the Scaleway&#39;s Nats used by the trigger
         * 
         * @return builder
         * 
         */
        public Builder nats(@Nullable Output<ContainerTriggerNatsArgs> nats) {
            $.nats = nats;
            return this;
        }

        /**
         * @param nats The configuration for the Scaleway&#39;s Nats used by the trigger
         * 
         * @return builder
         * 
         */
        public Builder nats(ContainerTriggerNatsArgs nats) {
            return nats(Output.of(nats));
        }

        /**
         * @param region `region`). The region in which the namespace should be created.
         * 
         * @return builder
         * 
         */
        public Builder region(@Nullable Output<String> region) {
            $.region = region;
            return this;
        }

        /**
         * @param region `region`). The region in which the namespace should be created.
         * 
         * @return builder
         * 
         */
        public Builder region(String region) {
            return region(Output.of(region));
        }

        /**
         * @param sqs The configuration of the Scaleway&#39;s SQS used by the trigger
         * 
         * @return builder
         * 
         */
        public Builder sqs(@Nullable Output<ContainerTriggerSqsArgs> sqs) {
            $.sqs = sqs;
            return this;
        }

        /**
         * @param sqs The configuration of the Scaleway&#39;s SQS used by the trigger
         * 
         * @return builder
         * 
         */
        public Builder sqs(ContainerTriggerSqsArgs sqs) {
            return sqs(Output.of(sqs));
        }

        public ContainerTriggerState build() {
            return $;
        }
    }

}
