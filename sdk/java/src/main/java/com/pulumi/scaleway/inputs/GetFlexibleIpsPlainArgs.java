// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.scaleway.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetFlexibleIpsPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetFlexibleIpsPlainArgs Empty = new GetFlexibleIpsPlainArgs();

    /**
     * (Defaults to provider `project_id`) The ID of the project the IP is in.
     * 
     */
    @Import(name="projectId")
    private @Nullable String projectId;

    /**
     * @return (Defaults to provider `project_id`) The ID of the project the IP is in.
     * 
     */
    public Optional<String> projectId() {
        return Optional.ofNullable(this.projectId);
    }

    /**
     * List of server IDs used as filter. IPs with these exact server IDs are listed.
     * 
     */
    @Import(name="serverIds")
    private @Nullable List<String> serverIds;

    /**
     * @return List of server IDs used as filter. IPs with these exact server IDs are listed.
     * 
     */
    public Optional<List<String>> serverIds() {
        return Optional.ofNullable(this.serverIds);
    }

    /**
     * List of tags used as filter. IPs with these exact tags are listed.
     * 
     */
    @Import(name="tags")
    private @Nullable List<String> tags;

    /**
     * @return List of tags used as filter. IPs with these exact tags are listed.
     * 
     */
    public Optional<List<String>> tags() {
        return Optional.ofNullable(this.tags);
    }

    /**
     * `zone`) The zone in which IPs exist.
     * 
     */
    @Import(name="zone")
    private @Nullable String zone;

    /**
     * @return `zone`) The zone in which IPs exist.
     * 
     */
    public Optional<String> zone() {
        return Optional.ofNullable(this.zone);
    }

    private GetFlexibleIpsPlainArgs() {}

    private GetFlexibleIpsPlainArgs(GetFlexibleIpsPlainArgs $) {
        this.projectId = $.projectId;
        this.serverIds = $.serverIds;
        this.tags = $.tags;
        this.zone = $.zone;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetFlexibleIpsPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetFlexibleIpsPlainArgs $;

        public Builder() {
            $ = new GetFlexibleIpsPlainArgs();
        }

        public Builder(GetFlexibleIpsPlainArgs defaults) {
            $ = new GetFlexibleIpsPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param projectId (Defaults to provider `project_id`) The ID of the project the IP is in.
         * 
         * @return builder
         * 
         */
        public Builder projectId(@Nullable String projectId) {
            $.projectId = projectId;
            return this;
        }

        /**
         * @param serverIds List of server IDs used as filter. IPs with these exact server IDs are listed.
         * 
         * @return builder
         * 
         */
        public Builder serverIds(@Nullable List<String> serverIds) {
            $.serverIds = serverIds;
            return this;
        }

        /**
         * @param serverIds List of server IDs used as filter. IPs with these exact server IDs are listed.
         * 
         * @return builder
         * 
         */
        public Builder serverIds(String... serverIds) {
            return serverIds(List.of(serverIds));
        }

        /**
         * @param tags List of tags used as filter. IPs with these exact tags are listed.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable List<String> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags List of tags used as filter. IPs with these exact tags are listed.
         * 
         * @return builder
         * 
         */
        public Builder tags(String... tags) {
            return tags(List.of(tags));
        }

        /**
         * @param zone `zone`) The zone in which IPs exist.
         * 
         * @return builder
         * 
         */
        public Builder zone(@Nullable String zone) {
            $.zone = zone;
            return this;
        }

        public GetFlexibleIpsPlainArgs build() {
            return $;
        }
    }

}
