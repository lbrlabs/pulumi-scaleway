// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.scaleway;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.scaleway.LoadbalancerCertificateArgs;
import com.pulumi.scaleway.Utilities;
import com.pulumi.scaleway.inputs.LoadbalancerCertificateState;
import com.pulumi.scaleway.outputs.LoadbalancerCertificateCustomCertificate;
import com.pulumi.scaleway.outputs.LoadbalancerCertificateLetsencrypt;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

@ResourceType(type="scaleway:index/loadbalancerCertificate:LoadbalancerCertificate")
public class LoadbalancerCertificate extends com.pulumi.resources.CustomResource {
    /**
     * Main domain of the certificate. A new certificate will be created if this field is changed.
     * 
     */
    @Export(name="commonName", refs={String.class}, tree="[0]")
    private Output<String> commonName;

    /**
     * @return Main domain of the certificate. A new certificate will be created if this field is changed.
     * 
     */
    public Output<String> commonName() {
        return this.commonName;
    }
    /**
     * Configuration block for custom certificate chain. Only one of `letsencrypt` and `custom_certificate` should be specified.
     * 
     */
    @Export(name="customCertificate", refs={LoadbalancerCertificateCustomCertificate.class}, tree="[0]")
    private Output</* @Nullable */ LoadbalancerCertificateCustomCertificate> customCertificate;

    /**
     * @return Configuration block for custom certificate chain. Only one of `letsencrypt` and `custom_certificate` should be specified.
     * 
     */
    public Output<Optional<LoadbalancerCertificateCustomCertificate>> customCertificate() {
        return Codegen.optional(this.customCertificate);
    }
    /**
     * The identifier (SHA-1) of the certificate
     * 
     */
    @Export(name="fingerprint", refs={String.class}, tree="[0]")
    private Output<String> fingerprint;

    /**
     * @return The identifier (SHA-1) of the certificate
     * 
     */
    public Output<String> fingerprint() {
        return this.fingerprint;
    }
    /**
     * The load-balancer ID this certificate is attached to.
     * 
     * &gt; **Important:** Updates to `lb_id` will recreate the load-balancer certificate.
     * 
     */
    @Export(name="lbId", refs={String.class}, tree="[0]")
    private Output<String> lbId;

    /**
     * @return The load-balancer ID this certificate is attached to.
     * 
     * &gt; **Important:** Updates to `lb_id` will recreate the load-balancer certificate.
     * 
     */
    public Output<String> lbId() {
        return this.lbId;
    }
    /**
     * Configuration block for Let&#39;s Encrypt configuration. Only one of `letsencrypt` and `custom_certificate` should be specified.
     * 
     */
    @Export(name="letsencrypt", refs={LoadbalancerCertificateLetsencrypt.class}, tree="[0]")
    private Output</* @Nullable */ LoadbalancerCertificateLetsencrypt> letsencrypt;

    /**
     * @return Configuration block for Let&#39;s Encrypt configuration. Only one of `letsencrypt` and `custom_certificate` should be specified.
     * 
     */
    public Output<Optional<LoadbalancerCertificateLetsencrypt>> letsencrypt() {
        return Codegen.optional(this.letsencrypt);
    }
    /**
     * The name of the certificate backend.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return The name of the certificate backend.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * The not valid after validity bound timestamp
     * 
     */
    @Export(name="notValidAfter", refs={String.class}, tree="[0]")
    private Output<String> notValidAfter;

    /**
     * @return The not valid after validity bound timestamp
     * 
     */
    public Output<String> notValidAfter() {
        return this.notValidAfter;
    }
    /**
     * The not valid before validity bound timestamp
     * 
     */
    @Export(name="notValidBefore", refs={String.class}, tree="[0]")
    private Output<String> notValidBefore;

    /**
     * @return The not valid before validity bound timestamp
     * 
     */
    public Output<String> notValidBefore() {
        return this.notValidBefore;
    }
    /**
     * Certificate status
     * 
     */
    @Export(name="status", refs={String.class}, tree="[0]")
    private Output<String> status;

    /**
     * @return Certificate status
     * 
     */
    public Output<String> status() {
        return this.status;
    }
    /**
     * Array of alternative domain names.  A new certificate will be created if this field is changed.
     * 
     * &gt; **Important:** Updates to `letsencrypt` will recreate the load-balancer certificate.
     * 
     */
    @Export(name="subjectAlternativeNames", refs={List.class,String.class}, tree="[0,1]")
    private Output<List<String>> subjectAlternativeNames;

    /**
     * @return Array of alternative domain names.  A new certificate will be created if this field is changed.
     * 
     * &gt; **Important:** Updates to `letsencrypt` will recreate the load-balancer certificate.
     * 
     */
    public Output<List<String>> subjectAlternativeNames() {
        return this.subjectAlternativeNames;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public LoadbalancerCertificate(String name) {
        this(name, LoadbalancerCertificateArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public LoadbalancerCertificate(String name, LoadbalancerCertificateArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public LoadbalancerCertificate(String name, LoadbalancerCertificateArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("scaleway:index/loadbalancerCertificate:LoadbalancerCertificate", name, args == null ? LoadbalancerCertificateArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private LoadbalancerCertificate(String name, Output<String> id, @Nullable LoadbalancerCertificateState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("scaleway:index/loadbalancerCertificate:LoadbalancerCertificate", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static LoadbalancerCertificate get(String name, Output<String> id, @Nullable LoadbalancerCertificateState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new LoadbalancerCertificate(name, id, state, options);
    }
}
