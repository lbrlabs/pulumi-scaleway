// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.scaleway.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.scaleway.inputs.LoadbalancerFrontendAclActionArgs;
import com.pulumi.scaleway.inputs.LoadbalancerFrontendAclMatchArgs;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class LoadbalancerFrontendAclArgs extends com.pulumi.resources.ResourceArgs {

    public static final LoadbalancerFrontendAclArgs Empty = new LoadbalancerFrontendAclArgs();

    /**
     * Action to undertake when an ACL filter matches.
     * 
     */
    @Import(name="action", required=true)
    private Output<LoadbalancerFrontendAclActionArgs> action;

    /**
     * @return Action to undertake when an ACL filter matches.
     * 
     */
    public Output<LoadbalancerFrontendAclActionArgs> action() {
        return this.action;
    }

    @Import(name="createdAt")
    private @Nullable Output<String> createdAt;

    public Optional<Output<String>> createdAt() {
        return Optional.ofNullable(this.createdAt);
    }

    @Import(name="description")
    private @Nullable Output<String> description;

    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * The ACL match rule. At least `ip_subnet` or `http_filter` and `http_filter_value` are required.
     * 
     */
    @Import(name="match", required=true)
    private Output<LoadbalancerFrontendAclMatchArgs> match;

    /**
     * @return The ACL match rule. At least `ip_subnet` or `http_filter` and `http_filter_value` are required.
     * 
     */
    public Output<LoadbalancerFrontendAclMatchArgs> match() {
        return this.match;
    }

    /**
     * The ACL name. If not provided it will be randomly generated.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The ACL name. If not provided it will be randomly generated.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    @Import(name="updatedAt")
    private @Nullable Output<String> updatedAt;

    public Optional<Output<String>> updatedAt() {
        return Optional.ofNullable(this.updatedAt);
    }

    private LoadbalancerFrontendAclArgs() {}

    private LoadbalancerFrontendAclArgs(LoadbalancerFrontendAclArgs $) {
        this.action = $.action;
        this.createdAt = $.createdAt;
        this.description = $.description;
        this.match = $.match;
        this.name = $.name;
        this.updatedAt = $.updatedAt;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(LoadbalancerFrontendAclArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private LoadbalancerFrontendAclArgs $;

        public Builder() {
            $ = new LoadbalancerFrontendAclArgs();
        }

        public Builder(LoadbalancerFrontendAclArgs defaults) {
            $ = new LoadbalancerFrontendAclArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param action Action to undertake when an ACL filter matches.
         * 
         * @return builder
         * 
         */
        public Builder action(Output<LoadbalancerFrontendAclActionArgs> action) {
            $.action = action;
            return this;
        }

        /**
         * @param action Action to undertake when an ACL filter matches.
         * 
         * @return builder
         * 
         */
        public Builder action(LoadbalancerFrontendAclActionArgs action) {
            return action(Output.of(action));
        }

        public Builder createdAt(@Nullable Output<String> createdAt) {
            $.createdAt = createdAt;
            return this;
        }

        public Builder createdAt(String createdAt) {
            return createdAt(Output.of(createdAt));
        }

        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param match The ACL match rule. At least `ip_subnet` or `http_filter` and `http_filter_value` are required.
         * 
         * @return builder
         * 
         */
        public Builder match(Output<LoadbalancerFrontendAclMatchArgs> match) {
            $.match = match;
            return this;
        }

        /**
         * @param match The ACL match rule. At least `ip_subnet` or `http_filter` and `http_filter_value` are required.
         * 
         * @return builder
         * 
         */
        public Builder match(LoadbalancerFrontendAclMatchArgs match) {
            return match(Output.of(match));
        }

        /**
         * @param name The ACL name. If not provided it will be randomly generated.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The ACL name. If not provided it will be randomly generated.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder updatedAt(@Nullable Output<String> updatedAt) {
            $.updatedAt = updatedAt;
            return this;
        }

        public Builder updatedAt(String updatedAt) {
            return updatedAt(Output.of(updatedAt));
        }

        public LoadbalancerFrontendAclArgs build() {
            $.action = Objects.requireNonNull($.action, "expected parameter 'action' to be non-null");
            $.match = Objects.requireNonNull($.match, "expected parameter 'match' to be non-null");
            return $;
        }
    }

}
