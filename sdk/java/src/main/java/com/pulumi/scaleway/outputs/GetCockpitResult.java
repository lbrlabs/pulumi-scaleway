// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.scaleway.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.scaleway.outputs.GetCockpitEndpoint;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetCockpitResult {
    /**
     * @return Endpoints
     * 
     */
    private List<GetCockpitEndpoint> endpoints;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return The ID of the current plan
     * 
     */
    private String planId;
    private @Nullable String projectId;

    private GetCockpitResult() {}
    /**
     * @return Endpoints
     * 
     */
    public List<GetCockpitEndpoint> endpoints() {
        return this.endpoints;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The ID of the current plan
     * 
     */
    public String planId() {
        return this.planId;
    }
    public Optional<String> projectId() {
        return Optional.ofNullable(this.projectId);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetCockpitResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<GetCockpitEndpoint> endpoints;
        private String id;
        private String planId;
        private @Nullable String projectId;
        public Builder() {}
        public Builder(GetCockpitResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.endpoints = defaults.endpoints;
    	      this.id = defaults.id;
    	      this.planId = defaults.planId;
    	      this.projectId = defaults.projectId;
        }

        @CustomType.Setter
        public Builder endpoints(List<GetCockpitEndpoint> endpoints) {
            this.endpoints = Objects.requireNonNull(endpoints);
            return this;
        }
        public Builder endpoints(GetCockpitEndpoint... endpoints) {
            return endpoints(List.of(endpoints));
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder planId(String planId) {
            this.planId = Objects.requireNonNull(planId);
            return this;
        }
        @CustomType.Setter
        public Builder projectId(@Nullable String projectId) {
            this.projectId = projectId;
            return this;
        }
        public GetCockpitResult build() {
            final var o = new GetCockpitResult();
            o.endpoints = endpoints;
            o.id = id;
            o.planId = planId;
            o.projectId = projectId;
            return o;
        }
    }
}
