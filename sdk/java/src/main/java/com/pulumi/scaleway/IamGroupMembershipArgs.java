// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.scaleway;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class IamGroupMembershipArgs extends com.pulumi.resources.ResourceArgs {

    public static final IamGroupMembershipArgs Empty = new IamGroupMembershipArgs();

    /**
     * The ID of the application that will be added to the group.
     * 
     */
    @Import(name="applicationId")
    private @Nullable Output<String> applicationId;

    /**
     * @return The ID of the application that will be added to the group.
     * 
     */
    public Optional<Output<String>> applicationId() {
        return Optional.ofNullable(this.applicationId);
    }

    /**
     * ID of the group to add members to.
     * 
     */
    @Import(name="groupId", required=true)
    private Output<String> groupId;

    /**
     * @return ID of the group to add members to.
     * 
     */
    public Output<String> groupId() {
        return this.groupId;
    }

    /**
     * The ID of the user that will be added to the group
     * 
     * - &gt; Only one of `application_id` or `user_id` must be specified
     * 
     */
    @Import(name="userId")
    private @Nullable Output<String> userId;

    /**
     * @return The ID of the user that will be added to the group
     * 
     * - &gt; Only one of `application_id` or `user_id` must be specified
     * 
     */
    public Optional<Output<String>> userId() {
        return Optional.ofNullable(this.userId);
    }

    private IamGroupMembershipArgs() {}

    private IamGroupMembershipArgs(IamGroupMembershipArgs $) {
        this.applicationId = $.applicationId;
        this.groupId = $.groupId;
        this.userId = $.userId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(IamGroupMembershipArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private IamGroupMembershipArgs $;

        public Builder() {
            $ = new IamGroupMembershipArgs();
        }

        public Builder(IamGroupMembershipArgs defaults) {
            $ = new IamGroupMembershipArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param applicationId The ID of the application that will be added to the group.
         * 
         * @return builder
         * 
         */
        public Builder applicationId(@Nullable Output<String> applicationId) {
            $.applicationId = applicationId;
            return this;
        }

        /**
         * @param applicationId The ID of the application that will be added to the group.
         * 
         * @return builder
         * 
         */
        public Builder applicationId(String applicationId) {
            return applicationId(Output.of(applicationId));
        }

        /**
         * @param groupId ID of the group to add members to.
         * 
         * @return builder
         * 
         */
        public Builder groupId(Output<String> groupId) {
            $.groupId = groupId;
            return this;
        }

        /**
         * @param groupId ID of the group to add members to.
         * 
         * @return builder
         * 
         */
        public Builder groupId(String groupId) {
            return groupId(Output.of(groupId));
        }

        /**
         * @param userId The ID of the user that will be added to the group
         * 
         * - &gt; Only one of `application_id` or `user_id` must be specified
         * 
         * @return builder
         * 
         */
        public Builder userId(@Nullable Output<String> userId) {
            $.userId = userId;
            return this;
        }

        /**
         * @param userId The ID of the user that will be added to the group
         * 
         * - &gt; Only one of `application_id` or `user_id` must be specified
         * 
         * @return builder
         * 
         */
        public Builder userId(String userId) {
            return userId(Output.of(userId));
        }

        public IamGroupMembershipArgs build() {
            $.groupId = Objects.requireNonNull($.groupId, "expected parameter 'groupId' to be non-null");
            return $;
        }
    }

}
