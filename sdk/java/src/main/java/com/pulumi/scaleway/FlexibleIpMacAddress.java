// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.scaleway;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.scaleway.FlexibleIpMacAddressArgs;
import com.pulumi.scaleway.Utilities;
import com.pulumi.scaleway.inputs.FlexibleIpMacAddressState;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Creates and manages Scaleway Flexible IP Mac Addresses.
 * For more information, see [the documentation](https://developers.scaleway.com/en/products/flexible-ip/api).
 * 
 * ## Examples
 * 
 * ### Basic
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.scaleway.FlexibleIp;
 * import com.pulumi.scaleway.FlexibleIpMacAddress;
 * import com.pulumi.scaleway.FlexibleIpMacAddressArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var mainFlexibleIp = new FlexibleIp(&#34;mainFlexibleIp&#34;);
 * 
 *         var mainFlexibleIpMacAddress = new FlexibleIpMacAddress(&#34;mainFlexibleIpMacAddress&#34;, FlexibleIpMacAddressArgs.builder()        
 *             .flexibleIpId(mainFlexibleIp.id())
 *             .type(&#34;kvm&#34;)
 *             .build());
 * 
 *     }
 * }
 * ```
 * 
 * ### Duplicate on many other flexible IPs
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.scaleway.ScalewayFunctions;
 * import com.pulumi.scaleway.inputs.GetBaremetalOfferArgs;
 * import com.pulumi.scaleway.BaremetalServer;
 * import com.pulumi.scaleway.BaremetalServerArgs;
 * import com.pulumi.scaleway.FlexibleIp;
 * import com.pulumi.scaleway.FlexibleIpArgs;
 * import com.pulumi.scaleway.FlexibleIpMacAddress;
 * import com.pulumi.scaleway.FlexibleIpMacAddressArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         final var myOffer = ScalewayFunctions.getBaremetalOffer(GetBaremetalOfferArgs.builder()
 *             .name(&#34;EM-B112X-SSD&#34;)
 *             .build());
 * 
 *         var base = new BaremetalServer(&#34;base&#34;, BaremetalServerArgs.builder()        
 *             .offer(myOffer.applyValue(getBaremetalOfferResult -&gt; getBaremetalOfferResult.offerId()))
 *             .installConfigAfterward(true)
 *             .build());
 * 
 *         var ip01 = new FlexibleIp(&#34;ip01&#34;, FlexibleIpArgs.builder()        
 *             .serverId(base.id())
 *             .build());
 * 
 *         var ip02 = new FlexibleIp(&#34;ip02&#34;, FlexibleIpArgs.builder()        
 *             .serverId(base.id())
 *             .build());
 * 
 *         var ip03 = new FlexibleIp(&#34;ip03&#34;, FlexibleIpArgs.builder()        
 *             .serverId(base.id())
 *             .build());
 * 
 *         var main = new FlexibleIpMacAddress(&#34;main&#34;, FlexibleIpMacAddressArgs.builder()        
 *             .flexibleIpId(ip01.id())
 *             .type(&#34;kvm&#34;)
 *             .flexibleIpIdsToDuplicates(            
 *                 ip02.id(),
 *                 ip03.id())
 *             .build());
 * 
 *     }
 * }
 * ```
 * 
 * ## Import
 * 
 * Flexible IP Mac Addresses can be imported using the `{zone}/{id}`, e.g. bash
 * 
 * ```sh
 *  $ pulumi import scaleway:index/flexibleIpMacAddress:FlexibleIpMacAddress main fr-par-1/11111111-1111-1111-1111-111111111111
 * ```
 * 
 */
@ResourceType(type="scaleway:index/flexibleIpMacAddress:FlexibleIpMacAddress")
public class FlexibleIpMacAddress extends com.pulumi.resources.CustomResource {
    /**
     * The Virtual MAC address.
     * 
     */
    @Export(name="address", refs={String.class}, tree="[0]")
    private Output<String> address;

    /**
     * @return The Virtual MAC address.
     * 
     */
    public Output<String> address() {
        return this.address;
    }
    /**
     * The date at which the Virtual Mac Address was created (RFC 3339 format).
     * 
     */
    @Export(name="createdAt", refs={String.class}, tree="[0]")
    private Output<String> createdAt;

    /**
     * @return The date at which the Virtual Mac Address was created (RFC 3339 format).
     * 
     */
    public Output<String> createdAt() {
        return this.createdAt;
    }
    /**
     * The ID of the flexible IP for which to generate a virtual MAC.
     * 
     */
    @Export(name="flexibleIpId", refs={String.class}, tree="[0]")
    private Output<String> flexibleIpId;

    /**
     * @return The ID of the flexible IP for which to generate a virtual MAC.
     * 
     */
    public Output<String> flexibleIpId() {
        return this.flexibleIpId;
    }
    /**
     * The IDs of the flexible IPs on which to duplicate the virtual MAC.
     * &gt; **Important:** The flexible IPs need to be attached to the same server for the operation to work.
     * 
     */
    @Export(name="flexibleIpIdsToDuplicates", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> flexibleIpIdsToDuplicates;

    /**
     * @return The IDs of the flexible IPs on which to duplicate the virtual MAC.
     * &gt; **Important:** The flexible IPs need to be attached to the same server for the operation to work.
     * 
     */
    public Output<Optional<List<String>>> flexibleIpIdsToDuplicates() {
        return Codegen.optional(this.flexibleIpIdsToDuplicates);
    }
    /**
     * The Virtual MAC status.
     * 
     */
    @Export(name="status", refs={String.class}, tree="[0]")
    private Output<String> status;

    /**
     * @return The Virtual MAC status.
     * 
     */
    public Output<String> status() {
        return this.status;
    }
    /**
     * The type of the virtual MAC.
     * 
     */
    @Export(name="type", refs={String.class}, tree="[0]")
    private Output<String> type;

    /**
     * @return The type of the virtual MAC.
     * 
     */
    public Output<String> type() {
        return this.type;
    }
    /**
     * The date at which the Virtual Mac Address was last updated (RFC 3339 format).
     * 
     */
    @Export(name="updatedAt", refs={String.class}, tree="[0]")
    private Output<String> updatedAt;

    /**
     * @return The date at which the Virtual Mac Address was last updated (RFC 3339 format).
     * 
     */
    public Output<String> updatedAt() {
        return this.updatedAt;
    }
    /**
     * The zone of the Virtual Mac Address.
     * 
     */
    @Export(name="zone", refs={String.class}, tree="[0]")
    private Output<String> zone;

    /**
     * @return The zone of the Virtual Mac Address.
     * 
     */
    public Output<String> zone() {
        return this.zone;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public FlexibleIpMacAddress(String name) {
        this(name, FlexibleIpMacAddressArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public FlexibleIpMacAddress(String name, FlexibleIpMacAddressArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public FlexibleIpMacAddress(String name, FlexibleIpMacAddressArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("scaleway:index/flexibleIpMacAddress:FlexibleIpMacAddress", name, args == null ? FlexibleIpMacAddressArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private FlexibleIpMacAddress(String name, Output<String> id, @Nullable FlexibleIpMacAddressState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("scaleway:index/flexibleIpMacAddress:FlexibleIpMacAddress", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static FlexibleIpMacAddress get(String name, Output<String> id, @Nullable FlexibleIpMacAddressState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new FlexibleIpMacAddress(name, id, state, options);
    }
}
