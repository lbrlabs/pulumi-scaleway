// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.scaleway;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class MnqSqsQueueArgs extends com.pulumi.resources.ResourceArgs {

    public static final MnqSqsQueueArgs Empty = new MnqSqsQueueArgs();

    /**
     * The access key of the SQS queue.
     * 
     */
    @Import(name="accessKey", required=true)
    private Output<String> accessKey;

    /**
     * @return The access key of the SQS queue.
     * 
     */
    public Output<String> accessKey() {
        return this.accessKey;
    }

    /**
     * Specifies whether to enable content-based deduplication. Defaults to `false`.
     * 
     */
    @Import(name="contentBasedDeduplication")
    private @Nullable Output<Boolean> contentBasedDeduplication;

    /**
     * @return Specifies whether to enable content-based deduplication. Defaults to `false`.
     * 
     */
    public Optional<Output<Boolean>> contentBasedDeduplication() {
        return Optional.ofNullable(this.contentBasedDeduplication);
    }

    /**
     * The endpoint of the SQS queue. Can contain a {region} placeholder. Defaults to `http://sqs-sns.mnq.{region}.scw.cloud`.
     * 
     */
    @Import(name="endpoint")
    private @Nullable Output<String> endpoint;

    /**
     * @return The endpoint of the SQS queue. Can contain a {region} placeholder. Defaults to `http://sqs-sns.mnq.{region}.scw.cloud`.
     * 
     */
    public Optional<Output<String>> endpoint() {
        return Optional.ofNullable(this.endpoint);
    }

    /**
     * Whether the queue is a FIFO queue. If true, the queue name must end with .fifo. Defaults to `false`.
     * 
     */
    @Import(name="fifoQueue")
    private @Nullable Output<Boolean> fifoQueue;

    /**
     * @return Whether the queue is a FIFO queue. If true, the queue name must end with .fifo. Defaults to `false`.
     * 
     */
    public Optional<Output<Boolean>> fifoQueue() {
        return Optional.ofNullable(this.fifoQueue);
    }

    /**
     * The number of seconds the queue retains a message. Must be between 60 and 1_209_600. Defaults to 345_600.
     * 
     */
    @Import(name="messageMaxAge")
    private @Nullable Output<Integer> messageMaxAge;

    /**
     * @return The number of seconds the queue retains a message. Must be between 60 and 1_209_600. Defaults to 345_600.
     * 
     */
    public Optional<Output<Integer>> messageMaxAge() {
        return Optional.ofNullable(this.messageMaxAge);
    }

    /**
     * The maximum size of a message. Should be in bytes. Must be between 1024 and 262_144. Defaults to 262_144.
     * 
     */
    @Import(name="messageMaxSize")
    private @Nullable Output<Integer> messageMaxSize;

    /**
     * @return The maximum size of a message. Should be in bytes. Must be between 1024 and 262_144. Defaults to 262_144.
     * 
     */
    public Optional<Output<Integer>> messageMaxSize() {
        return Optional.ofNullable(this.messageMaxSize);
    }

    /**
     * The unique name of the sqs queue. Either `name` or `name_prefix` is required. Conflicts with `name_prefix`.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The unique name of the sqs queue. Either `name` or `name_prefix` is required. Conflicts with `name_prefix`.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Creates a unique name beginning with the specified prefix. Conflicts with `name`.
     * 
     */
    @Import(name="namePrefix")
    private @Nullable Output<String> namePrefix;

    /**
     * @return Creates a unique name beginning with the specified prefix. Conflicts with `name`.
     * 
     */
    public Optional<Output<String>> namePrefix() {
        return Optional.ofNullable(this.namePrefix);
    }

    /**
     * `project_id`) The ID of the project the sqs is enabled for.
     * 
     */
    @Import(name="projectId")
    private @Nullable Output<String> projectId;

    /**
     * @return `project_id`) The ID of the project the sqs is enabled for.
     * 
     */
    public Optional<Output<String>> projectId() {
        return Optional.ofNullable(this.projectId);
    }

    /**
     * The number of seconds to wait for a message to arrive in the queue before returning. Must be between 0 and 20. Defaults to 0.
     * 
     */
    @Import(name="receiveWaitTimeSeconds")
    private @Nullable Output<Integer> receiveWaitTimeSeconds;

    /**
     * @return The number of seconds to wait for a message to arrive in the queue before returning. Must be between 0 and 20. Defaults to 0.
     * 
     */
    public Optional<Output<Integer>> receiveWaitTimeSeconds() {
        return Optional.ofNullable(this.receiveWaitTimeSeconds);
    }

    /**
     * `region`). The region in which sqs is enabled.
     * 
     */
    @Import(name="region")
    private @Nullable Output<String> region;

    /**
     * @return `region`). The region in which sqs is enabled.
     * 
     */
    public Optional<Output<String>> region() {
        return Optional.ofNullable(this.region);
    }

    /**
     * The secret key of the SQS queue.
     * 
     */
    @Import(name="secretKey", required=true)
    private Output<String> secretKey;

    /**
     * @return The secret key of the SQS queue.
     * 
     */
    public Output<String> secretKey() {
        return this.secretKey;
    }

    /**
     * The number of seconds a message is hidden from other consumers. Must be between 0 and 43_200. Defaults to 30.
     * 
     */
    @Import(name="visibilityTimeoutSeconds")
    private @Nullable Output<Integer> visibilityTimeoutSeconds;

    /**
     * @return The number of seconds a message is hidden from other consumers. Must be between 0 and 43_200. Defaults to 30.
     * 
     */
    public Optional<Output<Integer>> visibilityTimeoutSeconds() {
        return Optional.ofNullable(this.visibilityTimeoutSeconds);
    }

    private MnqSqsQueueArgs() {}

    private MnqSqsQueueArgs(MnqSqsQueueArgs $) {
        this.accessKey = $.accessKey;
        this.contentBasedDeduplication = $.contentBasedDeduplication;
        this.endpoint = $.endpoint;
        this.fifoQueue = $.fifoQueue;
        this.messageMaxAge = $.messageMaxAge;
        this.messageMaxSize = $.messageMaxSize;
        this.name = $.name;
        this.namePrefix = $.namePrefix;
        this.projectId = $.projectId;
        this.receiveWaitTimeSeconds = $.receiveWaitTimeSeconds;
        this.region = $.region;
        this.secretKey = $.secretKey;
        this.visibilityTimeoutSeconds = $.visibilityTimeoutSeconds;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(MnqSqsQueueArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private MnqSqsQueueArgs $;

        public Builder() {
            $ = new MnqSqsQueueArgs();
        }

        public Builder(MnqSqsQueueArgs defaults) {
            $ = new MnqSqsQueueArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param accessKey The access key of the SQS queue.
         * 
         * @return builder
         * 
         */
        public Builder accessKey(Output<String> accessKey) {
            $.accessKey = accessKey;
            return this;
        }

        /**
         * @param accessKey The access key of the SQS queue.
         * 
         * @return builder
         * 
         */
        public Builder accessKey(String accessKey) {
            return accessKey(Output.of(accessKey));
        }

        /**
         * @param contentBasedDeduplication Specifies whether to enable content-based deduplication. Defaults to `false`.
         * 
         * @return builder
         * 
         */
        public Builder contentBasedDeduplication(@Nullable Output<Boolean> contentBasedDeduplication) {
            $.contentBasedDeduplication = contentBasedDeduplication;
            return this;
        }

        /**
         * @param contentBasedDeduplication Specifies whether to enable content-based deduplication. Defaults to `false`.
         * 
         * @return builder
         * 
         */
        public Builder contentBasedDeduplication(Boolean contentBasedDeduplication) {
            return contentBasedDeduplication(Output.of(contentBasedDeduplication));
        }

        /**
         * @param endpoint The endpoint of the SQS queue. Can contain a {region} placeholder. Defaults to `http://sqs-sns.mnq.{region}.scw.cloud`.
         * 
         * @return builder
         * 
         */
        public Builder endpoint(@Nullable Output<String> endpoint) {
            $.endpoint = endpoint;
            return this;
        }

        /**
         * @param endpoint The endpoint of the SQS queue. Can contain a {region} placeholder. Defaults to `http://sqs-sns.mnq.{region}.scw.cloud`.
         * 
         * @return builder
         * 
         */
        public Builder endpoint(String endpoint) {
            return endpoint(Output.of(endpoint));
        }

        /**
         * @param fifoQueue Whether the queue is a FIFO queue. If true, the queue name must end with .fifo. Defaults to `false`.
         * 
         * @return builder
         * 
         */
        public Builder fifoQueue(@Nullable Output<Boolean> fifoQueue) {
            $.fifoQueue = fifoQueue;
            return this;
        }

        /**
         * @param fifoQueue Whether the queue is a FIFO queue. If true, the queue name must end with .fifo. Defaults to `false`.
         * 
         * @return builder
         * 
         */
        public Builder fifoQueue(Boolean fifoQueue) {
            return fifoQueue(Output.of(fifoQueue));
        }

        /**
         * @param messageMaxAge The number of seconds the queue retains a message. Must be between 60 and 1_209_600. Defaults to 345_600.
         * 
         * @return builder
         * 
         */
        public Builder messageMaxAge(@Nullable Output<Integer> messageMaxAge) {
            $.messageMaxAge = messageMaxAge;
            return this;
        }

        /**
         * @param messageMaxAge The number of seconds the queue retains a message. Must be between 60 and 1_209_600. Defaults to 345_600.
         * 
         * @return builder
         * 
         */
        public Builder messageMaxAge(Integer messageMaxAge) {
            return messageMaxAge(Output.of(messageMaxAge));
        }

        /**
         * @param messageMaxSize The maximum size of a message. Should be in bytes. Must be between 1024 and 262_144. Defaults to 262_144.
         * 
         * @return builder
         * 
         */
        public Builder messageMaxSize(@Nullable Output<Integer> messageMaxSize) {
            $.messageMaxSize = messageMaxSize;
            return this;
        }

        /**
         * @param messageMaxSize The maximum size of a message. Should be in bytes. Must be between 1024 and 262_144. Defaults to 262_144.
         * 
         * @return builder
         * 
         */
        public Builder messageMaxSize(Integer messageMaxSize) {
            return messageMaxSize(Output.of(messageMaxSize));
        }

        /**
         * @param name The unique name of the sqs queue. Either `name` or `name_prefix` is required. Conflicts with `name_prefix`.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The unique name of the sqs queue. Either `name` or `name_prefix` is required. Conflicts with `name_prefix`.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param namePrefix Creates a unique name beginning with the specified prefix. Conflicts with `name`.
         * 
         * @return builder
         * 
         */
        public Builder namePrefix(@Nullable Output<String> namePrefix) {
            $.namePrefix = namePrefix;
            return this;
        }

        /**
         * @param namePrefix Creates a unique name beginning with the specified prefix. Conflicts with `name`.
         * 
         * @return builder
         * 
         */
        public Builder namePrefix(String namePrefix) {
            return namePrefix(Output.of(namePrefix));
        }

        /**
         * @param projectId `project_id`) The ID of the project the sqs is enabled for.
         * 
         * @return builder
         * 
         */
        public Builder projectId(@Nullable Output<String> projectId) {
            $.projectId = projectId;
            return this;
        }

        /**
         * @param projectId `project_id`) The ID of the project the sqs is enabled for.
         * 
         * @return builder
         * 
         */
        public Builder projectId(String projectId) {
            return projectId(Output.of(projectId));
        }

        /**
         * @param receiveWaitTimeSeconds The number of seconds to wait for a message to arrive in the queue before returning. Must be between 0 and 20. Defaults to 0.
         * 
         * @return builder
         * 
         */
        public Builder receiveWaitTimeSeconds(@Nullable Output<Integer> receiveWaitTimeSeconds) {
            $.receiveWaitTimeSeconds = receiveWaitTimeSeconds;
            return this;
        }

        /**
         * @param receiveWaitTimeSeconds The number of seconds to wait for a message to arrive in the queue before returning. Must be between 0 and 20. Defaults to 0.
         * 
         * @return builder
         * 
         */
        public Builder receiveWaitTimeSeconds(Integer receiveWaitTimeSeconds) {
            return receiveWaitTimeSeconds(Output.of(receiveWaitTimeSeconds));
        }

        /**
         * @param region `region`). The region in which sqs is enabled.
         * 
         * @return builder
         * 
         */
        public Builder region(@Nullable Output<String> region) {
            $.region = region;
            return this;
        }

        /**
         * @param region `region`). The region in which sqs is enabled.
         * 
         * @return builder
         * 
         */
        public Builder region(String region) {
            return region(Output.of(region));
        }

        /**
         * @param secretKey The secret key of the SQS queue.
         * 
         * @return builder
         * 
         */
        public Builder secretKey(Output<String> secretKey) {
            $.secretKey = secretKey;
            return this;
        }

        /**
         * @param secretKey The secret key of the SQS queue.
         * 
         * @return builder
         * 
         */
        public Builder secretKey(String secretKey) {
            return secretKey(Output.of(secretKey));
        }

        /**
         * @param visibilityTimeoutSeconds The number of seconds a message is hidden from other consumers. Must be between 0 and 43_200. Defaults to 30.
         * 
         * @return builder
         * 
         */
        public Builder visibilityTimeoutSeconds(@Nullable Output<Integer> visibilityTimeoutSeconds) {
            $.visibilityTimeoutSeconds = visibilityTimeoutSeconds;
            return this;
        }

        /**
         * @param visibilityTimeoutSeconds The number of seconds a message is hidden from other consumers. Must be between 0 and 43_200. Defaults to 30.
         * 
         * @return builder
         * 
         */
        public Builder visibilityTimeoutSeconds(Integer visibilityTimeoutSeconds) {
            return visibilityTimeoutSeconds(Output.of(visibilityTimeoutSeconds));
        }

        public MnqSqsQueueArgs build() {
            $.accessKey = Objects.requireNonNull($.accessKey, "expected parameter 'accessKey' to be non-null");
            $.secretKey = Objects.requireNonNull($.secretKey, "expected parameter 'secretKey' to be non-null");
            return $;
        }
    }

}
