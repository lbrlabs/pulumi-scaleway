// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.scaleway.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.scaleway.inputs.IpamIpResourceArgs;
import com.pulumi.scaleway.inputs.IpamIpSourceArgs;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class IpamIpState extends com.pulumi.resources.ResourceArgs {

    public static final IpamIpState Empty = new IpamIpState();

    /**
     * Request a specific IP in the requested source pool.
     * 
     */
    @Import(name="address")
    private @Nullable Output<String> address;

    /**
     * @return Request a specific IP in the requested source pool.
     * 
     */
    public Optional<Output<String>> address() {
        return Optional.ofNullable(this.address);
    }

    /**
     * Date and time of IP&#39;s creation (RFC 3339 format).
     * 
     */
    @Import(name="createdAt")
    private @Nullable Output<String> createdAt;

    /**
     * @return Date and time of IP&#39;s creation (RFC 3339 format).
     * 
     */
    public Optional<Output<String>> createdAt() {
        return Optional.ofNullable(this.createdAt);
    }

    /**
     * Defines whether to request an IPv6 instead of an IPv4.
     * 
     */
    @Import(name="isIpv6")
    private @Nullable Output<Boolean> isIpv6;

    /**
     * @return Defines whether to request an IPv6 instead of an IPv4.
     * 
     */
    public Optional<Output<Boolean>> isIpv6() {
        return Optional.ofNullable(this.isIpv6);
    }

    /**
     * `project_id`) The ID of the project the IP is associated with.
     * 
     */
    @Import(name="projectId")
    private @Nullable Output<String> projectId;

    /**
     * @return `project_id`) The ID of the project the IP is associated with.
     * 
     */
    public Optional<Output<String>> projectId() {
        return Optional.ofNullable(this.projectId);
    }

    /**
     * `region`) The region of the IP.
     * 
     */
    @Import(name="region")
    private @Nullable Output<String> region;

    /**
     * @return `region`) The region of the IP.
     * 
     */
    public Optional<Output<String>> region() {
        return Optional.ofNullable(this.region);
    }

    /**
     * The IP resource.
     * 
     */
    @Import(name="resources")
    private @Nullable Output<List<IpamIpResourceArgs>> resources;

    /**
     * @return The IP resource.
     * 
     */
    public Optional<Output<List<IpamIpResourceArgs>>> resources() {
        return Optional.ofNullable(this.resources);
    }

    /**
     * The source in which to book the IP.
     * 
     */
    @Import(name="sources")
    private @Nullable Output<List<IpamIpSourceArgs>> sources;

    /**
     * @return The source in which to book the IP.
     * 
     */
    public Optional<Output<List<IpamIpSourceArgs>>> sources() {
        return Optional.ofNullable(this.sources);
    }

    /**
     * The tags associated with the IP.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<List<String>> tags;

    /**
     * @return The tags associated with the IP.
     * 
     */
    public Optional<Output<List<String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    /**
     * Date and time of IP&#39;s last update (RFC 3339 format).
     * 
     */
    @Import(name="updatedAt")
    private @Nullable Output<String> updatedAt;

    /**
     * @return Date and time of IP&#39;s last update (RFC 3339 format).
     * 
     */
    public Optional<Output<String>> updatedAt() {
        return Optional.ofNullable(this.updatedAt);
    }

    /**
     * The zone of the IP.
     * 
     */
    @Import(name="zone")
    private @Nullable Output<String> zone;

    /**
     * @return The zone of the IP.
     * 
     */
    public Optional<Output<String>> zone() {
        return Optional.ofNullable(this.zone);
    }

    private IpamIpState() {}

    private IpamIpState(IpamIpState $) {
        this.address = $.address;
        this.createdAt = $.createdAt;
        this.isIpv6 = $.isIpv6;
        this.projectId = $.projectId;
        this.region = $.region;
        this.resources = $.resources;
        this.sources = $.sources;
        this.tags = $.tags;
        this.updatedAt = $.updatedAt;
        this.zone = $.zone;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(IpamIpState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private IpamIpState $;

        public Builder() {
            $ = new IpamIpState();
        }

        public Builder(IpamIpState defaults) {
            $ = new IpamIpState(Objects.requireNonNull(defaults));
        }

        /**
         * @param address Request a specific IP in the requested source pool.
         * 
         * @return builder
         * 
         */
        public Builder address(@Nullable Output<String> address) {
            $.address = address;
            return this;
        }

        /**
         * @param address Request a specific IP in the requested source pool.
         * 
         * @return builder
         * 
         */
        public Builder address(String address) {
            return address(Output.of(address));
        }

        /**
         * @param createdAt Date and time of IP&#39;s creation (RFC 3339 format).
         * 
         * @return builder
         * 
         */
        public Builder createdAt(@Nullable Output<String> createdAt) {
            $.createdAt = createdAt;
            return this;
        }

        /**
         * @param createdAt Date and time of IP&#39;s creation (RFC 3339 format).
         * 
         * @return builder
         * 
         */
        public Builder createdAt(String createdAt) {
            return createdAt(Output.of(createdAt));
        }

        /**
         * @param isIpv6 Defines whether to request an IPv6 instead of an IPv4.
         * 
         * @return builder
         * 
         */
        public Builder isIpv6(@Nullable Output<Boolean> isIpv6) {
            $.isIpv6 = isIpv6;
            return this;
        }

        /**
         * @param isIpv6 Defines whether to request an IPv6 instead of an IPv4.
         * 
         * @return builder
         * 
         */
        public Builder isIpv6(Boolean isIpv6) {
            return isIpv6(Output.of(isIpv6));
        }

        /**
         * @param projectId `project_id`) The ID of the project the IP is associated with.
         * 
         * @return builder
         * 
         */
        public Builder projectId(@Nullable Output<String> projectId) {
            $.projectId = projectId;
            return this;
        }

        /**
         * @param projectId `project_id`) The ID of the project the IP is associated with.
         * 
         * @return builder
         * 
         */
        public Builder projectId(String projectId) {
            return projectId(Output.of(projectId));
        }

        /**
         * @param region `region`) The region of the IP.
         * 
         * @return builder
         * 
         */
        public Builder region(@Nullable Output<String> region) {
            $.region = region;
            return this;
        }

        /**
         * @param region `region`) The region of the IP.
         * 
         * @return builder
         * 
         */
        public Builder region(String region) {
            return region(Output.of(region));
        }

        /**
         * @param resources The IP resource.
         * 
         * @return builder
         * 
         */
        public Builder resources(@Nullable Output<List<IpamIpResourceArgs>> resources) {
            $.resources = resources;
            return this;
        }

        /**
         * @param resources The IP resource.
         * 
         * @return builder
         * 
         */
        public Builder resources(List<IpamIpResourceArgs> resources) {
            return resources(Output.of(resources));
        }

        /**
         * @param resources The IP resource.
         * 
         * @return builder
         * 
         */
        public Builder resources(IpamIpResourceArgs... resources) {
            return resources(List.of(resources));
        }

        /**
         * @param sources The source in which to book the IP.
         * 
         * @return builder
         * 
         */
        public Builder sources(@Nullable Output<List<IpamIpSourceArgs>> sources) {
            $.sources = sources;
            return this;
        }

        /**
         * @param sources The source in which to book the IP.
         * 
         * @return builder
         * 
         */
        public Builder sources(List<IpamIpSourceArgs> sources) {
            return sources(Output.of(sources));
        }

        /**
         * @param sources The source in which to book the IP.
         * 
         * @return builder
         * 
         */
        public Builder sources(IpamIpSourceArgs... sources) {
            return sources(List.of(sources));
        }

        /**
         * @param tags The tags associated with the IP.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<List<String>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags The tags associated with the IP.
         * 
         * @return builder
         * 
         */
        public Builder tags(List<String> tags) {
            return tags(Output.of(tags));
        }

        /**
         * @param tags The tags associated with the IP.
         * 
         * @return builder
         * 
         */
        public Builder tags(String... tags) {
            return tags(List.of(tags));
        }

        /**
         * @param updatedAt Date and time of IP&#39;s last update (RFC 3339 format).
         * 
         * @return builder
         * 
         */
        public Builder updatedAt(@Nullable Output<String> updatedAt) {
            $.updatedAt = updatedAt;
            return this;
        }

        /**
         * @param updatedAt Date and time of IP&#39;s last update (RFC 3339 format).
         * 
         * @return builder
         * 
         */
        public Builder updatedAt(String updatedAt) {
            return updatedAt(Output.of(updatedAt));
        }

        /**
         * @param zone The zone of the IP.
         * 
         * @return builder
         * 
         */
        public Builder zone(@Nullable Output<String> zone) {
            $.zone = zone;
            return this;
        }

        /**
         * @param zone The zone of the IP.
         * 
         * @return builder
         * 
         */
        public Builder zone(String zone) {
            return zone(Output.of(zone));
        }

        public IpamIpState build() {
            return $;
        }
    }

}
