// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.scaleway;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class MnqNatsCredentialsArgs extends com.pulumi.resources.ResourceArgs {

    public static final MnqNatsCredentialsArgs Empty = new MnqNatsCredentialsArgs();

    /**
     * The ID of the nats account the credentials are generated from
     * 
     */
    @Import(name="accountId", required=true)
    private Output<String> accountId;

    /**
     * @return The ID of the nats account the credentials are generated from
     * 
     */
    public Output<String> accountId() {
        return this.accountId;
    }

    /**
     * The unique name of the nats credentials.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The unique name of the nats credentials.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * `region`). The region
     * in which the account exists.
     * 
     */
    @Import(name="region")
    private @Nullable Output<String> region;

    /**
     * @return `region`). The region
     * in which the account exists.
     * 
     */
    public Optional<Output<String>> region() {
        return Optional.ofNullable(this.region);
    }

    private MnqNatsCredentialsArgs() {}

    private MnqNatsCredentialsArgs(MnqNatsCredentialsArgs $) {
        this.accountId = $.accountId;
        this.name = $.name;
        this.region = $.region;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(MnqNatsCredentialsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private MnqNatsCredentialsArgs $;

        public Builder() {
            $ = new MnqNatsCredentialsArgs();
        }

        public Builder(MnqNatsCredentialsArgs defaults) {
            $ = new MnqNatsCredentialsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param accountId The ID of the nats account the credentials are generated from
         * 
         * @return builder
         * 
         */
        public Builder accountId(Output<String> accountId) {
            $.accountId = accountId;
            return this;
        }

        /**
         * @param accountId The ID of the nats account the credentials are generated from
         * 
         * @return builder
         * 
         */
        public Builder accountId(String accountId) {
            return accountId(Output.of(accountId));
        }

        /**
         * @param name The unique name of the nats credentials.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The unique name of the nats credentials.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param region `region`). The region
         * in which the account exists.
         * 
         * @return builder
         * 
         */
        public Builder region(@Nullable Output<String> region) {
            $.region = region;
            return this;
        }

        /**
         * @param region `region`). The region
         * in which the account exists.
         * 
         * @return builder
         * 
         */
        public Builder region(String region) {
            return region(Output.of(region));
        }

        public MnqNatsCredentialsArgs build() {
            $.accountId = Objects.requireNonNull($.accountId, "expected parameter 'accountId' to be non-null");
            return $;
        }
    }

}
