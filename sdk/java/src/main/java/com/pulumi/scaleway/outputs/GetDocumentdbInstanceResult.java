// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.scaleway.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetDocumentdbInstanceResult {
    private String engine;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    private @Nullable String instanceId;
    private Boolean isHaCluster;
    private @Nullable String name;
    private String nodeType;
    private String password;
    private String projectId;
    private @Nullable String region;
    private List<String> tags;
    private Boolean telemetryEnabled;
    private String userName;
    private Integer volumeSizeInGb;
    private String volumeType;

    private GetDocumentdbInstanceResult() {}
    public String engine() {
        return this.engine;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public Optional<String> instanceId() {
        return Optional.ofNullable(this.instanceId);
    }
    public Boolean isHaCluster() {
        return this.isHaCluster;
    }
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }
    public String nodeType() {
        return this.nodeType;
    }
    public String password() {
        return this.password;
    }
    public String projectId() {
        return this.projectId;
    }
    public Optional<String> region() {
        return Optional.ofNullable(this.region);
    }
    public List<String> tags() {
        return this.tags;
    }
    public Boolean telemetryEnabled() {
        return this.telemetryEnabled;
    }
    public String userName() {
        return this.userName;
    }
    public Integer volumeSizeInGb() {
        return this.volumeSizeInGb;
    }
    public String volumeType() {
        return this.volumeType;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDocumentdbInstanceResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String engine;
        private String id;
        private @Nullable String instanceId;
        private Boolean isHaCluster;
        private @Nullable String name;
        private String nodeType;
        private String password;
        private String projectId;
        private @Nullable String region;
        private List<String> tags;
        private Boolean telemetryEnabled;
        private String userName;
        private Integer volumeSizeInGb;
        private String volumeType;
        public Builder() {}
        public Builder(GetDocumentdbInstanceResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.engine = defaults.engine;
    	      this.id = defaults.id;
    	      this.instanceId = defaults.instanceId;
    	      this.isHaCluster = defaults.isHaCluster;
    	      this.name = defaults.name;
    	      this.nodeType = defaults.nodeType;
    	      this.password = defaults.password;
    	      this.projectId = defaults.projectId;
    	      this.region = defaults.region;
    	      this.tags = defaults.tags;
    	      this.telemetryEnabled = defaults.telemetryEnabled;
    	      this.userName = defaults.userName;
    	      this.volumeSizeInGb = defaults.volumeSizeInGb;
    	      this.volumeType = defaults.volumeType;
        }

        @CustomType.Setter
        public Builder engine(String engine) {
            this.engine = Objects.requireNonNull(engine);
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder instanceId(@Nullable String instanceId) {
            this.instanceId = instanceId;
            return this;
        }
        @CustomType.Setter
        public Builder isHaCluster(Boolean isHaCluster) {
            this.isHaCluster = Objects.requireNonNull(isHaCluster);
            return this;
        }
        @CustomType.Setter
        public Builder name(@Nullable String name) {
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder nodeType(String nodeType) {
            this.nodeType = Objects.requireNonNull(nodeType);
            return this;
        }
        @CustomType.Setter
        public Builder password(String password) {
            this.password = Objects.requireNonNull(password);
            return this;
        }
        @CustomType.Setter
        public Builder projectId(String projectId) {
            this.projectId = Objects.requireNonNull(projectId);
            return this;
        }
        @CustomType.Setter
        public Builder region(@Nullable String region) {
            this.region = region;
            return this;
        }
        @CustomType.Setter
        public Builder tags(List<String> tags) {
            this.tags = Objects.requireNonNull(tags);
            return this;
        }
        public Builder tags(String... tags) {
            return tags(List.of(tags));
        }
        @CustomType.Setter
        public Builder telemetryEnabled(Boolean telemetryEnabled) {
            this.telemetryEnabled = Objects.requireNonNull(telemetryEnabled);
            return this;
        }
        @CustomType.Setter
        public Builder userName(String userName) {
            this.userName = Objects.requireNonNull(userName);
            return this;
        }
        @CustomType.Setter
        public Builder volumeSizeInGb(Integer volumeSizeInGb) {
            this.volumeSizeInGb = Objects.requireNonNull(volumeSizeInGb);
            return this;
        }
        @CustomType.Setter
        public Builder volumeType(String volumeType) {
            this.volumeType = Objects.requireNonNull(volumeType);
            return this;
        }
        public GetDocumentdbInstanceResult build() {
            final var o = new GetDocumentdbInstanceResult();
            o.engine = engine;
            o.id = id;
            o.instanceId = instanceId;
            o.isHaCluster = isHaCluster;
            o.name = name;
            o.nodeType = nodeType;
            o.password = password;
            o.projectId = projectId;
            o.region = region;
            o.tags = tags;
            o.telemetryEnabled = telemetryEnabled;
            o.userName = userName;
            o.volumeSizeInGb = volumeSizeInGb;
            o.volumeType = volumeType;
            return o;
        }
    }
}
