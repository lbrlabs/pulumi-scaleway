// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.scaleway;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class IamUserArgs extends com.pulumi.resources.ResourceArgs {

    public static final IamUserArgs Empty = new IamUserArgs();

    /**
     * The email of the IAM user.
     * 
     */
    @Import(name="email", required=true)
    private Output<String> email;

    /**
     * @return The email of the IAM user.
     * 
     */
    public Output<String> email() {
        return this.email;
    }

    /**
     * `organization_id`) The ID of the organization the user is associated with.
     * 
     */
    @Import(name="organizationId")
    private @Nullable Output<String> organizationId;

    /**
     * @return `organization_id`) The ID of the organization the user is associated with.
     * 
     */
    public Optional<Output<String>> organizationId() {
        return Optional.ofNullable(this.organizationId);
    }

    private IamUserArgs() {}

    private IamUserArgs(IamUserArgs $) {
        this.email = $.email;
        this.organizationId = $.organizationId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(IamUserArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private IamUserArgs $;

        public Builder() {
            $ = new IamUserArgs();
        }

        public Builder(IamUserArgs defaults) {
            $ = new IamUserArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param email The email of the IAM user.
         * 
         * @return builder
         * 
         */
        public Builder email(Output<String> email) {
            $.email = email;
            return this;
        }

        /**
         * @param email The email of the IAM user.
         * 
         * @return builder
         * 
         */
        public Builder email(String email) {
            return email(Output.of(email));
        }

        /**
         * @param organizationId `organization_id`) The ID of the organization the user is associated with.
         * 
         * @return builder
         * 
         */
        public Builder organizationId(@Nullable Output<String> organizationId) {
            $.organizationId = organizationId;
            return this;
        }

        /**
         * @param organizationId `organization_id`) The ID of the organization the user is associated with.
         * 
         * @return builder
         * 
         */
        public Builder organizationId(String organizationId) {
            return organizationId(Output.of(organizationId));
        }

        public IamUserArgs build() {
            $.email = Objects.requireNonNull($.email, "expected parameter 'email' to be non-null");
            return $;
        }
    }

}
