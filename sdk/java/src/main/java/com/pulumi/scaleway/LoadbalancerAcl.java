// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.scaleway;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.scaleway.LoadbalancerAclArgs;
import com.pulumi.scaleway.Utilities;
import com.pulumi.scaleway.inputs.LoadbalancerAclState;
import com.pulumi.scaleway.outputs.LoadbalancerAclAction;
import com.pulumi.scaleway.outputs.LoadbalancerAclMatch;
import java.lang.Integer;
import java.lang.String;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Creates and manages Scaleway Load-Balancer ACLs. For more information, see [the documentation](https://www.scaleway.com/en/developers/api/load-balancer/zoned-api/#path-acls).
 * 
 * ## Examples Usage
 * 
 * ### Basic
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.scaleway.LoadbalancerAcl;
 * import com.pulumi.scaleway.LoadbalancerAclArgs;
 * import com.pulumi.scaleway.inputs.LoadbalancerAclActionArgs;
 * import com.pulumi.scaleway.inputs.LoadbalancerAclMatchArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var acl01 = new LoadbalancerAcl(&#34;acl01&#34;, LoadbalancerAclArgs.builder()        
 *             .frontendId(scaleway_lb_frontend.frt01().id())
 *             .description(&#34;Exclude well-known IPs&#34;)
 *             .index(0)
 *             .action(LoadbalancerAclActionArgs.builder()
 *                 .type(&#34;allow&#34;)
 *                 .build())
 *             .match(LoadbalancerAclMatchArgs.builder()
 *                 .ipSubnets(                
 *                     &#34;192.168.0.1&#34;,
 *                     &#34;192.168.0.2&#34;,
 *                     &#34;192.168.10.0/24&#34;)
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * ```
 * 
 * ## Import
 * 
 * Load-Balancer ACL can be imported using the `{zone}/{id}`, e.g. bash
 * 
 * ```sh
 *  $ pulumi import scaleway:index/loadbalancerAcl:LoadbalancerAcl acl01 fr-par-1/11111111-1111-1111-1111-111111111111
 * ```
 * 
 */
@ResourceType(type="scaleway:index/loadbalancerAcl:LoadbalancerAcl")
public class LoadbalancerAcl extends com.pulumi.resources.CustomResource {
    /**
     * Action to undertake when an ACL filter matches.
     * 
     */
    @Export(name="action", refs={LoadbalancerAclAction.class}, tree="[0]")
    private Output<LoadbalancerAclAction> action;

    /**
     * @return Action to undertake when an ACL filter matches.
     * 
     */
    public Output<LoadbalancerAclAction> action() {
        return this.action;
    }
    /**
     * Date and time of ACL&#39;s creation (RFC 3339 format)
     * 
     */
    @Export(name="createdAt", refs={String.class}, tree="[0]")
    private Output<String> createdAt;

    /**
     * @return Date and time of ACL&#39;s creation (RFC 3339 format)
     * 
     */
    public Output<String> createdAt() {
        return this.createdAt;
    }
    /**
     * The ACL description.
     * 
     */
    @Export(name="description", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> description;

    /**
     * @return The ACL description.
     * 
     */
    public Output<Optional<String>> description() {
        return Codegen.optional(this.description);
    }
    /**
     * The load-balancer Frontend ID to attach the ACL to.
     * 
     */
    @Export(name="frontendId", refs={String.class}, tree="[0]")
    private Output<String> frontendId;

    /**
     * @return The load-balancer Frontend ID to attach the ACL to.
     * 
     */
    public Output<String> frontendId() {
        return this.frontendId;
    }
    /**
     * The Priority of this ACL (ACLs are applied in ascending order, 0 is the first ACL executed).
     * 
     */
    @Export(name="index", refs={Integer.class}, tree="[0]")
    private Output<Integer> index;

    /**
     * @return The Priority of this ACL (ACLs are applied in ascending order, 0 is the first ACL executed).
     * 
     */
    public Output<Integer> index() {
        return this.index;
    }
    /**
     * The ACL match rule. At least `ip_subnet` or `http_filter` and `http_filter_value` are required.
     * 
     */
    @Export(name="match", refs={LoadbalancerAclMatch.class}, tree="[0]")
    private Output</* @Nullable */ LoadbalancerAclMatch> match;

    /**
     * @return The ACL match rule. At least `ip_subnet` or `http_filter` and `http_filter_value` are required.
     * 
     */
    public Output<Optional<LoadbalancerAclMatch>> match() {
        return Codegen.optional(this.match);
    }
    /**
     * The ACL name. If not provided it will be randomly generated.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return The ACL name. If not provided it will be randomly generated.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * Date and time of ACL&#39;s update (RFC 3339 format)
     * 
     */
    @Export(name="updatedAt", refs={String.class}, tree="[0]")
    private Output<String> updatedAt;

    /**
     * @return Date and time of ACL&#39;s update (RFC 3339 format)
     * 
     */
    public Output<String> updatedAt() {
        return this.updatedAt;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public LoadbalancerAcl(String name) {
        this(name, LoadbalancerAclArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public LoadbalancerAcl(String name, LoadbalancerAclArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public LoadbalancerAcl(String name, LoadbalancerAclArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("scaleway:index/loadbalancerAcl:LoadbalancerAcl", name, args == null ? LoadbalancerAclArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private LoadbalancerAcl(String name, Output<String> id, @Nullable LoadbalancerAclState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("scaleway:index/loadbalancerAcl:LoadbalancerAcl", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static LoadbalancerAcl get(String name, Output<String> id, @Nullable LoadbalancerAclState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new LoadbalancerAcl(name, id, state, options);
    }
}
