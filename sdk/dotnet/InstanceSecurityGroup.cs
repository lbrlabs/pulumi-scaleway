// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Scaleway
{
    [ScalewayResourceType("scaleway:index/instanceSecurityGroup:InstanceSecurityGroup")]
    public partial class InstanceSecurityGroup : Pulumi.CustomResource
    {
        /// <summary>
        /// The description of the security group
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// Enable blocking of SMTP on IPv4 and IPv6
        /// </summary>
        [Output("enableDefaultSecurity")]
        public Output<bool?> EnableDefaultSecurity { get; private set; } = null!;

        [Output("externalRules")]
        public Output<bool?> ExternalRules { get; private set; } = null!;

        /// <summary>
        /// Default inbound traffic policy for this security group
        /// </summary>
        [Output("inboundDefaultPolicy")]
        public Output<string?> InboundDefaultPolicy { get; private set; } = null!;

        /// <summary>
        /// Inbound rules for this security group
        /// </summary>
        [Output("inboundRules")]
        public Output<ImmutableArray<Outputs.InstanceSecurityGroupInboundRule>> InboundRules { get; private set; } = null!;

        /// <summary>
        /// The name of the security group
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The organization_id you want to attach the resource to
        /// </summary>
        [Output("organizationId")]
        public Output<string> OrganizationId { get; private set; } = null!;

        /// <summary>
        /// Default outbound traffic policy for this security group
        /// </summary>
        [Output("outboundDefaultPolicy")]
        public Output<string?> OutboundDefaultPolicy { get; private set; } = null!;

        /// <summary>
        /// Outbound rules for this security group
        /// </summary>
        [Output("outboundRules")]
        public Output<ImmutableArray<Outputs.InstanceSecurityGroupOutboundRule>> OutboundRules { get; private set; } = null!;

        /// <summary>
        /// The project_id you want to attach the resource to
        /// </summary>
        [Output("projectId")]
        public Output<string> ProjectId { get; private set; } = null!;

        /// <summary>
        /// The stateful value of the security group
        /// </summary>
        [Output("stateful")]
        public Output<bool?> Stateful { get; private set; } = null!;

        /// <summary>
        /// The tags associated with the security group
        /// </summary>
        [Output("tags")]
        public Output<ImmutableArray<string>> Tags { get; private set; } = null!;

        /// <summary>
        /// The zone you want to attach the resource to
        /// </summary>
        [Output("zone")]
        public Output<string> Zone { get; private set; } = null!;


        /// <summary>
        /// Create a InstanceSecurityGroup resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public InstanceSecurityGroup(string name, InstanceSecurityGroupArgs? args = null, CustomResourceOptions? options = null)
            : base("scaleway:index/instanceSecurityGroup:InstanceSecurityGroup", name, args ?? new InstanceSecurityGroupArgs(), MakeResourceOptions(options, ""))
        {
        }

        private InstanceSecurityGroup(string name, Input<string> id, InstanceSecurityGroupState? state = null, CustomResourceOptions? options = null)
            : base("scaleway:index/instanceSecurityGroup:InstanceSecurityGroup", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "https://github.com/pulumiverse/pulumi-scaleway/releases/download/${VERSION}",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing InstanceSecurityGroup resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static InstanceSecurityGroup Get(string name, Input<string> id, InstanceSecurityGroupState? state = null, CustomResourceOptions? options = null)
        {
            return new InstanceSecurityGroup(name, id, state, options);
        }
    }

    public sealed class InstanceSecurityGroupArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The description of the security group
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Enable blocking of SMTP on IPv4 and IPv6
        /// </summary>
        [Input("enableDefaultSecurity")]
        public Input<bool>? EnableDefaultSecurity { get; set; }

        [Input("externalRules")]
        public Input<bool>? ExternalRules { get; set; }

        /// <summary>
        /// Default inbound traffic policy for this security group
        /// </summary>
        [Input("inboundDefaultPolicy")]
        public Input<string>? InboundDefaultPolicy { get; set; }

        [Input("inboundRules")]
        private InputList<Inputs.InstanceSecurityGroupInboundRuleArgs>? _inboundRules;

        /// <summary>
        /// Inbound rules for this security group
        /// </summary>
        public InputList<Inputs.InstanceSecurityGroupInboundRuleArgs> InboundRules
        {
            get => _inboundRules ?? (_inboundRules = new InputList<Inputs.InstanceSecurityGroupInboundRuleArgs>());
            set => _inboundRules = value;
        }

        /// <summary>
        /// The name of the security group
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Default outbound traffic policy for this security group
        /// </summary>
        [Input("outboundDefaultPolicy")]
        public Input<string>? OutboundDefaultPolicy { get; set; }

        [Input("outboundRules")]
        private InputList<Inputs.InstanceSecurityGroupOutboundRuleArgs>? _outboundRules;

        /// <summary>
        /// Outbound rules for this security group
        /// </summary>
        public InputList<Inputs.InstanceSecurityGroupOutboundRuleArgs> OutboundRules
        {
            get => _outboundRules ?? (_outboundRules = new InputList<Inputs.InstanceSecurityGroupOutboundRuleArgs>());
            set => _outboundRules = value;
        }

        /// <summary>
        /// The project_id you want to attach the resource to
        /// </summary>
        [Input("projectId")]
        public Input<string>? ProjectId { get; set; }

        /// <summary>
        /// The stateful value of the security group
        /// </summary>
        [Input("stateful")]
        public Input<bool>? Stateful { get; set; }

        [Input("tags")]
        private InputList<string>? _tags;

        /// <summary>
        /// The tags associated with the security group
        /// </summary>
        public InputList<string> Tags
        {
            get => _tags ?? (_tags = new InputList<string>());
            set => _tags = value;
        }

        /// <summary>
        /// The zone you want to attach the resource to
        /// </summary>
        [Input("zone")]
        public Input<string>? Zone { get; set; }

        public InstanceSecurityGroupArgs()
        {
        }
    }

    public sealed class InstanceSecurityGroupState : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The description of the security group
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Enable blocking of SMTP on IPv4 and IPv6
        /// </summary>
        [Input("enableDefaultSecurity")]
        public Input<bool>? EnableDefaultSecurity { get; set; }

        [Input("externalRules")]
        public Input<bool>? ExternalRules { get; set; }

        /// <summary>
        /// Default inbound traffic policy for this security group
        /// </summary>
        [Input("inboundDefaultPolicy")]
        public Input<string>? InboundDefaultPolicy { get; set; }

        [Input("inboundRules")]
        private InputList<Inputs.InstanceSecurityGroupInboundRuleGetArgs>? _inboundRules;

        /// <summary>
        /// Inbound rules for this security group
        /// </summary>
        public InputList<Inputs.InstanceSecurityGroupInboundRuleGetArgs> InboundRules
        {
            get => _inboundRules ?? (_inboundRules = new InputList<Inputs.InstanceSecurityGroupInboundRuleGetArgs>());
            set => _inboundRules = value;
        }

        /// <summary>
        /// The name of the security group
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The organization_id you want to attach the resource to
        /// </summary>
        [Input("organizationId")]
        public Input<string>? OrganizationId { get; set; }

        /// <summary>
        /// Default outbound traffic policy for this security group
        /// </summary>
        [Input("outboundDefaultPolicy")]
        public Input<string>? OutboundDefaultPolicy { get; set; }

        [Input("outboundRules")]
        private InputList<Inputs.InstanceSecurityGroupOutboundRuleGetArgs>? _outboundRules;

        /// <summary>
        /// Outbound rules for this security group
        /// </summary>
        public InputList<Inputs.InstanceSecurityGroupOutboundRuleGetArgs> OutboundRules
        {
            get => _outboundRules ?? (_outboundRules = new InputList<Inputs.InstanceSecurityGroupOutboundRuleGetArgs>());
            set => _outboundRules = value;
        }

        /// <summary>
        /// The project_id you want to attach the resource to
        /// </summary>
        [Input("projectId")]
        public Input<string>? ProjectId { get; set; }

        /// <summary>
        /// The stateful value of the security group
        /// </summary>
        [Input("stateful")]
        public Input<bool>? Stateful { get; set; }

        [Input("tags")]
        private InputList<string>? _tags;

        /// <summary>
        /// The tags associated with the security group
        /// </summary>
        public InputList<string> Tags
        {
            get => _tags ?? (_tags = new InputList<string>());
            set => _tags = value;
        }

        /// <summary>
        /// The zone you want to attach the resource to
        /// </summary>
        [Input("zone")]
        public Input<string>? Zone { get; set; }

        public InstanceSecurityGroupState()
        {
        }
    }
}
