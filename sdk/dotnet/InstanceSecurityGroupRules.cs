// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Scaleway
{
    [ScalewayResourceType("scaleway:index/instanceSecurityGroupRules:InstanceSecurityGroupRules")]
    public partial class InstanceSecurityGroupRules : Pulumi.CustomResource
    {
        /// <summary>
        /// Inbound rules for this set of security group rules
        /// </summary>
        [Output("inboundRules")]
        public Output<ImmutableArray<Outputs.InstanceSecurityGroupRulesInboundRule>> InboundRules { get; private set; } = null!;

        /// <summary>
        /// Outbound rules for this set of security group rules
        /// </summary>
        [Output("outboundRules")]
        public Output<ImmutableArray<Outputs.InstanceSecurityGroupRulesOutboundRule>> OutboundRules { get; private set; } = null!;

        /// <summary>
        /// The security group associated with this volume
        /// </summary>
        [Output("securityGroupId")]
        public Output<string> SecurityGroupId { get; private set; } = null!;


        /// <summary>
        /// Create a InstanceSecurityGroupRules resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public InstanceSecurityGroupRules(string name, InstanceSecurityGroupRulesArgs args, CustomResourceOptions? options = null)
            : base("scaleway:index/instanceSecurityGroupRules:InstanceSecurityGroupRules", name, args ?? new InstanceSecurityGroupRulesArgs(), MakeResourceOptions(options, ""))
        {
        }

        private InstanceSecurityGroupRules(string name, Input<string> id, InstanceSecurityGroupRulesState? state = null, CustomResourceOptions? options = null)
            : base("scaleway:index/instanceSecurityGroupRules:InstanceSecurityGroupRules", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/pulumiverse",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing InstanceSecurityGroupRules resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static InstanceSecurityGroupRules Get(string name, Input<string> id, InstanceSecurityGroupRulesState? state = null, CustomResourceOptions? options = null)
        {
            return new InstanceSecurityGroupRules(name, id, state, options);
        }
    }

    public sealed class InstanceSecurityGroupRulesArgs : Pulumi.ResourceArgs
    {
        [Input("inboundRules")]
        private InputList<Inputs.InstanceSecurityGroupRulesInboundRuleArgs>? _inboundRules;

        /// <summary>
        /// Inbound rules for this set of security group rules
        /// </summary>
        public InputList<Inputs.InstanceSecurityGroupRulesInboundRuleArgs> InboundRules
        {
            get => _inboundRules ?? (_inboundRules = new InputList<Inputs.InstanceSecurityGroupRulesInboundRuleArgs>());
            set => _inboundRules = value;
        }

        [Input("outboundRules")]
        private InputList<Inputs.InstanceSecurityGroupRulesOutboundRuleArgs>? _outboundRules;

        /// <summary>
        /// Outbound rules for this set of security group rules
        /// </summary>
        public InputList<Inputs.InstanceSecurityGroupRulesOutboundRuleArgs> OutboundRules
        {
            get => _outboundRules ?? (_outboundRules = new InputList<Inputs.InstanceSecurityGroupRulesOutboundRuleArgs>());
            set => _outboundRules = value;
        }

        /// <summary>
        /// The security group associated with this volume
        /// </summary>
        [Input("securityGroupId", required: true)]
        public Input<string> SecurityGroupId { get; set; } = null!;

        public InstanceSecurityGroupRulesArgs()
        {
        }
    }

    public sealed class InstanceSecurityGroupRulesState : Pulumi.ResourceArgs
    {
        [Input("inboundRules")]
        private InputList<Inputs.InstanceSecurityGroupRulesInboundRuleGetArgs>? _inboundRules;

        /// <summary>
        /// Inbound rules for this set of security group rules
        /// </summary>
        public InputList<Inputs.InstanceSecurityGroupRulesInboundRuleGetArgs> InboundRules
        {
            get => _inboundRules ?? (_inboundRules = new InputList<Inputs.InstanceSecurityGroupRulesInboundRuleGetArgs>());
            set => _inboundRules = value;
        }

        [Input("outboundRules")]
        private InputList<Inputs.InstanceSecurityGroupRulesOutboundRuleGetArgs>? _outboundRules;

        /// <summary>
        /// Outbound rules for this set of security group rules
        /// </summary>
        public InputList<Inputs.InstanceSecurityGroupRulesOutboundRuleGetArgs> OutboundRules
        {
            get => _outboundRules ?? (_outboundRules = new InputList<Inputs.InstanceSecurityGroupRulesOutboundRuleGetArgs>());
            set => _outboundRules = value;
        }

        /// <summary>
        /// The security group associated with this volume
        /// </summary>
        [Input("securityGroupId")]
        public Input<string>? SecurityGroupId { get; set; }

        public InstanceSecurityGroupRulesState()
        {
        }
    }
}
