// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Scaleway
{
    [ScalewayResourceType("scaleway:index/objectBucket:ObjectBucket")]
    public partial class ObjectBucket : Pulumi.CustomResource
    {
        /// <summary>
        /// ACL of the bucket: either 'public-read' or 'private'.
        /// </summary>
        [Output("acl")]
        public Output<string?> Acl { get; private set; } = null!;

        [Output("corsRules")]
        public Output<ImmutableArray<Outputs.ObjectBucketCorsRule>> CorsRules { get; private set; } = null!;

        /// <summary>
        /// Endpoint of the bucket
        /// </summary>
        [Output("endpoint")]
        public Output<string> Endpoint { get; private set; } = null!;

        /// <summary>
        /// Delete objects in bucket
        /// </summary>
        [Output("forceDestroy")]
        public Output<bool?> ForceDestroy { get; private set; } = null!;

        /// <summary>
        /// Lifecycle configuration is a set of rules that define actions that Scaleway Object Storage applies to a group of objects
        /// </summary>
        [Output("lifecycleRules")]
        public Output<ImmutableArray<Outputs.ObjectBucketLifecycleRule>> LifecycleRules { get; private set; } = null!;

        /// <summary>
        /// The name of the bucket
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The region you want to attach the resource to
        /// </summary>
        [Output("region")]
        public Output<string> Region { get; private set; } = null!;

        /// <summary>
        /// The tags associated with this bucket
        /// </summary>
        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        /// <summary>
        /// Allow multiple versions of an object in the same bucket
        /// </summary>
        [Output("versioning")]
        public Output<Outputs.ObjectBucketVersioning> Versioning { get; private set; } = null!;


        /// <summary>
        /// Create a ObjectBucket resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ObjectBucket(string name, ObjectBucketArgs? args = null, CustomResourceOptions? options = null)
            : base("scaleway:index/objectBucket:ObjectBucket", name, args ?? new ObjectBucketArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ObjectBucket(string name, Input<string> id, ObjectBucketState? state = null, CustomResourceOptions? options = null)
            : base("scaleway:index/objectBucket:ObjectBucket", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/pulumiverse",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ObjectBucket resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ObjectBucket Get(string name, Input<string> id, ObjectBucketState? state = null, CustomResourceOptions? options = null)
        {
            return new ObjectBucket(name, id, state, options);
        }
    }

    public sealed class ObjectBucketArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// ACL of the bucket: either 'public-read' or 'private'.
        /// </summary>
        [Input("acl")]
        public Input<string>? Acl { get; set; }

        [Input("corsRules")]
        private InputList<Inputs.ObjectBucketCorsRuleArgs>? _corsRules;
        public InputList<Inputs.ObjectBucketCorsRuleArgs> CorsRules
        {
            get => _corsRules ?? (_corsRules = new InputList<Inputs.ObjectBucketCorsRuleArgs>());
            set => _corsRules = value;
        }

        /// <summary>
        /// Delete objects in bucket
        /// </summary>
        [Input("forceDestroy")]
        public Input<bool>? ForceDestroy { get; set; }

        [Input("lifecycleRules")]
        private InputList<Inputs.ObjectBucketLifecycleRuleArgs>? _lifecycleRules;

        /// <summary>
        /// Lifecycle configuration is a set of rules that define actions that Scaleway Object Storage applies to a group of objects
        /// </summary>
        public InputList<Inputs.ObjectBucketLifecycleRuleArgs> LifecycleRules
        {
            get => _lifecycleRules ?? (_lifecycleRules = new InputList<Inputs.ObjectBucketLifecycleRuleArgs>());
            set => _lifecycleRules = value;
        }

        /// <summary>
        /// The name of the bucket
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The region you want to attach the resource to
        /// </summary>
        [Input("region")]
        public Input<string>? Region { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// The tags associated with this bucket
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        /// <summary>
        /// Allow multiple versions of an object in the same bucket
        /// </summary>
        [Input("versioning")]
        public Input<Inputs.ObjectBucketVersioningArgs>? Versioning { get; set; }

        public ObjectBucketArgs()
        {
        }
    }

    public sealed class ObjectBucketState : Pulumi.ResourceArgs
    {
        /// <summary>
        /// ACL of the bucket: either 'public-read' or 'private'.
        /// </summary>
        [Input("acl")]
        public Input<string>? Acl { get; set; }

        [Input("corsRules")]
        private InputList<Inputs.ObjectBucketCorsRuleGetArgs>? _corsRules;
        public InputList<Inputs.ObjectBucketCorsRuleGetArgs> CorsRules
        {
            get => _corsRules ?? (_corsRules = new InputList<Inputs.ObjectBucketCorsRuleGetArgs>());
            set => _corsRules = value;
        }

        /// <summary>
        /// Endpoint of the bucket
        /// </summary>
        [Input("endpoint")]
        public Input<string>? Endpoint { get; set; }

        /// <summary>
        /// Delete objects in bucket
        /// </summary>
        [Input("forceDestroy")]
        public Input<bool>? ForceDestroy { get; set; }

        [Input("lifecycleRules")]
        private InputList<Inputs.ObjectBucketLifecycleRuleGetArgs>? _lifecycleRules;

        /// <summary>
        /// Lifecycle configuration is a set of rules that define actions that Scaleway Object Storage applies to a group of objects
        /// </summary>
        public InputList<Inputs.ObjectBucketLifecycleRuleGetArgs> LifecycleRules
        {
            get => _lifecycleRules ?? (_lifecycleRules = new InputList<Inputs.ObjectBucketLifecycleRuleGetArgs>());
            set => _lifecycleRules = value;
        }

        /// <summary>
        /// The name of the bucket
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The region you want to attach the resource to
        /// </summary>
        [Input("region")]
        public Input<string>? Region { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// The tags associated with this bucket
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        /// <summary>
        /// Allow multiple versions of an object in the same bucket
        /// </summary>
        [Input("versioning")]
        public Input<Inputs.ObjectBucketVersioningGetArgs>? Versioning { get; set; }

        public ObjectBucketState()
        {
        }
    }
}
