// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Scaleway
{
    public static class GetInstanceIp
    {
        public static Task<GetInstanceIpResult> InvokeAsync(GetInstanceIpArgs? args = null, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetInstanceIpResult>("scaleway:index/getInstanceIp:getInstanceIp", args ?? new GetInstanceIpArgs(), options.WithDefaults());

        public static Output<GetInstanceIpResult> Invoke(GetInstanceIpInvokeArgs? args = null, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetInstanceIpResult>("scaleway:index/getInstanceIp:getInstanceIp", args ?? new GetInstanceIpInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetInstanceIpArgs : Pulumi.InvokeArgs
    {
        [Input("address")]
        public string? Address { get; set; }

        [Input("id")]
        public string? Id { get; set; }

        public GetInstanceIpArgs()
        {
        }
    }

    public sealed class GetInstanceIpInvokeArgs : Pulumi.InvokeArgs
    {
        [Input("address")]
        public Input<string>? Address { get; set; }

        [Input("id")]
        public Input<string>? Id { get; set; }

        public GetInstanceIpInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetInstanceIpResult
    {
        public readonly string? Address;
        public readonly string? Id;
        public readonly string OrganizationId;
        public readonly string ProjectId;
        public readonly string Reverse;
        public readonly string ServerId;
        public readonly ImmutableArray<string> Tags;
        public readonly string Zone;

        [OutputConstructor]
        private GetInstanceIpResult(
            string? address,

            string? id,

            string organizationId,

            string projectId,

            string reverse,

            string serverId,

            ImmutableArray<string> tags,

            string zone)
        {
            Address = address;
            Id = id;
            OrganizationId = organizationId;
            ProjectId = projectId;
            Reverse = reverse;
            ServerId = serverId;
            Tags = tags;
            Zone = zone;
        }
    }
}
