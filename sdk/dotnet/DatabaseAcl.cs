// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Scaleway
{
    [ScalewayResourceType("scaleway:index/databaseAcl:DatabaseAcl")]
    public partial class DatabaseAcl : Pulumi.CustomResource
    {
        /// <summary>
        /// List of ACL rules to apply
        /// </summary>
        [Output("aclRules")]
        public Output<ImmutableArray<Outputs.DatabaseAclAclRule>> AclRules { get; private set; } = null!;

        /// <summary>
        /// Instance on which the ACL is applied
        /// </summary>
        [Output("instanceId")]
        public Output<string> InstanceId { get; private set; } = null!;

        /// <summary>
        /// The region you want to attach the resource to
        /// </summary>
        [Output("region")]
        public Output<string> Region { get; private set; } = null!;


        /// <summary>
        /// Create a DatabaseAcl resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public DatabaseAcl(string name, DatabaseAclArgs args, CustomResourceOptions? options = null)
            : base("scaleway:index/databaseAcl:DatabaseAcl", name, args ?? new DatabaseAclArgs(), MakeResourceOptions(options, ""))
        {
        }

        private DatabaseAcl(string name, Input<string> id, DatabaseAclState? state = null, CustomResourceOptions? options = null)
            : base("scaleway:index/databaseAcl:DatabaseAcl", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/pulumiverse",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing DatabaseAcl resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static DatabaseAcl Get(string name, Input<string> id, DatabaseAclState? state = null, CustomResourceOptions? options = null)
        {
            return new DatabaseAcl(name, id, state, options);
        }
    }

    public sealed class DatabaseAclArgs : Pulumi.ResourceArgs
    {
        [Input("aclRules", required: true)]
        private InputList<Inputs.DatabaseAclAclRuleArgs>? _aclRules;

        /// <summary>
        /// List of ACL rules to apply
        /// </summary>
        public InputList<Inputs.DatabaseAclAclRuleArgs> AclRules
        {
            get => _aclRules ?? (_aclRules = new InputList<Inputs.DatabaseAclAclRuleArgs>());
            set => _aclRules = value;
        }

        /// <summary>
        /// Instance on which the ACL is applied
        /// </summary>
        [Input("instanceId", required: true)]
        public Input<string> InstanceId { get; set; } = null!;

        /// <summary>
        /// The region you want to attach the resource to
        /// </summary>
        [Input("region")]
        public Input<string>? Region { get; set; }

        public DatabaseAclArgs()
        {
        }
    }

    public sealed class DatabaseAclState : Pulumi.ResourceArgs
    {
        [Input("aclRules")]
        private InputList<Inputs.DatabaseAclAclRuleGetArgs>? _aclRules;

        /// <summary>
        /// List of ACL rules to apply
        /// </summary>
        public InputList<Inputs.DatabaseAclAclRuleGetArgs> AclRules
        {
            get => _aclRules ?? (_aclRules = new InputList<Inputs.DatabaseAclAclRuleGetArgs>());
            set => _aclRules = value;
        }

        /// <summary>
        /// Instance on which the ACL is applied
        /// </summary>
        [Input("instanceId")]
        public Input<string>? InstanceId { get; set; }

        /// <summary>
        /// The region you want to attach the resource to
        /// </summary>
        [Input("region")]
        public Input<string>? Region { get; set; }

        public DatabaseAclState()
        {
        }
    }
}
