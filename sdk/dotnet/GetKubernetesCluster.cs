// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Scaleway
{
    public static class GetKubernetesCluster
    {
        public static Task<GetKubernetesClusterResult> InvokeAsync(GetKubernetesClusterArgs? args = null, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetKubernetesClusterResult>("scaleway:index/getKubernetesCluster:getKubernetesCluster", args ?? new GetKubernetesClusterArgs(), options.WithDefaults());

        public static Output<GetKubernetesClusterResult> Invoke(GetKubernetesClusterInvokeArgs? args = null, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetKubernetesClusterResult>("scaleway:index/getKubernetesCluster:getKubernetesCluster", args ?? new GetKubernetesClusterInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetKubernetesClusterArgs : Pulumi.InvokeArgs
    {
        [Input("clusterId")]
        public string? ClusterId { get; set; }

        [Input("name")]
        public string? Name { get; set; }

        [Input("region")]
        public string? Region { get; set; }

        public GetKubernetesClusterArgs()
        {
        }
    }

    public sealed class GetKubernetesClusterInvokeArgs : Pulumi.InvokeArgs
    {
        [Input("clusterId")]
        public Input<string>? ClusterId { get; set; }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("region")]
        public Input<string>? Region { get; set; }

        public GetKubernetesClusterInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetKubernetesClusterResult
    {
        public readonly ImmutableArray<string> AdmissionPlugins;
        public readonly ImmutableArray<string> ApiserverCertSans;
        public readonly string ApiserverUrl;
        public readonly ImmutableArray<Outputs.GetKubernetesClusterAutoUpgradeResult> AutoUpgrades;
        public readonly ImmutableArray<Outputs.GetKubernetesClusterAutoscalerConfigResult> AutoscalerConfigs;
        public readonly string? ClusterId;
        public readonly string Cni;
        public readonly string CreatedAt;
        public readonly string Description;
        public readonly ImmutableArray<string> FeatureGates;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly ImmutableArray<Outputs.GetKubernetesClusterKubeconfigResult> Kubeconfigs;
        public readonly string? Name;
        public readonly ImmutableArray<Outputs.GetKubernetesClusterOpenIdConnectConfigResult> OpenIdConnectConfigs;
        public readonly string OrganizationId;
        public readonly string ProjectId;
        public readonly string? Region;
        public readonly string Status;
        public readonly ImmutableArray<string> Tags;
        public readonly string Type;
        public readonly string UpdatedAt;
        public readonly bool UpgradeAvailable;
        public readonly string Version;
        public readonly string WildcardDns;

        [OutputConstructor]
        private GetKubernetesClusterResult(
            ImmutableArray<string> admissionPlugins,

            ImmutableArray<string> apiserverCertSans,

            string apiserverUrl,

            ImmutableArray<Outputs.GetKubernetesClusterAutoUpgradeResult> autoUpgrades,

            ImmutableArray<Outputs.GetKubernetesClusterAutoscalerConfigResult> autoscalerConfigs,

            string? clusterId,

            string cni,

            string createdAt,

            string description,

            ImmutableArray<string> featureGates,

            string id,

            ImmutableArray<Outputs.GetKubernetesClusterKubeconfigResult> kubeconfigs,

            string? name,

            ImmutableArray<Outputs.GetKubernetesClusterOpenIdConnectConfigResult> openIdConnectConfigs,

            string organizationId,

            string projectId,

            string? region,

            string status,

            ImmutableArray<string> tags,

            string type,

            string updatedAt,

            bool upgradeAvailable,

            string version,

            string wildcardDns)
        {
            AdmissionPlugins = admissionPlugins;
            ApiserverCertSans = apiserverCertSans;
            ApiserverUrl = apiserverUrl;
            AutoUpgrades = autoUpgrades;
            AutoscalerConfigs = autoscalerConfigs;
            ClusterId = clusterId;
            Cni = cni;
            CreatedAt = createdAt;
            Description = description;
            FeatureGates = featureGates;
            Id = id;
            Kubeconfigs = kubeconfigs;
            Name = name;
            OpenIdConnectConfigs = openIdConnectConfigs;
            OrganizationId = organizationId;
            ProjectId = projectId;
            Region = region;
            Status = status;
            Tags = tags;
            Type = type;
            UpdatedAt = updatedAt;
            UpgradeAvailable = upgradeAvailable;
            Version = version;
            WildcardDns = wildcardDns;
        }
    }
}
