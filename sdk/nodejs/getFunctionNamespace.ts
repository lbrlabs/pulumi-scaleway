// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getFunctionNamespace(args?: GetFunctionNamespaceArgs, opts?: pulumi.InvokeOptions): Promise<GetFunctionNamespaceResult> {
    args = args || {};
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("scaleway:index/getFunctionNamespace:getFunctionNamespace", {
        "name": args.name,
        "namespaceId": args.namespaceId,
        "region": args.region,
    }, opts);
}

/**
 * A collection of arguments for invoking getFunctionNamespace.
 */
export interface GetFunctionNamespaceArgs {
    name?: string;
    namespaceId?: string;
    region?: string;
}

/**
 * A collection of values returned by getFunctionNamespace.
 */
export interface GetFunctionNamespaceResult {
    readonly description: string;
    readonly environmentVariables: {[key: string]: string};
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly name?: string;
    readonly namespaceId?: string;
    readonly organizationId: string;
    readonly projectId: string;
    readonly region?: string;
    readonly registryEndpoint: string;
    readonly registryNamespaceId: string;
}

export function getFunctionNamespaceOutput(args?: GetFunctionNamespaceOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetFunctionNamespaceResult> {
    return pulumi.output(args).apply(a => getFunctionNamespace(a, opts))
}

/**
 * A collection of arguments for invoking getFunctionNamespace.
 */
export interface GetFunctionNamespaceOutputArgs {
    name?: pulumi.Input<string>;
    namespaceId?: pulumi.Input<string>;
    region?: pulumi.Input<string>;
}
