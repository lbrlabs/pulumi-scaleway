// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getRegistryNamespace(args?: GetRegistryNamespaceArgs, opts?: pulumi.InvokeOptions): Promise<GetRegistryNamespaceResult> {
    args = args || {};
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("scaleway:index/getRegistryNamespace:getRegistryNamespace", {
        "name": args.name,
        "namespaceId": args.namespaceId,
        "region": args.region,
    }, opts);
}

/**
 * A collection of arguments for invoking getRegistryNamespace.
 */
export interface GetRegistryNamespaceArgs {
    name?: string;
    namespaceId?: string;
    region?: string;
}

/**
 * A collection of values returned by getRegistryNamespace.
 */
export interface GetRegistryNamespaceResult {
    readonly description: string;
    readonly endpoint: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly isPublic: boolean;
    readonly name?: string;
    readonly namespaceId?: string;
    readonly organizationId: string;
    readonly projectId: string;
    readonly region?: string;
}

export function getRegistryNamespaceOutput(args?: GetRegistryNamespaceOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetRegistryNamespaceResult> {
    return pulumi.output(args).apply(a => getRegistryNamespace(a, opts))
}

/**
 * A collection of arguments for invoking getRegistryNamespace.
 */
export interface GetRegistryNamespaceOutputArgs {
    name?: pulumi.Input<string>;
    namespaceId?: pulumi.Input<string>;
    region?: pulumi.Input<string>;
}
