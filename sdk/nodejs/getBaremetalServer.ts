// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "./types";
import * as utilities from "./utilities";

export function getBaremetalServer(args?: GetBaremetalServerArgs, opts?: pulumi.InvokeOptions): Promise<GetBaremetalServerResult> {
    args = args || {};
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("scaleway:index/getBaremetalServer:getBaremetalServer", {
        "name": args.name,
        "serverId": args.serverId,
        "zone": args.zone,
    }, opts);
}

/**
 * A collection of arguments for invoking getBaremetalServer.
 */
export interface GetBaremetalServerArgs {
    name?: string;
    serverId?: string;
    zone?: string;
}

/**
 * A collection of values returned by getBaremetalServer.
 */
export interface GetBaremetalServerResult {
    readonly description: string;
    readonly domain: string;
    readonly hostname: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly ips: outputs.GetBaremetalServerIp[];
    readonly name?: string;
    readonly offer: string;
    readonly offerId: string;
    readonly organizationId: string;
    readonly os: string;
    readonly osId: string;
    readonly projectId: string;
    readonly serverId?: string;
    readonly sshKeyIds: string[];
    readonly tags: string[];
    readonly zone?: string;
}

export function getBaremetalServerOutput(args?: GetBaremetalServerOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetBaremetalServerResult> {
    return pulumi.output(args).apply(a => getBaremetalServer(a, opts))
}

/**
 * A collection of arguments for invoking getBaremetalServer.
 */
export interface GetBaremetalServerOutputArgs {
    name?: pulumi.Input<string>;
    serverId?: pulumi.Input<string>;
    zone?: pulumi.Input<string>;
}
