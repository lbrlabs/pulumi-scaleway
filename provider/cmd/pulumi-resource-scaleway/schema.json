{
    "name": "scaleway",
    "displayName": "Scaleway",
    "description": "A Pulumi package for creating and managing scaleway cloud resources.",
    "keywords": [
        "pulumi",
        "scaleway"
    ],
    "homepage": "https://leebriggs.co.uk/projects#pulumi-scaleway",
    "license": "Apache-2.0",
    "attribution": "This Pulumi package is based on the [`scaleway` Terraform Provider](https://github.com/scaleway/terraform-provider-scaleway).",
    "repository": "https://github.com/pulumiverse/pulumi-scaleway",
    "logoUrl": "https://raw.githubusercontent.com/pulumiverse/pulumi-scaleway/master/assets/scaleway-svgrepo-com.svg",
    "pluginDownloadURL": "github://api.github.com/pulumiverse",
    "publisher": "Pulumiverse",
    "meta": {
        "moduleFormat": "(.*)(?:/[^/]*)"
    },
    "language": {
        "csharp": {
            "compatibility": "tfbridge20",
            "namespaces": null,
            "packageReferences": {
                "Pulumi": "3.*"
            },
            "rootNamespace": "Pulumiverse"
        },
        "go": {
            "generateExtraInputTypes": true,
            "generateResourceContainerTypes": true,
            "importBasePath": "github.com/pulumiverse/pulumi-scaleway/sdk/go/scaleway"
        },
        "nodejs": {
            "compatibility": "tfbridge20",
            "dependencies": {
                "@pulumi/pulumi": "^3.0.0"
            },
            "devDependencies": {
                "@types/mime": "^2.0.0",
                "@types/node": "^10.0.0"
            },
            "disableUnionOutputTypes": true,
            "packageDescription": "A Pulumi package for creating and managing scaleway cloud resources.",
            "packageName": "@pulumiverse/scaleway",
            "readme": "\u003e This provider is a derived work of the [Terraform Provider](https://github.com/scaleway/terraform-provider-scaleway)\n\u003e distributed under [MIT](https://mit-license.org/). If you encounter a bug or missing feature,\n\u003e first check the [`pulumi/pulumi-scaleway` repo](https://github.com/pulumi/pulumi-scaleway/issues); however, if that doesn't turn up anything,\n\u003e please consult the source [`scaleway/terraform-provider-scaleway` repo](https://github.com/scaleway/terraform-provider-scaleway/issues).",
            "typescriptVersion": ""
        },
        "python": {
            "compatibility": "tfbridge20",
            "packageName": "pulumiverse_scaleway",
            "readme": "\u003e This provider is a derived work of the [Terraform Provider](https://github.com/scaleway/terraform-provider-scaleway)\n\u003e distributed under [MIT](https://mit-license.org/). If you encounter a bug or missing feature,\n\u003e first check the [`pulumi/pulumi-scaleway` repo](https://github.com/pulumi/pulumi-scaleway/issues); however, if that doesn't turn up anything,\n\u003e please consult the source [`scaleway/terraform-provider-scaleway` repo](https://github.com/scaleway/terraform-provider-scaleway/issues).",
            "requires": {
                "pulumi": "\u003e=3.0.0,\u003c4.0.0"
            }
        }
    },
    "config": {
        "variables": {
            "accessKey": {
                "type": "string",
                "description": "The Scaleway access key.\n",
                "defaultInfo": {
                    "environment": [
                        "SCW_ACCESS_KEY"
                    ]
                }
            },
            "apiUrl": {
                "type": "string",
                "description": "The Scaleway API URL to use.\n"
            },
            "profile": {
                "type": "string",
                "description": "The Scaleway profile to use.\n"
            },
            "projectId": {
                "type": "string",
                "description": "The Scaleway project ID.\n",
                "defaultInfo": {
                    "environment": [
                        "SCW_DEFAULT_PROJECT_ID"
                    ]
                }
            },
            "region": {
                "type": "string",
                "description": "The region you want to attach the resource to\n",
                "defaultInfo": {
                    "environment": [
                        "SCW_DEFAULT_REGION"
                    ]
                }
            },
            "secretKey": {
                "type": "string",
                "description": "The Scaleway secret Key.\n",
                "defaultInfo": {
                    "environment": [
                        "SCW_SECRET_KEY"
                    ]
                }
            },
            "zone": {
                "type": "string",
                "description": "The zone you want to attach the resource to\n",
                "defaultInfo": {
                    "environment": [
                        "SCW_DEFAULT_ZONE"
                    ]
                }
            }
        },
        "defaults": [
            "region",
            "zone"
        ]
    },
    "types": {
        "scaleway:index/BaremetalServerIp:BaremetalServerIp": {
            "properties": {
                "address": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "id": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "reverse": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "version": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "address",
                        "id",
                        "reverse",
                        "version"
                    ]
                }
            }
        },
        "scaleway:index/DatabaseAclAclRule:DatabaseAclAclRule": {
            "properties": {
                "description": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ip": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "ip"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "description",
                        "ip"
                    ]
                }
            }
        },
        "scaleway:index/DatabaseInstanceLoadBalancer:DatabaseInstanceLoadBalancer": {
            "properties": {
                "endpointId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "hostname": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ip": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "port": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "endpointId",
                        "hostname",
                        "ip",
                        "name",
                        "port"
                    ]
                }
            }
        },
        "scaleway:index/DatabaseInstancePrivateNetwork:DatabaseInstancePrivateNetwork": {
            "properties": {
                "endpointId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "hostname": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ip": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ipNet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "pnId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "port": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "zone": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "ipNet",
                "pnId"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "endpointId",
                        "hostname",
                        "ip",
                        "ipNet",
                        "name",
                        "pnId",
                        "port",
                        "zone"
                    ]
                }
            }
        },
        "scaleway:index/DatabaseInstanceReadReplica:DatabaseInstanceReadReplica": {
            "properties": {
                "ip": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "port": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "ip",
                        "name",
                        "port"
                    ]
                }
            }
        },
        "scaleway:index/DomainRecordGeoIp:DomainRecordGeoIp": {
            "properties": {
                "matches": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/scaleway:index/DomainRecordGeoIpMatch:DomainRecordGeoIpMatch"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "matches"
            ]
        },
        "scaleway:index/DomainRecordGeoIpMatch:DomainRecordGeoIpMatch": {
            "properties": {
                "continents": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "countries": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "data": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "data"
            ]
        },
        "scaleway:index/DomainRecordHttpService:DomainRecordHttpService": {
            "properties": {
                "ips": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "mustContain": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "strategy": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "url": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "userAgent": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "ips",
                "mustContain",
                "strategy",
                "url"
            ]
        },
        "scaleway:index/DomainRecordView:DomainRecordView": {
            "properties": {
                "data": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "subnet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "data",
                "subnet"
            ]
        },
        "scaleway:index/DomainRecordWeighted:DomainRecordWeighted": {
            "properties": {
                "ip": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "weight": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "ip",
                "weight"
            ]
        },
        "scaleway:index/InstanceSecurityGroupInboundRule:InstanceSecurityGroupInboundRule": {
            "properties": {
                "action": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ip": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ipRange": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "port": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "portRange": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "protocol": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "action"
            ]
        },
        "scaleway:index/InstanceSecurityGroupOutboundRule:InstanceSecurityGroupOutboundRule": {
            "properties": {
                "action": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ip": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ipRange": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "port": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "portRange": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "protocol": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "action"
            ]
        },
        "scaleway:index/InstanceSecurityGroupRulesInboundRule:InstanceSecurityGroupRulesInboundRule": {
            "properties": {
                "action": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ip": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ipRange": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "port": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "portRange": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "protocol": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "action"
            ]
        },
        "scaleway:index/InstanceSecurityGroupRulesOutboundRule:InstanceSecurityGroupRulesOutboundRule": {
            "properties": {
                "action": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ip": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ipRange": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "port": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "portRange": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "protocol": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "action"
            ]
        },
        "scaleway:index/InstanceServerPrivateNetwork:InstanceServerPrivateNetwork": {
            "properties": {
                "macAddress": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "pnId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "status": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "zone": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "pnId"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "macAddress",
                        "pnId",
                        "status",
                        "zone"
                    ]
                }
            }
        },
        "scaleway:index/InstanceServerRootVolume:InstanceServerRootVolume": {
            "properties": {
                "boot": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "deleteOnTermination": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sizeInGb": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "volumeId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "volumeType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "sizeInGb",
                        "volumeId",
                        "volumeType"
                    ]
                }
            }
        },
        "scaleway:index/IotDeviceCertificate:IotDeviceCertificate": {
            "properties": {
                "crt": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "key": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "crt",
                        "key"
                    ]
                }
            }
        },
        "scaleway:index/IotDeviceMessageFilters:IotDeviceMessageFilters": {
            "properties": {
                "publish": {
                    "$ref": "#/types/scaleway:index/IotDeviceMessageFiltersPublish:IotDeviceMessageFiltersPublish",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "subscribe": {
                    "$ref": "#/types/scaleway:index/IotDeviceMessageFiltersSubscribe:IotDeviceMessageFiltersSubscribe",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "scaleway:index/IotDeviceMessageFiltersPublish:IotDeviceMessageFiltersPublish": {
            "properties": {
                "policy": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "topics": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "scaleway:index/IotDeviceMessageFiltersSubscribe:IotDeviceMessageFiltersSubscribe": {
            "properties": {
                "policy": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "topics": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "scaleway:index/IotRouteDatabase:IotRouteDatabase": {
            "properties": {
                "dbname": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "host": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "password": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "port": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "username": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "dbname",
                "host",
                "password",
                "port",
                "query",
                "username"
            ]
        },
        "scaleway:index/IotRouteRest:IotRouteRest": {
            "properties": {
                "headers": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "uri": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "verb": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "headers",
                "uri",
                "verb"
            ]
        },
        "scaleway:index/IotRouteS3:IotRouteS3": {
            "properties": {
                "bucketName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "bucketRegion": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "objectPrefix": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "strategy": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "bucketName",
                "bucketRegion",
                "strategy"
            ]
        },
        "scaleway:index/KubernetesClusterAutoUpgrade:KubernetesClusterAutoUpgrade": {
            "properties": {
                "enable": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maintenanceWindowDay": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maintenanceWindowStartHour": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "enable",
                "maintenanceWindowDay",
                "maintenanceWindowStartHour"
            ]
        },
        "scaleway:index/KubernetesClusterAutoscalerConfig:KubernetesClusterAutoscalerConfig": {
            "properties": {
                "balanceSimilarNodeGroups": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "disableScaleDown": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "estimator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "expander": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "expendablePodsPriorityCutoff": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ignoreDaemonsetsUtilization": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxGracefulTerminationSec": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "scaleDownDelayAfterAdd": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "scaleDownUnneededTime": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "scaleDownUtilizationThreshold": {
                    "type": "number",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "scaleway:index/KubernetesClusterKubeconfig:KubernetesClusterKubeconfig": {
            "properties": {
                "clusterCaCertificate": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "configFile": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "host": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "token": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "clusterCaCertificate",
                        "configFile",
                        "host",
                        "token"
                    ]
                }
            }
        },
        "scaleway:index/KubernetesClusterOpenIdConnectConfig:KubernetesClusterOpenIdConnectConfig": {
            "properties": {
                "clientId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupsClaims": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupsPrefix": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "issuerUrl": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "requiredClaims": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "usernameClaim": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "usernamePrefix": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "clientId",
                "issuerUrl"
            ]
        },
        "scaleway:index/KubernetesNodePoolNode:KubernetesNodePoolNode": {
            "properties": {
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "publicIp": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "publicIpV6": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "status": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "name",
                        "publicIp",
                        "publicIpV6",
                        "status"
                    ]
                }
            }
        },
        "scaleway:index/KubernetesNodePoolUpgradePolicy:KubernetesNodePoolUpgradePolicy": {
            "properties": {
                "maxSurge": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxUnavailable": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "scaleway:index/LoadbalancerBackendHealthCheckHttp:LoadbalancerBackendHealthCheckHttp": {
            "properties": {
                "code": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "method": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "uri": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "uri"
            ]
        },
        "scaleway:index/LoadbalancerBackendHealthCheckHttps:LoadbalancerBackendHealthCheckHttps": {
            "properties": {
                "code": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "method": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "uri": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "uri"
            ]
        },
        "scaleway:index/LoadbalancerBackendHealthCheckTcp:LoadbalancerBackendHealthCheckTcp": {
            "type": "object"
        },
        "scaleway:index/LoadbalancerCertificateCustomCertificate:LoadbalancerCertificateCustomCertificate": {
            "properties": {
                "certificateChain": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "certificateChain"
            ]
        },
        "scaleway:index/LoadbalancerCertificateLetsencrypt:LoadbalancerCertificateLetsencrypt": {
            "properties": {
                "commonName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "subjectAlternativeNames": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "commonName"
            ]
        },
        "scaleway:index/LoadbalancerFrontendAcl:LoadbalancerFrontendAcl": {
            "properties": {
                "action": {
                    "$ref": "#/types/scaleway:index/LoadbalancerFrontendAclAction:LoadbalancerFrontendAclAction",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "match": {
                    "$ref": "#/types/scaleway:index/LoadbalancerFrontendAclMatch:LoadbalancerFrontendAclMatch",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "action",
                "match"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "action",
                        "match",
                        "name"
                    ]
                }
            }
        },
        "scaleway:index/LoadbalancerFrontendAclAction:LoadbalancerFrontendAclAction": {
            "properties": {
                "type": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "type"
            ]
        },
        "scaleway:index/LoadbalancerFrontendAclMatch:LoadbalancerFrontendAclMatch": {
            "properties": {
                "httpFilter": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "httpFilterOption": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "httpFilterValues": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "invert": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ipSubnets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "scaleway:index/LoadbalancerPrivateNetwork:LoadbalancerPrivateNetwork": {
            "properties": {
                "dhcpConfig": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "privateNetworkId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "staticConfigs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "status": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "zone": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "privateNetworkId"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "privateNetworkId",
                        "status",
                        "zone"
                    ]
                }
            }
        },
        "scaleway:index/ObjectBucketCorsRule:ObjectBucketCorsRule": {
            "properties": {
                "allowedHeaders": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "allowedMethods": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "allowedOrigins": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "exposeHeaders": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxAgeSeconds": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "allowedMethods",
                "allowedOrigins"
            ]
        },
        "scaleway:index/ObjectBucketLifecycleRule:ObjectBucketLifecycleRule": {
            "properties": {
                "abortIncompleteMultipartUploadDays": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "enabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "expiration": {
                    "$ref": "#/types/scaleway:index/ObjectBucketLifecycleRuleExpiration:ObjectBucketLifecycleRuleExpiration",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "id": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "prefix": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "transitions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/scaleway:index/ObjectBucketLifecycleRuleTransition:ObjectBucketLifecycleRuleTransition"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "enabled"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "enabled",
                        "id"
                    ]
                }
            }
        },
        "scaleway:index/ObjectBucketLifecycleRuleExpiration:ObjectBucketLifecycleRuleExpiration": {
            "properties": {
                "days": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "days"
            ]
        },
        "scaleway:index/ObjectBucketLifecycleRuleTransition:ObjectBucketLifecycleRuleTransition": {
            "properties": {
                "days": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "storageClass": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "storageClass"
            ]
        },
        "scaleway:index/ObjectBucketVersioning:ObjectBucketVersioning": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "scaleway:index/RedisClusterAcl:RedisClusterAcl": {
            "properties": {
                "description": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "id": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ip": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "ip"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "description",
                        "id",
                        "ip"
                    ]
                }
            }
        },
        "scaleway:index/getBaremetalOfferCpu:getBaremetalOfferCpu": {
            "properties": {
                "coreCount": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "frequency": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "threadCount": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "coreCount",
                "frequency",
                "name",
                "threadCount"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "scaleway:index/getBaremetalOfferDisk:getBaremetalOfferDisk": {
            "properties": {
                "capacity": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "capacity",
                "type"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "scaleway:index/getBaremetalOfferMemory:getBaremetalOfferMemory": {
            "properties": {
                "capacity": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "frequency": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "isEcc": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "capacity",
                "frequency",
                "isEcc",
                "type"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "scaleway:index/getBaremetalServerIp:getBaremetalServerIp": {
            "properties": {
                "address": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "id": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "reverse": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "version": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "address",
                "id",
                "reverse",
                "version"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "scaleway:index/getDatabaseAclAclRule:getDatabaseAclAclRule": {
            "properties": {
                "description": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ip": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "description",
                "ip"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "scaleway:index/getDatabaseInstanceLoadBalancer:getDatabaseInstanceLoadBalancer": {
            "properties": {
                "endpointId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "hostname": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ip": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "port": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "endpointId",
                "hostname",
                "ip",
                "name",
                "port"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "scaleway:index/getDatabaseInstancePrivateNetwork:getDatabaseInstancePrivateNetwork": {
            "properties": {
                "endpointId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "hostname": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ip": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ipNet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "pnId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "port": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "zone": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "endpointId",
                "hostname",
                "ip",
                "ipNet",
                "name",
                "pnId",
                "port",
                "zone"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "scaleway:index/getDatabaseInstanceReadReplica:getDatabaseInstanceReadReplica": {
            "properties": {
                "ip": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "port": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "ip",
                "name",
                "port"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "scaleway:index/getDomainRecordGeoIp:getDomainRecordGeoIp": {
            "properties": {
                "matches": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/scaleway:index/getDomainRecordGeoIpMatch:getDomainRecordGeoIpMatch"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "matches"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "scaleway:index/getDomainRecordGeoIpMatch:getDomainRecordGeoIpMatch": {
            "properties": {
                "continents": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "countries": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "data": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "continents",
                "countries",
                "data"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "scaleway:index/getDomainRecordHttpService:getDomainRecordHttpService": {
            "properties": {
                "ips": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "mustContain": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "strategy": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "url": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "userAgent": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "ips",
                "mustContain",
                "strategy",
                "url",
                "userAgent"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "scaleway:index/getDomainRecordView:getDomainRecordView": {
            "properties": {
                "data": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "subnet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "data",
                "subnet"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "scaleway:index/getDomainRecordWeighted:getDomainRecordWeighted": {
            "properties": {
                "ip": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "weight": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "ip",
                "weight"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "scaleway:index/getInstanceSecurityGroupInboundRule:getInstanceSecurityGroupInboundRule": {
            "properties": {
                "action": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ip": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ipRange": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "port": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "portRange": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "protocol": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "action",
                "ip",
                "ipRange",
                "port",
                "portRange",
                "protocol"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "scaleway:index/getInstanceSecurityGroupOutboundRule:getInstanceSecurityGroupOutboundRule": {
            "properties": {
                "action": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ip": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ipRange": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "port": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "portRange": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "protocol": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "action",
                "ip",
                "ipRange",
                "port",
                "portRange",
                "protocol"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "scaleway:index/getInstanceServerPrivateNetwork:getInstanceServerPrivateNetwork": {
            "properties": {
                "macAddress": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "pnId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "status": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "zone": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "macAddress",
                "pnId",
                "status",
                "zone"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "scaleway:index/getInstanceServerRootVolume:getInstanceServerRootVolume": {
            "properties": {
                "boot": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "deleteOnTermination": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sizeInGb": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "volumeId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "volumeType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "boot",
                "deleteOnTermination",
                "sizeInGb",
                "volumeId",
                "volumeType"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "scaleway:index/getIotDeviceCertificate:getIotDeviceCertificate": {
            "properties": {
                "crt": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "key": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "crt",
                "key"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "scaleway:index/getIotDeviceMessageFilter:getIotDeviceMessageFilter": {
            "properties": {
                "publishes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/scaleway:index/getIotDeviceMessageFilterPublish:getIotDeviceMessageFilterPublish"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "subscribes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/scaleway:index/getIotDeviceMessageFilterSubscribe:getIotDeviceMessageFilterSubscribe"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "publishes",
                "subscribes"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "scaleway:index/getIotDeviceMessageFilterPublish:getIotDeviceMessageFilterPublish": {
            "properties": {
                "policy": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "topics": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "policy",
                "topics"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "scaleway:index/getIotDeviceMessageFilterSubscribe:getIotDeviceMessageFilterSubscribe": {
            "properties": {
                "policy": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "topics": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "policy",
                "topics"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "scaleway:index/getKubernetesClusterAutoUpgrade:getKubernetesClusterAutoUpgrade": {
            "properties": {
                "enable": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maintenanceWindowDay": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maintenanceWindowStartHour": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "enable",
                "maintenanceWindowDay",
                "maintenanceWindowStartHour"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "scaleway:index/getKubernetesClusterAutoscalerConfig:getKubernetesClusterAutoscalerConfig": {
            "properties": {
                "balanceSimilarNodeGroups": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "disableScaleDown": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "estimator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "expander": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "expendablePodsPriorityCutoff": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ignoreDaemonsetsUtilization": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxGracefulTerminationSec": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "scaleDownDelayAfterAdd": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "scaleDownUnneededTime": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "scaleDownUtilizationThreshold": {
                    "type": "number",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "balanceSimilarNodeGroups",
                "disableScaleDown",
                "estimator",
                "expander",
                "expendablePodsPriorityCutoff",
                "ignoreDaemonsetsUtilization",
                "maxGracefulTerminationSec",
                "scaleDownDelayAfterAdd",
                "scaleDownUnneededTime",
                "scaleDownUtilizationThreshold"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "scaleway:index/getKubernetesClusterKubeconfig:getKubernetesClusterKubeconfig": {
            "properties": {
                "clusterCaCertificate": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "configFile": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "host": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "token": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "clusterCaCertificate",
                "configFile",
                "host",
                "token"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "scaleway:index/getKubernetesClusterOpenIdConnectConfig:getKubernetesClusterOpenIdConnectConfig": {
            "properties": {
                "clientId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupsClaims": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupsPrefix": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "issuerUrl": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "requiredClaims": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "usernameClaim": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "usernamePrefix": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "clientId",
                "groupsClaims",
                "groupsPrefix",
                "issuerUrl",
                "requiredClaims",
                "usernameClaim",
                "usernamePrefix"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "scaleway:index/getKubernetesNodePoolNode:getKubernetesNodePoolNode": {
            "properties": {
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "publicIp": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "publicIpV6": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "status": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "name",
                "publicIp",
                "publicIpV6",
                "status"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "scaleway:index/getKubernetesNodePoolUpgradePolicy:getKubernetesNodePoolUpgradePolicy": {
            "properties": {
                "maxSurge": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxUnavailable": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "maxSurge",
                "maxUnavailable"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "scaleway:index/getLoadbalancerCertificateCustomCertificate:getLoadbalancerCertificateCustomCertificate": {
            "properties": {
                "certificateChain": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "certificateChain"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "scaleway:index/getLoadbalancerCertificateLetsencrypt:getLoadbalancerCertificateLetsencrypt": {
            "properties": {
                "commonName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "subjectAlternativeNames": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "commonName",
                "subjectAlternativeNames"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "scaleway:index/getLoadbalancerPrivateNetwork:getLoadbalancerPrivateNetwork": {
            "properties": {
                "dhcpConfig": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "privateNetworkId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "staticConfigs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "status": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "zone": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "dhcpConfig",
                "privateNetworkId",
                "staticConfigs",
                "status",
                "zone"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "scaleway:index/getObjectBucketCorsRule:getObjectBucketCorsRule": {
            "properties": {
                "allowedHeaders": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "allowedMethods": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "allowedOrigins": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "exposeHeaders": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxAgeSeconds": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "allowedHeaders",
                "allowedMethods",
                "allowedOrigins",
                "exposeHeaders",
                "maxAgeSeconds"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "scaleway:index/getObjectBucketLifecycleRule:getObjectBucketLifecycleRule": {
            "properties": {
                "abortIncompleteMultipartUploadDays": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "enabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "expirations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/scaleway:index/getObjectBucketLifecycleRuleExpiration:getObjectBucketLifecycleRuleExpiration"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "id": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "prefix": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "transitions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/scaleway:index/getObjectBucketLifecycleRuleTransition:getObjectBucketLifecycleRuleTransition"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "abortIncompleteMultipartUploadDays",
                "enabled",
                "expirations",
                "id",
                "prefix",
                "tags",
                "transitions"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "scaleway:index/getObjectBucketLifecycleRuleExpiration:getObjectBucketLifecycleRuleExpiration": {
            "properties": {
                "days": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "days"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "scaleway:index/getObjectBucketLifecycleRuleTransition:getObjectBucketLifecycleRuleTransition": {
            "properties": {
                "days": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "storageClass": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "days",
                "storageClass"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "scaleway:index/getObjectBucketVersioning:getObjectBucketVersioning": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "enabled"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "scaleway:index/getRedisClusterAcl:getRedisClusterAcl": {
            "properties": {
                "description": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "id": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ip": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "description",
                "id",
                "ip"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        }
    },
    "provider": {
        "description": "The provider type for the scaleway package. By default, resources use package-wide configuration\nsettings, however an explicit `Provider` instance may be created and passed during resource\nconstruction to achieve fine-grained programmatic control over provider settings. See the\n[documentation](https://www.pulumi.com/docs/reference/programming-model/#providers) for more information.\n",
        "properties": {
            "accessKey": {
                "type": "string",
                "description": "The Scaleway access key.\n"
            },
            "apiUrl": {
                "type": "string",
                "description": "The Scaleway API URL to use.\n"
            },
            "profile": {
                "type": "string",
                "description": "The Scaleway profile to use.\n"
            },
            "projectId": {
                "type": "string",
                "description": "The Scaleway project ID.\n"
            },
            "region": {
                "type": "string",
                "description": "The region you want to attach the resource to\n"
            },
            "secretKey": {
                "type": "string",
                "description": "The Scaleway secret Key.\n"
            },
            "zone": {
                "type": "string",
                "description": "The zone you want to attach the resource to\n"
            }
        },
        "inputProperties": {
            "accessKey": {
                "type": "string",
                "description": "The Scaleway access key.\n",
                "defaultInfo": {
                    "environment": [
                        "SCW_ACCESS_KEY"
                    ]
                }
            },
            "apiUrl": {
                "type": "string",
                "description": "The Scaleway API URL to use.\n"
            },
            "profile": {
                "type": "string",
                "description": "The Scaleway profile to use.\n"
            },
            "projectId": {
                "type": "string",
                "description": "The Scaleway project ID.\n",
                "defaultInfo": {
                    "environment": [
                        "SCW_DEFAULT_PROJECT_ID"
                    ]
                }
            },
            "region": {
                "type": "string",
                "description": "The region you want to attach the resource to\n",
                "defaultInfo": {
                    "environment": [
                        "SCW_DEFAULT_REGION"
                    ]
                }
            },
            "secretKey": {
                "type": "string",
                "description": "The Scaleway secret Key.\n",
                "defaultInfo": {
                    "environment": [
                        "SCW_SECRET_KEY"
                    ]
                }
            },
            "zone": {
                "type": "string",
                "description": "The zone you want to attach the resource to\n",
                "defaultInfo": {
                    "environment": [
                        "SCW_DEFAULT_ZONE"
                    ]
                }
            }
        }
    },
    "resources": {
        "scaleway:index/accountSshKey:AccountSshKey": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "The name of the SSH key\n"
                },
                "organizationId": {
                    "type": "string",
                    "description": "The organization_id you want to attach the resource to\n"
                },
                "projectId": {
                    "type": "string",
                    "description": "The project_id you want to attach the resource to\n"
                },
                "publicKey": {
                    "type": "string",
                    "description": "The public SSH key\n"
                }
            },
            "required": [
                "name",
                "organizationId",
                "projectId",
                "publicKey"
            ],
            "inputProperties": {
                "name": {
                    "type": "string",
                    "description": "The name of the SSH key\n"
                },
                "projectId": {
                    "type": "string",
                    "description": "The project_id you want to attach the resource to\n"
                },
                "publicKey": {
                    "type": "string",
                    "description": "The public SSH key\n"
                }
            },
            "requiredInputs": [
                "publicKey"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AccountSshKey resources.\n",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The name of the SSH key\n"
                    },
                    "organizationId": {
                        "type": "string",
                        "description": "The organization_id you want to attach the resource to\n"
                    },
                    "projectId": {
                        "type": "string",
                        "description": "The project_id you want to attach the resource to\n"
                    },
                    "publicKey": {
                        "type": "string",
                        "description": "The public SSH key\n"
                    }
                },
                "type": "object"
            }
        },
        "scaleway:index/appleSliconValleyServer:AppleSliconValleyServer": {
            "properties": {
                "createdAt": {
                    "type": "string",
                    "description": "The date and time of the creation of the server\n"
                },
                "deletableAt": {
                    "type": "string",
                    "description": "The minimal date and time on which you can delete this server due to Apple licence\n"
                },
                "ip": {
                    "type": "string",
                    "description": "IPv4 address of the server\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the server\n"
                },
                "organizationId": {
                    "type": "string",
                    "description": "The organization_id you want to attach the resource to\n"
                },
                "projectId": {
                    "type": "string",
                    "description": "The project_id you want to attach the resource to\n"
                },
                "state": {
                    "type": "string",
                    "description": "The state of the server\n"
                },
                "type": {
                    "type": "string",
                    "description": "Type of the server\n"
                },
                "updatedAt": {
                    "type": "string",
                    "description": "The date and time of the last update of the server\n"
                },
                "vncUrl": {
                    "type": "string",
                    "description": "VNC url use to connect remotely to the desktop GUI\n"
                },
                "zone": {
                    "type": "string",
                    "description": "The zone you want to attach the resource to\n"
                }
            },
            "required": [
                "createdAt",
                "deletableAt",
                "ip",
                "name",
                "organizationId",
                "projectId",
                "state",
                "type",
                "updatedAt",
                "vncUrl",
                "zone"
            ],
            "inputProperties": {
                "name": {
                    "type": "string",
                    "description": "Name of the server\n"
                },
                "projectId": {
                    "type": "string",
                    "description": "The project_id you want to attach the resource to\n"
                },
                "type": {
                    "type": "string",
                    "description": "Type of the server\n"
                },
                "zone": {
                    "type": "string",
                    "description": "The zone you want to attach the resource to\n"
                }
            },
            "requiredInputs": [
                "type"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AppleSliconValleyServer resources.\n",
                "properties": {
                    "createdAt": {
                        "type": "string",
                        "description": "The date and time of the creation of the server\n"
                    },
                    "deletableAt": {
                        "type": "string",
                        "description": "The minimal date and time on which you can delete this server due to Apple licence\n"
                    },
                    "ip": {
                        "type": "string",
                        "description": "IPv4 address of the server\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the server\n"
                    },
                    "organizationId": {
                        "type": "string",
                        "description": "The organization_id you want to attach the resource to\n"
                    },
                    "projectId": {
                        "type": "string",
                        "description": "The project_id you want to attach the resource to\n"
                    },
                    "state": {
                        "type": "string",
                        "description": "The state of the server\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "Type of the server\n"
                    },
                    "updatedAt": {
                        "type": "string",
                        "description": "The date and time of the last update of the server\n"
                    },
                    "vncUrl": {
                        "type": "string",
                        "description": "VNC url use to connect remotely to the desktop GUI\n"
                    },
                    "zone": {
                        "type": "string",
                        "description": "The zone you want to attach the resource to\n"
                    }
                },
                "type": "object"
            }
        },
        "scaleway:index/baremetalServer:BaremetalServer": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "Some description to associate to the server, max 255 characters\n"
                },
                "domain": {
                    "type": "string"
                },
                "hostname": {
                    "type": "string",
                    "description": "Hostname of the server\n"
                },
                "ips": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/scaleway:index/BaremetalServerIp:BaremetalServerIp"
                    }
                },
                "name": {
                    "type": "string",
                    "description": "Name of the server\n"
                },
                "offer": {
                    "type": "string",
                    "description": "ID or name of the server offer\n"
                },
                "offerId": {
                    "type": "string",
                    "description": "ID of the server offer\n"
                },
                "organizationId": {
                    "type": "string",
                    "description": "The organization_id you want to attach the resource to\n"
                },
                "os": {
                    "type": "string",
                    "description": "The base image of the server\n"
                },
                "osId": {
                    "type": "string",
                    "description": "The base image ID of the server\n"
                },
                "projectId": {
                    "type": "string",
                    "description": "The project_id you want to attach the resource to\n"
                },
                "sshKeyIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Array of SSH key IDs allowed to SSH to the server\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Array of tags to associate with the server\n"
                },
                "zone": {
                    "type": "string",
                    "description": "The zone you want to attach the resource to\n"
                }
            },
            "required": [
                "domain",
                "ips",
                "name",
                "offer",
                "offerId",
                "organizationId",
                "os",
                "osId",
                "projectId",
                "sshKeyIds",
                "zone"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "Some description to associate to the server, max 255 characters\n"
                },
                "hostname": {
                    "type": "string",
                    "description": "Hostname of the server\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the server\n"
                },
                "offer": {
                    "type": "string",
                    "description": "ID or name of the server offer\n"
                },
                "os": {
                    "type": "string",
                    "description": "The base image of the server\n"
                },
                "projectId": {
                    "type": "string",
                    "description": "The project_id you want to attach the resource to\n"
                },
                "sshKeyIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Array of SSH key IDs allowed to SSH to the server\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Array of tags to associate with the server\n"
                },
                "zone": {
                    "type": "string",
                    "description": "The zone you want to attach the resource to\n"
                }
            },
            "requiredInputs": [
                "offer",
                "os",
                "sshKeyIds"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering BaremetalServer resources.\n",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "Some description to associate to the server, max 255 characters\n"
                    },
                    "domain": {
                        "type": "string"
                    },
                    "hostname": {
                        "type": "string",
                        "description": "Hostname of the server\n"
                    },
                    "ips": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/scaleway:index/BaremetalServerIp:BaremetalServerIp"
                        }
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the server\n"
                    },
                    "offer": {
                        "type": "string",
                        "description": "ID or name of the server offer\n"
                    },
                    "offerId": {
                        "type": "string",
                        "description": "ID of the server offer\n"
                    },
                    "organizationId": {
                        "type": "string",
                        "description": "The organization_id you want to attach the resource to\n"
                    },
                    "os": {
                        "type": "string",
                        "description": "The base image of the server\n"
                    },
                    "osId": {
                        "type": "string",
                        "description": "The base image ID of the server\n"
                    },
                    "projectId": {
                        "type": "string",
                        "description": "The project_id you want to attach the resource to\n"
                    },
                    "sshKeyIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Array of SSH key IDs allowed to SSH to the server\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Array of tags to associate with the server\n"
                    },
                    "zone": {
                        "type": "string",
                        "description": "The zone you want to attach the resource to\n"
                    }
                },
                "type": "object"
            }
        },
        "scaleway:index/container:Container": {
            "properties": {
                "cpuLimit": {
                    "type": "integer",
                    "description": "The amount of vCPU computing resources to allocate to each container. Defaults to 70.\n"
                },
                "cronStatus": {
                    "type": "string",
                    "description": "The cron status\n"
                },
                "deploy": {
                    "type": "boolean",
                    "description": "This allows you to control your production environment\n"
                },
                "description": {
                    "type": "string",
                    "description": "The container description\n"
                },
                "domainName": {
                    "type": "string",
                    "description": "The container domain name.\n"
                },
                "environmentVariables": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "The environment variables to be injected into your container at runtime.\n"
                },
                "errorMessage": {
                    "type": "string",
                    "description": "The error description\n"
                },
                "maxConcurrency": {
                    "type": "integer",
                    "description": "The maximum the number of simultaneous requests your container can handle at the same time. Defaults to 50.\n"
                },
                "maxScale": {
                    "type": "integer",
                    "description": "The maximum of number of instances this container can scale to. Default to 20.\n"
                },
                "memoryLimit": {
                    "type": "integer",
                    "description": "The memory computing resources in MB to allocate to each container. Defaults to 128.\n"
                },
                "minScale": {
                    "type": "integer",
                    "description": "The minimum of running container instances continuously. Defaults to 0.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The container name\n"
                },
                "namespaceId": {
                    "type": "string",
                    "description": "The container namespace associated\n"
                },
                "port": {
                    "type": "integer",
                    "description": "The port to expose the container. Defaults to 8080\n"
                },
                "privacy": {
                    "type": "string",
                    "description": "The privacy type define the way to authenticate to your container\n"
                },
                "protocol": {
                    "type": "string",
                    "description": "The communication protocol http1 or h2c. Defaults to http1.\n"
                },
                "region": {
                    "type": "string",
                    "description": "The region of the resource\n"
                },
                "registryImage": {
                    "type": "string",
                    "description": "The scaleway registry image address\n"
                },
                "status": {
                    "type": "string",
                    "description": "The container status\n"
                },
                "timeout": {
                    "type": "integer",
                    "description": "The maximum amount of time in seconds during which your container can process a request before we stop it. Defaults to\n300s.\n"
                }
            },
            "required": [
                "cpuLimit",
                "cronStatus",
                "domainName",
                "errorMessage",
                "maxConcurrency",
                "maxScale",
                "memoryLimit",
                "minScale",
                "name",
                "namespaceId",
                "port",
                "region",
                "registryImage",
                "status",
                "timeout"
            ],
            "inputProperties": {
                "cpuLimit": {
                    "type": "integer",
                    "description": "The amount of vCPU computing resources to allocate to each container. Defaults to 70.\n"
                },
                "deploy": {
                    "type": "boolean",
                    "description": "This allows you to control your production environment\n"
                },
                "description": {
                    "type": "string",
                    "description": "The container description\n"
                },
                "domainName": {
                    "type": "string",
                    "description": "The container domain name.\n"
                },
                "environmentVariables": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "The environment variables to be injected into your container at runtime.\n"
                },
                "maxConcurrency": {
                    "type": "integer",
                    "description": "The maximum the number of simultaneous requests your container can handle at the same time. Defaults to 50.\n"
                },
                "maxScale": {
                    "type": "integer",
                    "description": "The maximum of number of instances this container can scale to. Default to 20.\n"
                },
                "memoryLimit": {
                    "type": "integer",
                    "description": "The memory computing resources in MB to allocate to each container. Defaults to 128.\n"
                },
                "minScale": {
                    "type": "integer",
                    "description": "The minimum of running container instances continuously. Defaults to 0.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The container name\n"
                },
                "namespaceId": {
                    "type": "string",
                    "description": "The container namespace associated\n"
                },
                "port": {
                    "type": "integer",
                    "description": "The port to expose the container. Defaults to 8080\n"
                },
                "privacy": {
                    "type": "string",
                    "description": "The privacy type define the way to authenticate to your container\n"
                },
                "protocol": {
                    "type": "string",
                    "description": "The communication protocol http1 or h2c. Defaults to http1.\n"
                },
                "registryImage": {
                    "type": "string",
                    "description": "The scaleway registry image address\n"
                },
                "status": {
                    "type": "string",
                    "description": "The container status\n"
                },
                "timeout": {
                    "type": "integer",
                    "description": "The maximum amount of time in seconds during which your container can process a request before we stop it. Defaults to\n300s.\n"
                }
            },
            "requiredInputs": [
                "namespaceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Container resources.\n",
                "properties": {
                    "cpuLimit": {
                        "type": "integer",
                        "description": "The amount of vCPU computing resources to allocate to each container. Defaults to 70.\n"
                    },
                    "cronStatus": {
                        "type": "string",
                        "description": "The cron status\n"
                    },
                    "deploy": {
                        "type": "boolean",
                        "description": "This allows you to control your production environment\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "The container description\n"
                    },
                    "domainName": {
                        "type": "string",
                        "description": "The container domain name.\n"
                    },
                    "environmentVariables": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "The environment variables to be injected into your container at runtime.\n"
                    },
                    "errorMessage": {
                        "type": "string",
                        "description": "The error description\n"
                    },
                    "maxConcurrency": {
                        "type": "integer",
                        "description": "The maximum the number of simultaneous requests your container can handle at the same time. Defaults to 50.\n"
                    },
                    "maxScale": {
                        "type": "integer",
                        "description": "The maximum of number of instances this container can scale to. Default to 20.\n"
                    },
                    "memoryLimit": {
                        "type": "integer",
                        "description": "The memory computing resources in MB to allocate to each container. Defaults to 128.\n"
                    },
                    "minScale": {
                        "type": "integer",
                        "description": "The minimum of running container instances continuously. Defaults to 0.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The container name\n"
                    },
                    "namespaceId": {
                        "type": "string",
                        "description": "The container namespace associated\n"
                    },
                    "port": {
                        "type": "integer",
                        "description": "The port to expose the container. Defaults to 8080\n"
                    },
                    "privacy": {
                        "type": "string",
                        "description": "The privacy type define the way to authenticate to your container\n"
                    },
                    "protocol": {
                        "type": "string",
                        "description": "The communication protocol http1 or h2c. Defaults to http1.\n"
                    },
                    "region": {
                        "type": "string",
                        "description": "The region of the resource\n"
                    },
                    "registryImage": {
                        "type": "string",
                        "description": "The scaleway registry image address\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "The container status\n"
                    },
                    "timeout": {
                        "type": "integer",
                        "description": "The maximum amount of time in seconds during which your container can process a request before we stop it. Defaults to\n300s.\n"
                    }
                },
                "type": "object"
            }
        },
        "scaleway:index/containerNamespace:ContainerNamespace": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "The description of the container namespace\n"
                },
                "environmentVariables": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "The environment variables of the container namespace\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the container namespace\n"
                },
                "organizationId": {
                    "type": "string",
                    "description": "The organization_id you want to attach the resource to\n"
                },
                "projectId": {
                    "type": "string",
                    "description": "The project_id you want to attach the resource to\n"
                },
                "region": {
                    "type": "string",
                    "description": "The region you want to attach the resource to\n"
                },
                "registryEndpoint": {
                    "type": "string",
                    "description": "The endpoint reachable by docker\n"
                },
                "registryNamespaceId": {
                    "type": "string",
                    "description": "The ID of the registry namespace\n"
                }
            },
            "required": [
                "name",
                "organizationId",
                "projectId",
                "region",
                "registryEndpoint",
                "registryNamespaceId"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "The description of the container namespace\n"
                },
                "environmentVariables": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "The environment variables of the container namespace\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the container namespace\n"
                },
                "projectId": {
                    "type": "string",
                    "description": "The project_id you want to attach the resource to\n"
                },
                "region": {
                    "type": "string",
                    "description": "The region you want to attach the resource to\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ContainerNamespace resources.\n",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "The description of the container namespace\n"
                    },
                    "environmentVariables": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "The environment variables of the container namespace\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the container namespace\n"
                    },
                    "organizationId": {
                        "type": "string",
                        "description": "The organization_id you want to attach the resource to\n"
                    },
                    "projectId": {
                        "type": "string",
                        "description": "The project_id you want to attach the resource to\n"
                    },
                    "region": {
                        "type": "string",
                        "description": "The region you want to attach the resource to\n"
                    },
                    "registryEndpoint": {
                        "type": "string",
                        "description": "The endpoint reachable by docker\n"
                    },
                    "registryNamespaceId": {
                        "type": "string",
                        "description": "The ID of the registry namespace\n"
                    }
                },
                "type": "object"
            }
        },
        "scaleway:index/database:Database": {
            "properties": {
                "instanceId": {
                    "type": "string",
                    "description": "Instance on which the database is created\n"
                },
                "managed": {
                    "type": "boolean",
                    "description": "Whether or not the database is managed\n"
                },
                "name": {
                    "type": "string",
                    "description": "Database name\n"
                },
                "owner": {
                    "type": "string",
                    "description": "User that own the database\n"
                },
                "size": {
                    "type": "string",
                    "description": "Size of the database\n"
                }
            },
            "required": [
                "instanceId",
                "managed",
                "name",
                "owner",
                "size"
            ],
            "inputProperties": {
                "instanceId": {
                    "type": "string",
                    "description": "Instance on which the database is created\n"
                },
                "name": {
                    "type": "string",
                    "description": "Database name\n"
                }
            },
            "requiredInputs": [
                "instanceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Database resources.\n",
                "properties": {
                    "instanceId": {
                        "type": "string",
                        "description": "Instance on which the database is created\n"
                    },
                    "managed": {
                        "type": "boolean",
                        "description": "Whether or not the database is managed\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Database name\n"
                    },
                    "owner": {
                        "type": "string",
                        "description": "User that own the database\n"
                    },
                    "size": {
                        "type": "string",
                        "description": "Size of the database\n"
                    }
                },
                "type": "object"
            }
        },
        "scaleway:index/databaseAcl:DatabaseAcl": {
            "properties": {
                "aclRules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/scaleway:index/DatabaseAclAclRule:DatabaseAclAclRule"
                    },
                    "description": "List of ACL rules to apply\n"
                },
                "instanceId": {
                    "type": "string",
                    "description": "Instance on which the ACL is applied\n"
                },
                "region": {
                    "type": "string",
                    "description": "The region you want to attach the resource to\n"
                }
            },
            "required": [
                "aclRules",
                "instanceId",
                "region"
            ],
            "inputProperties": {
                "aclRules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/scaleway:index/DatabaseAclAclRule:DatabaseAclAclRule"
                    },
                    "description": "List of ACL rules to apply\n"
                },
                "instanceId": {
                    "type": "string",
                    "description": "Instance on which the ACL is applied\n"
                },
                "region": {
                    "type": "string",
                    "description": "The region you want to attach the resource to\n"
                }
            },
            "requiredInputs": [
                "aclRules",
                "instanceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DatabaseAcl resources.\n",
                "properties": {
                    "aclRules": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/scaleway:index/DatabaseAclAclRule:DatabaseAclAclRule"
                        },
                        "description": "List of ACL rules to apply\n"
                    },
                    "instanceId": {
                        "type": "string",
                        "description": "Instance on which the ACL is applied\n"
                    },
                    "region": {
                        "type": "string",
                        "description": "The region you want to attach the resource to\n"
                    }
                },
                "type": "object"
            }
        },
        "scaleway:index/databaseInstance:DatabaseInstance": {
            "properties": {
                "backupSameRegion": {
                    "type": "boolean",
                    "description": "Boolean to store logical backups in the same region as the database instance\n"
                },
                "backupScheduleFrequency": {
                    "type": "integer",
                    "description": "Backup schedule frequency in hours\n"
                },
                "backupScheduleRetention": {
                    "type": "integer",
                    "description": "Backup schedule retention in days\n"
                },
                "certificate": {
                    "type": "string",
                    "description": "Certificate of the database instance\n"
                },
                "disableBackup": {
                    "type": "boolean",
                    "description": "Disable automated backup for the database instance\n"
                },
                "endpointIp": {
                    "type": "string",
                    "description": "Endpoint IP of the database instance\n",
                    "deprecationMessage": "Please use the private_network or the load_balancer attribute"
                },
                "endpointPort": {
                    "type": "integer",
                    "description": "Endpoint port of the database instance\n"
                },
                "engine": {
                    "type": "string",
                    "description": "Database's engine version id\n"
                },
                "isHaCluster": {
                    "type": "boolean",
                    "description": "Enable or disable high availability for the database instance\n"
                },
                "loadBalancers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/scaleway:index/DatabaseInstanceLoadBalancer:DatabaseInstanceLoadBalancer"
                    },
                    "description": "Load balancer of the database instance\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the database instance\n"
                },
                "nodeType": {
                    "type": "string",
                    "description": "The type of database instance you want to create\n"
                },
                "organizationId": {
                    "type": "string",
                    "description": "The organization_id you want to attach the resource to\n"
                },
                "password": {
                    "type": "string",
                    "description": "Password for the first user of the database instance\n"
                },
                "privateNetwork": {
                    "$ref": "#/types/scaleway:index/DatabaseInstancePrivateNetwork:DatabaseInstancePrivateNetwork",
                    "description": "List of private network to expose your database instance\n"
                },
                "projectId": {
                    "type": "string",
                    "description": "The project_id you want to attach the resource to\n"
                },
                "readReplicas": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/scaleway:index/DatabaseInstanceReadReplica:DatabaseInstanceReadReplica"
                    },
                    "description": "Read replicas of the database instance\n"
                },
                "region": {
                    "type": "string",
                    "description": "The region you want to attach the resource to\n"
                },
                "settings": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Map of engine settings to be set.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of tags [\"tag1\", \"tag2\", ...] attached to a database instance\n"
                },
                "userName": {
                    "type": "string",
                    "description": "Identifier for the first user of the database instance\n"
                },
                "volumeSizeInGb": {
                    "type": "integer",
                    "description": "Volume size (in GB) when volume_type is not lssd\n"
                },
                "volumeType": {
                    "type": "string",
                    "description": "Type of volume where data are stored\n"
                }
            },
            "required": [
                "backupSameRegion",
                "backupScheduleFrequency",
                "backupScheduleRetention",
                "certificate",
                "endpointIp",
                "endpointPort",
                "engine",
                "loadBalancers",
                "name",
                "nodeType",
                "organizationId",
                "projectId",
                "readReplicas",
                "region",
                "settings",
                "volumeSizeInGb"
            ],
            "inputProperties": {
                "backupSameRegion": {
                    "type": "boolean",
                    "description": "Boolean to store logical backups in the same region as the database instance\n"
                },
                "backupScheduleFrequency": {
                    "type": "integer",
                    "description": "Backup schedule frequency in hours\n"
                },
                "backupScheduleRetention": {
                    "type": "integer",
                    "description": "Backup schedule retention in days\n"
                },
                "disableBackup": {
                    "type": "boolean",
                    "description": "Disable automated backup for the database instance\n"
                },
                "engine": {
                    "type": "string",
                    "description": "Database's engine version id\n"
                },
                "isHaCluster": {
                    "type": "boolean",
                    "description": "Enable or disable high availability for the database instance\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the database instance\n"
                },
                "nodeType": {
                    "type": "string",
                    "description": "The type of database instance you want to create\n"
                },
                "password": {
                    "type": "string",
                    "description": "Password for the first user of the database instance\n"
                },
                "privateNetwork": {
                    "$ref": "#/types/scaleway:index/DatabaseInstancePrivateNetwork:DatabaseInstancePrivateNetwork",
                    "description": "List of private network to expose your database instance\n"
                },
                "projectId": {
                    "type": "string",
                    "description": "The project_id you want to attach the resource to\n"
                },
                "region": {
                    "type": "string",
                    "description": "The region you want to attach the resource to\n"
                },
                "settings": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Map of engine settings to be set.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of tags [\"tag1\", \"tag2\", ...] attached to a database instance\n"
                },
                "userName": {
                    "type": "string",
                    "description": "Identifier for the first user of the database instance\n"
                },
                "volumeSizeInGb": {
                    "type": "integer",
                    "description": "Volume size (in GB) when volume_type is not lssd\n"
                },
                "volumeType": {
                    "type": "string",
                    "description": "Type of volume where data are stored\n"
                }
            },
            "requiredInputs": [
                "engine",
                "nodeType"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DatabaseInstance resources.\n",
                "properties": {
                    "backupSameRegion": {
                        "type": "boolean",
                        "description": "Boolean to store logical backups in the same region as the database instance\n"
                    },
                    "backupScheduleFrequency": {
                        "type": "integer",
                        "description": "Backup schedule frequency in hours\n"
                    },
                    "backupScheduleRetention": {
                        "type": "integer",
                        "description": "Backup schedule retention in days\n"
                    },
                    "certificate": {
                        "type": "string",
                        "description": "Certificate of the database instance\n"
                    },
                    "disableBackup": {
                        "type": "boolean",
                        "description": "Disable automated backup for the database instance\n"
                    },
                    "endpointIp": {
                        "type": "string",
                        "description": "Endpoint IP of the database instance\n",
                        "deprecationMessage": "Please use the private_network or the load_balancer attribute"
                    },
                    "endpointPort": {
                        "type": "integer",
                        "description": "Endpoint port of the database instance\n"
                    },
                    "engine": {
                        "type": "string",
                        "description": "Database's engine version id\n"
                    },
                    "isHaCluster": {
                        "type": "boolean",
                        "description": "Enable or disable high availability for the database instance\n"
                    },
                    "loadBalancers": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/scaleway:index/DatabaseInstanceLoadBalancer:DatabaseInstanceLoadBalancer"
                        },
                        "description": "Load balancer of the database instance\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the database instance\n"
                    },
                    "nodeType": {
                        "type": "string",
                        "description": "The type of database instance you want to create\n"
                    },
                    "organizationId": {
                        "type": "string",
                        "description": "The organization_id you want to attach the resource to\n"
                    },
                    "password": {
                        "type": "string",
                        "description": "Password for the first user of the database instance\n"
                    },
                    "privateNetwork": {
                        "$ref": "#/types/scaleway:index/DatabaseInstancePrivateNetwork:DatabaseInstancePrivateNetwork",
                        "description": "List of private network to expose your database instance\n"
                    },
                    "projectId": {
                        "type": "string",
                        "description": "The project_id you want to attach the resource to\n"
                    },
                    "readReplicas": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/scaleway:index/DatabaseInstanceReadReplica:DatabaseInstanceReadReplica"
                        },
                        "description": "Read replicas of the database instance\n"
                    },
                    "region": {
                        "type": "string",
                        "description": "The region you want to attach the resource to\n"
                    },
                    "settings": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "Map of engine settings to be set.\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of tags [\"tag1\", \"tag2\", ...] attached to a database instance\n"
                    },
                    "userName": {
                        "type": "string",
                        "description": "Identifier for the first user of the database instance\n"
                    },
                    "volumeSizeInGb": {
                        "type": "integer",
                        "description": "Volume size (in GB) when volume_type is not lssd\n"
                    },
                    "volumeType": {
                        "type": "string",
                        "description": "Type of volume where data are stored\n"
                    }
                },
                "type": "object"
            }
        },
        "scaleway:index/databasePrivilege:DatabasePrivilege": {
            "properties": {
                "databaseName": {
                    "type": "string",
                    "description": "Database name\n"
                },
                "instanceId": {
                    "type": "string",
                    "description": "Instance on which the database is created\n"
                },
                "permission": {
                    "type": "string",
                    "description": "Privilege\n"
                },
                "userName": {
                    "type": "string",
                    "description": "User name\n"
                }
            },
            "required": [
                "databaseName",
                "instanceId",
                "permission",
                "userName"
            ],
            "inputProperties": {
                "databaseName": {
                    "type": "string",
                    "description": "Database name\n"
                },
                "instanceId": {
                    "type": "string",
                    "description": "Instance on which the database is created\n"
                },
                "permission": {
                    "type": "string",
                    "description": "Privilege\n"
                },
                "userName": {
                    "type": "string",
                    "description": "User name\n"
                }
            },
            "requiredInputs": [
                "databaseName",
                "instanceId",
                "permission",
                "userName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DatabasePrivilege resources.\n",
                "properties": {
                    "databaseName": {
                        "type": "string",
                        "description": "Database name\n"
                    },
                    "instanceId": {
                        "type": "string",
                        "description": "Instance on which the database is created\n"
                    },
                    "permission": {
                        "type": "string",
                        "description": "Privilege\n"
                    },
                    "userName": {
                        "type": "string",
                        "description": "User name\n"
                    }
                },
                "type": "object"
            }
        },
        "scaleway:index/databaseUser:DatabaseUser": {
            "properties": {
                "instanceId": {
                    "type": "string",
                    "description": "Instance on which the user is created\n"
                },
                "isAdmin": {
                    "type": "boolean",
                    "description": "Grant admin permissions to database user\n"
                },
                "name": {
                    "type": "string",
                    "description": "Database user name\n"
                },
                "password": {
                    "type": "string",
                    "description": "Database user password\n"
                },
                "region": {
                    "type": "string",
                    "description": "The region you want to attach the resource to\n"
                }
            },
            "required": [
                "instanceId",
                "name",
                "password",
                "region"
            ],
            "inputProperties": {
                "instanceId": {
                    "type": "string",
                    "description": "Instance on which the user is created\n"
                },
                "isAdmin": {
                    "type": "boolean",
                    "description": "Grant admin permissions to database user\n"
                },
                "name": {
                    "type": "string",
                    "description": "Database user name\n"
                },
                "password": {
                    "type": "string",
                    "description": "Database user password\n"
                },
                "region": {
                    "type": "string",
                    "description": "The region you want to attach the resource to\n"
                }
            },
            "requiredInputs": [
                "instanceId",
                "password"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DatabaseUser resources.\n",
                "properties": {
                    "instanceId": {
                        "type": "string",
                        "description": "Instance on which the user is created\n"
                    },
                    "isAdmin": {
                        "type": "boolean",
                        "description": "Grant admin permissions to database user\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Database user name\n"
                    },
                    "password": {
                        "type": "string",
                        "description": "Database user password\n"
                    },
                    "region": {
                        "type": "string",
                        "description": "The region you want to attach the resource to\n"
                    }
                },
                "type": "object"
            }
        },
        "scaleway:index/domainRecord:DomainRecord": {
            "properties": {
                "data": {
                    "type": "string",
                    "description": "The data of the record\n"
                },
                "dnsZone": {
                    "type": "string",
                    "description": "The zone you want to add the record in\n"
                },
                "geoIp": {
                    "$ref": "#/types/scaleway:index/DomainRecordGeoIp:DomainRecordGeoIp",
                    "description": "Return record based on client localisation\n"
                },
                "httpService": {
                    "$ref": "#/types/scaleway:index/DomainRecordHttpService:DomainRecordHttpService",
                    "description": "Return record based on client localisation\n"
                },
                "keepEmptyZone": {
                    "type": "boolean",
                    "description": "When destroy a resource record, if a zone have only NS, delete the zone\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the record\n"
                },
                "priority": {
                    "type": "integer",
                    "description": "The priority of the record\n"
                },
                "projectId": {
                    "type": "string",
                    "description": "The project_id you want to attach the resource to\n"
                },
                "rootZone": {
                    "type": "boolean",
                    "description": "Does the DNS zone is the root zone or not\n"
                },
                "ttl": {
                    "type": "integer",
                    "description": "The ttl of the record\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type of the record\n"
                },
                "views": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/scaleway:index/DomainRecordView:DomainRecordView"
                    },
                    "description": "Return record based on client subnet\n"
                },
                "weighteds": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/scaleway:index/DomainRecordWeighted:DomainRecordWeighted"
                    },
                    "description": "Return record based on weight\n"
                }
            },
            "required": [
                "data",
                "dnsZone",
                "name",
                "priority",
                "projectId",
                "rootZone",
                "type"
            ],
            "inputProperties": {
                "data": {
                    "type": "string",
                    "description": "The data of the record\n"
                },
                "dnsZone": {
                    "type": "string",
                    "description": "The zone you want to add the record in\n"
                },
                "geoIp": {
                    "$ref": "#/types/scaleway:index/DomainRecordGeoIp:DomainRecordGeoIp",
                    "description": "Return record based on client localisation\n"
                },
                "httpService": {
                    "$ref": "#/types/scaleway:index/DomainRecordHttpService:DomainRecordHttpService",
                    "description": "Return record based on client localisation\n"
                },
                "keepEmptyZone": {
                    "type": "boolean",
                    "description": "When destroy a resource record, if a zone have only NS, delete the zone\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the record\n"
                },
                "priority": {
                    "type": "integer",
                    "description": "The priority of the record\n"
                },
                "projectId": {
                    "type": "string",
                    "description": "The project_id you want to attach the resource to\n"
                },
                "ttl": {
                    "type": "integer",
                    "description": "The ttl of the record\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type of the record\n"
                },
                "views": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/scaleway:index/DomainRecordView:DomainRecordView"
                    },
                    "description": "Return record based on client subnet\n"
                },
                "weighteds": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/scaleway:index/DomainRecordWeighted:DomainRecordWeighted"
                    },
                    "description": "Return record based on weight\n"
                }
            },
            "requiredInputs": [
                "data",
                "dnsZone",
                "type"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DomainRecord resources.\n",
                "properties": {
                    "data": {
                        "type": "string",
                        "description": "The data of the record\n"
                    },
                    "dnsZone": {
                        "type": "string",
                        "description": "The zone you want to add the record in\n"
                    },
                    "geoIp": {
                        "$ref": "#/types/scaleway:index/DomainRecordGeoIp:DomainRecordGeoIp",
                        "description": "Return record based on client localisation\n"
                    },
                    "httpService": {
                        "$ref": "#/types/scaleway:index/DomainRecordHttpService:DomainRecordHttpService",
                        "description": "Return record based on client localisation\n"
                    },
                    "keepEmptyZone": {
                        "type": "boolean",
                        "description": "When destroy a resource record, if a zone have only NS, delete the zone\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the record\n"
                    },
                    "priority": {
                        "type": "integer",
                        "description": "The priority of the record\n"
                    },
                    "projectId": {
                        "type": "string",
                        "description": "The project_id you want to attach the resource to\n"
                    },
                    "rootZone": {
                        "type": "boolean",
                        "description": "Does the DNS zone is the root zone or not\n"
                    },
                    "ttl": {
                        "type": "integer",
                        "description": "The ttl of the record\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "The type of the record\n"
                    },
                    "views": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/scaleway:index/DomainRecordView:DomainRecordView"
                        },
                        "description": "Return record based on client subnet\n"
                    },
                    "weighteds": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/scaleway:index/DomainRecordWeighted:DomainRecordWeighted"
                        },
                        "description": "Return record based on weight\n"
                    }
                },
                "type": "object"
            }
        },
        "scaleway:index/domainZone:DomainZone": {
            "properties": {
                "domain": {
                    "type": "string",
                    "description": "The domain where the DNS zone will be created.\n"
                },
                "message": {
                    "type": "string",
                    "description": "Message\n"
                },
                "ns": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "NameServer list for zone.\n"
                },
                "nsDefaults": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "NameServer default list for zone.\n"
                },
                "nsMasters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "NameServer master list for zone.\n"
                },
                "projectId": {
                    "type": "string",
                    "description": "The project_id you want to attach the resource to\n"
                },
                "status": {
                    "type": "string",
                    "description": "The domain zone status.\n"
                },
                "subdomain": {
                    "type": "string",
                    "description": "The subdomain of the DNS zone to create.\n"
                },
                "updatedAt": {
                    "type": "string",
                    "description": "The date and time of the last update of the DNS zone.\n"
                }
            },
            "required": [
                "domain",
                "message",
                "ns",
                "nsDefaults",
                "nsMasters",
                "projectId",
                "status",
                "subdomain",
                "updatedAt"
            ],
            "inputProperties": {
                "domain": {
                    "type": "string",
                    "description": "The domain where the DNS zone will be created.\n"
                },
                "projectId": {
                    "type": "string",
                    "description": "The project_id you want to attach the resource to\n"
                },
                "subdomain": {
                    "type": "string",
                    "description": "The subdomain of the DNS zone to create.\n"
                }
            },
            "requiredInputs": [
                "domain",
                "subdomain"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DomainZone resources.\n",
                "properties": {
                    "domain": {
                        "type": "string",
                        "description": "The domain where the DNS zone will be created.\n"
                    },
                    "message": {
                        "type": "string",
                        "description": "Message\n"
                    },
                    "ns": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "NameServer list for zone.\n"
                    },
                    "nsDefaults": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "NameServer default list for zone.\n"
                    },
                    "nsMasters": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "NameServer master list for zone.\n"
                    },
                    "projectId": {
                        "type": "string",
                        "description": "The project_id you want to attach the resource to\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "The domain zone status.\n"
                    },
                    "subdomain": {
                        "type": "string",
                        "description": "The subdomain of the DNS zone to create.\n"
                    },
                    "updatedAt": {
                        "type": "string",
                        "description": "The date and time of the last update of the DNS zone.\n"
                    }
                },
                "type": "object"
            }
        },
        "scaleway:index/functionNamespace:FunctionNamespace": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "The description of the function namespace\n"
                },
                "environmentVariables": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "The environment variables of the function namespace\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the function namespace\n"
                },
                "organizationId": {
                    "type": "string",
                    "description": "The organization_id you want to attach the resource to\n"
                },
                "projectId": {
                    "type": "string",
                    "description": "The project_id you want to attach the resource to\n"
                },
                "region": {
                    "type": "string",
                    "description": "The region you want to attach the resource to\n"
                },
                "registryEndpoint": {
                    "type": "string",
                    "description": "The endpoint reachable by docker\n"
                },
                "registryNamespaceId": {
                    "type": "string",
                    "description": "The ID of the registry namespace\n"
                }
            },
            "required": [
                "name",
                "organizationId",
                "projectId",
                "region",
                "registryEndpoint",
                "registryNamespaceId"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "The description of the function namespace\n"
                },
                "environmentVariables": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "The environment variables of the function namespace\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the function namespace\n"
                },
                "projectId": {
                    "type": "string",
                    "description": "The project_id you want to attach the resource to\n"
                },
                "region": {
                    "type": "string",
                    "description": "The region you want to attach the resource to\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering FunctionNamespace resources.\n",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "The description of the function namespace\n"
                    },
                    "environmentVariables": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "The environment variables of the function namespace\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the function namespace\n"
                    },
                    "organizationId": {
                        "type": "string",
                        "description": "The organization_id you want to attach the resource to\n"
                    },
                    "projectId": {
                        "type": "string",
                        "description": "The project_id you want to attach the resource to\n"
                    },
                    "region": {
                        "type": "string",
                        "description": "The region you want to attach the resource to\n"
                    },
                    "registryEndpoint": {
                        "type": "string",
                        "description": "The endpoint reachable by docker\n"
                    },
                    "registryNamespaceId": {
                        "type": "string",
                        "description": "The ID of the registry namespace\n"
                    }
                },
                "type": "object"
            }
        },
        "scaleway:index/instanceIp:InstanceIp": {
            "properties": {
                "address": {
                    "type": "string",
                    "description": "The IP address\n"
                },
                "organizationId": {
                    "type": "string",
                    "description": "The organization_id you want to attach the resource to\n"
                },
                "projectId": {
                    "type": "string",
                    "description": "The project_id you want to attach the resource to\n"
                },
                "reverse": {
                    "type": "string",
                    "description": "The reverse DNS for this IP\n"
                },
                "serverId": {
                    "type": "string",
                    "description": "The server associated with this IP\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The tags associated with the ip\n"
                },
                "zone": {
                    "type": "string",
                    "description": "The zone you want to attach the resource to\n"
                }
            },
            "required": [
                "address",
                "organizationId",
                "projectId",
                "reverse",
                "serverId",
                "zone"
            ],
            "inputProperties": {
                "projectId": {
                    "type": "string",
                    "description": "The project_id you want to attach the resource to\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The tags associated with the ip\n"
                },
                "zone": {
                    "type": "string",
                    "description": "The zone you want to attach the resource to\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering InstanceIp resources.\n",
                "properties": {
                    "address": {
                        "type": "string",
                        "description": "The IP address\n"
                    },
                    "organizationId": {
                        "type": "string",
                        "description": "The organization_id you want to attach the resource to\n"
                    },
                    "projectId": {
                        "type": "string",
                        "description": "The project_id you want to attach the resource to\n"
                    },
                    "reverse": {
                        "type": "string",
                        "description": "The reverse DNS for this IP\n"
                    },
                    "serverId": {
                        "type": "string",
                        "description": "The server associated with this IP\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The tags associated with the ip\n"
                    },
                    "zone": {
                        "type": "string",
                        "description": "The zone you want to attach the resource to\n"
                    }
                },
                "type": "object"
            }
        },
        "scaleway:index/instanceIpReverseDns:InstanceIpReverseDns": {
            "properties": {
                "ipId": {
                    "type": "string",
                    "description": "The IP ID or IP address\n"
                },
                "reverse": {
                    "type": "string",
                    "description": "The reverse DNS for this IP\n"
                },
                "zone": {
                    "type": "string",
                    "description": "The zone you want to attach the resource to\n"
                }
            },
            "required": [
                "ipId",
                "reverse",
                "zone"
            ],
            "inputProperties": {
                "ipId": {
                    "type": "string",
                    "description": "The IP ID or IP address\n"
                },
                "reverse": {
                    "type": "string",
                    "description": "The reverse DNS for this IP\n"
                },
                "zone": {
                    "type": "string",
                    "description": "The zone you want to attach the resource to\n"
                }
            },
            "requiredInputs": [
                "ipId",
                "reverse"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering InstanceIpReverseDns resources.\n",
                "properties": {
                    "ipId": {
                        "type": "string",
                        "description": "The IP ID or IP address\n"
                    },
                    "reverse": {
                        "type": "string",
                        "description": "The reverse DNS for this IP\n"
                    },
                    "zone": {
                        "type": "string",
                        "description": "The zone you want to attach the resource to\n"
                    }
                },
                "type": "object"
            }
        },
        "scaleway:index/instancePlacementGroup:InstancePlacementGroup": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "The name of the placement group\n"
                },
                "organizationId": {
                    "type": "string",
                    "description": "The organization_id you want to attach the resource to\n"
                },
                "policyMode": {
                    "type": "string",
                    "description": "One of the two policy_mode may be selected: enforced or optional.\n"
                },
                "policyRespected": {
                    "type": "boolean",
                    "description": "Is true when the policy is respected.\n"
                },
                "policyType": {
                    "type": "string",
                    "description": "The operating mode is selected by a policy_type\n"
                },
                "projectId": {
                    "type": "string",
                    "description": "The project_id you want to attach the resource to\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The tags associated with the placement group\n"
                },
                "zone": {
                    "type": "string",
                    "description": "The zone you want to attach the resource to\n"
                }
            },
            "required": [
                "name",
                "organizationId",
                "policyRespected",
                "projectId",
                "zone"
            ],
            "inputProperties": {
                "name": {
                    "type": "string",
                    "description": "The name of the placement group\n"
                },
                "policyMode": {
                    "type": "string",
                    "description": "One of the two policy_mode may be selected: enforced or optional.\n"
                },
                "policyType": {
                    "type": "string",
                    "description": "The operating mode is selected by a policy_type\n"
                },
                "projectId": {
                    "type": "string",
                    "description": "The project_id you want to attach the resource to\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The tags associated with the placement group\n"
                },
                "zone": {
                    "type": "string",
                    "description": "The zone you want to attach the resource to\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering InstancePlacementGroup resources.\n",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The name of the placement group\n"
                    },
                    "organizationId": {
                        "type": "string",
                        "description": "The organization_id you want to attach the resource to\n"
                    },
                    "policyMode": {
                        "type": "string",
                        "description": "One of the two policy_mode may be selected: enforced or optional.\n"
                    },
                    "policyRespected": {
                        "type": "boolean",
                        "description": "Is true when the policy is respected.\n"
                    },
                    "policyType": {
                        "type": "string",
                        "description": "The operating mode is selected by a policy_type\n"
                    },
                    "projectId": {
                        "type": "string",
                        "description": "The project_id you want to attach the resource to\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The tags associated with the placement group\n"
                    },
                    "zone": {
                        "type": "string",
                        "description": "The zone you want to attach the resource to\n"
                    }
                },
                "type": "object"
            }
        },
        "scaleway:index/instancePrivateNic:InstancePrivateNic": {
            "properties": {
                "macAddress": {
                    "type": "string",
                    "description": "MAC address of the NIC\n"
                },
                "privateNetworkId": {
                    "type": "string",
                    "description": "The private network ID\n"
                },
                "serverId": {
                    "type": "string",
                    "description": "The server ID\n"
                },
                "zone": {
                    "type": "string",
                    "description": "The zone you want to attach the resource to\n"
                }
            },
            "required": [
                "macAddress",
                "privateNetworkId",
                "serverId",
                "zone"
            ],
            "inputProperties": {
                "privateNetworkId": {
                    "type": "string",
                    "description": "The private network ID\n"
                },
                "serverId": {
                    "type": "string",
                    "description": "The server ID\n"
                },
                "zone": {
                    "type": "string",
                    "description": "The zone you want to attach the resource to\n"
                }
            },
            "requiredInputs": [
                "privateNetworkId",
                "serverId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering InstancePrivateNic resources.\n",
                "properties": {
                    "macAddress": {
                        "type": "string",
                        "description": "MAC address of the NIC\n"
                    },
                    "privateNetworkId": {
                        "type": "string",
                        "description": "The private network ID\n"
                    },
                    "serverId": {
                        "type": "string",
                        "description": "The server ID\n"
                    },
                    "zone": {
                        "type": "string",
                        "description": "The zone you want to attach the resource to\n"
                    }
                },
                "type": "object"
            }
        },
        "scaleway:index/instanceSecurityGroup:InstanceSecurityGroup": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "The description of the security group\n"
                },
                "enableDefaultSecurity": {
                    "type": "boolean",
                    "description": "Enable blocking of SMTP on IPv4 and IPv6\n"
                },
                "externalRules": {
                    "type": "boolean"
                },
                "inboundDefaultPolicy": {
                    "type": "string",
                    "description": "Default inbound traffic policy for this security group\n"
                },
                "inboundRules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/scaleway:index/InstanceSecurityGroupInboundRule:InstanceSecurityGroupInboundRule"
                    },
                    "description": "Inbound rules for this security group\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the security group\n"
                },
                "organizationId": {
                    "type": "string",
                    "description": "The organization_id you want to attach the resource to\n"
                },
                "outboundDefaultPolicy": {
                    "type": "string",
                    "description": "Default outbound traffic policy for this security group\n"
                },
                "outboundRules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/scaleway:index/InstanceSecurityGroupOutboundRule:InstanceSecurityGroupOutboundRule"
                    },
                    "description": "Outbound rules for this security group\n"
                },
                "projectId": {
                    "type": "string",
                    "description": "The project_id you want to attach the resource to\n"
                },
                "stateful": {
                    "type": "boolean",
                    "description": "The stateful value of the security group\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The tags associated with the security group\n"
                },
                "zone": {
                    "type": "string",
                    "description": "The zone you want to attach the resource to\n"
                }
            },
            "required": [
                "name",
                "organizationId",
                "projectId",
                "zone"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "The description of the security group\n"
                },
                "enableDefaultSecurity": {
                    "type": "boolean",
                    "description": "Enable blocking of SMTP on IPv4 and IPv6\n"
                },
                "externalRules": {
                    "type": "boolean"
                },
                "inboundDefaultPolicy": {
                    "type": "string",
                    "description": "Default inbound traffic policy for this security group\n"
                },
                "inboundRules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/scaleway:index/InstanceSecurityGroupInboundRule:InstanceSecurityGroupInboundRule"
                    },
                    "description": "Inbound rules for this security group\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the security group\n"
                },
                "outboundDefaultPolicy": {
                    "type": "string",
                    "description": "Default outbound traffic policy for this security group\n"
                },
                "outboundRules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/scaleway:index/InstanceSecurityGroupOutboundRule:InstanceSecurityGroupOutboundRule"
                    },
                    "description": "Outbound rules for this security group\n"
                },
                "projectId": {
                    "type": "string",
                    "description": "The project_id you want to attach the resource to\n"
                },
                "stateful": {
                    "type": "boolean",
                    "description": "The stateful value of the security group\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The tags associated with the security group\n"
                },
                "zone": {
                    "type": "string",
                    "description": "The zone you want to attach the resource to\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering InstanceSecurityGroup resources.\n",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "The description of the security group\n"
                    },
                    "enableDefaultSecurity": {
                        "type": "boolean",
                        "description": "Enable blocking of SMTP on IPv4 and IPv6\n"
                    },
                    "externalRules": {
                        "type": "boolean"
                    },
                    "inboundDefaultPolicy": {
                        "type": "string",
                        "description": "Default inbound traffic policy for this security group\n"
                    },
                    "inboundRules": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/scaleway:index/InstanceSecurityGroupInboundRule:InstanceSecurityGroupInboundRule"
                        },
                        "description": "Inbound rules for this security group\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the security group\n"
                    },
                    "organizationId": {
                        "type": "string",
                        "description": "The organization_id you want to attach the resource to\n"
                    },
                    "outboundDefaultPolicy": {
                        "type": "string",
                        "description": "Default outbound traffic policy for this security group\n"
                    },
                    "outboundRules": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/scaleway:index/InstanceSecurityGroupOutboundRule:InstanceSecurityGroupOutboundRule"
                        },
                        "description": "Outbound rules for this security group\n"
                    },
                    "projectId": {
                        "type": "string",
                        "description": "The project_id you want to attach the resource to\n"
                    },
                    "stateful": {
                        "type": "boolean",
                        "description": "The stateful value of the security group\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The tags associated with the security group\n"
                    },
                    "zone": {
                        "type": "string",
                        "description": "The zone you want to attach the resource to\n"
                    }
                },
                "type": "object"
            }
        },
        "scaleway:index/instanceSecurityGroupRules:InstanceSecurityGroupRules": {
            "properties": {
                "inboundRules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/scaleway:index/InstanceSecurityGroupRulesInboundRule:InstanceSecurityGroupRulesInboundRule"
                    },
                    "description": "Inbound rules for this set of security group rules\n"
                },
                "outboundRules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/scaleway:index/InstanceSecurityGroupRulesOutboundRule:InstanceSecurityGroupRulesOutboundRule"
                    },
                    "description": "Outbound rules for this set of security group rules\n"
                },
                "securityGroupId": {
                    "type": "string",
                    "description": "The security group associated with this volume\n"
                }
            },
            "required": [
                "securityGroupId"
            ],
            "inputProperties": {
                "inboundRules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/scaleway:index/InstanceSecurityGroupRulesInboundRule:InstanceSecurityGroupRulesInboundRule"
                    },
                    "description": "Inbound rules for this set of security group rules\n"
                },
                "outboundRules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/scaleway:index/InstanceSecurityGroupRulesOutboundRule:InstanceSecurityGroupRulesOutboundRule"
                    },
                    "description": "Outbound rules for this set of security group rules\n"
                },
                "securityGroupId": {
                    "type": "string",
                    "description": "The security group associated with this volume\n"
                }
            },
            "requiredInputs": [
                "securityGroupId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering InstanceSecurityGroupRules resources.\n",
                "properties": {
                    "inboundRules": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/scaleway:index/InstanceSecurityGroupRulesInboundRule:InstanceSecurityGroupRulesInboundRule"
                        },
                        "description": "Inbound rules for this set of security group rules\n"
                    },
                    "outboundRules": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/scaleway:index/InstanceSecurityGroupRulesOutboundRule:InstanceSecurityGroupRulesOutboundRule"
                        },
                        "description": "Outbound rules for this set of security group rules\n"
                    },
                    "securityGroupId": {
                        "type": "string",
                        "description": "The security group associated with this volume\n"
                    }
                },
                "type": "object"
            }
        },
        "scaleway:index/instanceServer:InstanceServer": {
            "properties": {
                "additionalVolumeIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The additional volumes attached to the server\n"
                },
                "bootType": {
                    "type": "string",
                    "description": "The boot type of the server\n"
                },
                "bootscriptId": {
                    "type": "string",
                    "description": "ID of the target bootscript (set boot_type to bootscript)\n"
                },
                "cloudInit": {
                    "type": "string",
                    "description": "The cloud init script associated with this server\n"
                },
                "enableDynamicIp": {
                    "type": "boolean",
                    "description": "Enable dynamic IP on the server\n"
                },
                "enableIpv6": {
                    "type": "boolean",
                    "description": "Determines if IPv6 is enabled for the server\n"
                },
                "image": {
                    "type": "string",
                    "description": "The UUID or the label of the base image used by the server\n"
                },
                "ipId": {
                    "type": "string",
                    "description": "The ID of the reserved IP for the server\n"
                },
                "ipv6Address": {
                    "type": "string",
                    "description": "The default public IPv6 address routed to the server.\n"
                },
                "ipv6Gateway": {
                    "type": "string",
                    "description": "The IPv6 gateway address\n"
                },
                "ipv6PrefixLength": {
                    "type": "integer",
                    "description": "The IPv6 prefix length routed to the server.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the server\n"
                },
                "organizationId": {
                    "type": "string",
                    "description": "The organization_id you want to attach the resource to\n"
                },
                "placementGroupId": {
                    "type": "string",
                    "description": "The placement group the server is attached to\n"
                },
                "placementGroupPolicyRespected": {
                    "type": "boolean",
                    "description": "True when the placement group policy is respected\n"
                },
                "privateIp": {
                    "type": "string",
                    "description": "The Scaleway internal IP address of the server\n"
                },
                "privateNetworks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/scaleway:index/InstanceServerPrivateNetwork:InstanceServerPrivateNetwork"
                    },
                    "description": "List of private network to connect with your instance\n"
                },
                "projectId": {
                    "type": "string",
                    "description": "The project_id you want to attach the resource to\n"
                },
                "publicIp": {
                    "type": "string",
                    "description": "The public IPv4 address of the server\n"
                },
                "rootVolume": {
                    "$ref": "#/types/scaleway:index/InstanceServerRootVolume:InstanceServerRootVolume",
                    "description": "Root volume attached to the server on creation\n"
                },
                "securityGroupId": {
                    "type": "string",
                    "description": "The security group the server is attached to\n"
                },
                "state": {
                    "type": "string",
                    "description": "The state of the server should be: started, stopped, standby\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The tags associated with the server\n"
                },
                "type": {
                    "type": "string",
                    "description": "The instance type of the server\n"
                },
                "userData": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "The user data associated with the server\n"
                },
                "zone": {
                    "type": "string",
                    "description": "The zone you want to attach the resource to\n"
                }
            },
            "required": [
                "bootscriptId",
                "image",
                "ipv6Address",
                "ipv6Gateway",
                "ipv6PrefixLength",
                "name",
                "organizationId",
                "placementGroupPolicyRespected",
                "privateIp",
                "projectId",
                "publicIp",
                "rootVolume",
                "securityGroupId",
                "type",
                "zone"
            ],
            "inputProperties": {
                "additionalVolumeIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The additional volumes attached to the server\n"
                },
                "bootType": {
                    "type": "string",
                    "description": "The boot type of the server\n"
                },
                "bootscriptId": {
                    "type": "string",
                    "description": "ID of the target bootscript (set boot_type to bootscript)\n"
                },
                "cloudInit": {
                    "type": "string",
                    "description": "The cloud init script associated with this server\n"
                },
                "enableDynamicIp": {
                    "type": "boolean",
                    "description": "Enable dynamic IP on the server\n"
                },
                "enableIpv6": {
                    "type": "boolean",
                    "description": "Determines if IPv6 is enabled for the server\n"
                },
                "image": {
                    "type": "string",
                    "description": "The UUID or the label of the base image used by the server\n"
                },
                "ipId": {
                    "type": "string",
                    "description": "The ID of the reserved IP for the server\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the server\n"
                },
                "placementGroupId": {
                    "type": "string",
                    "description": "The placement group the server is attached to\n"
                },
                "privateNetworks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/scaleway:index/InstanceServerPrivateNetwork:InstanceServerPrivateNetwork"
                    },
                    "description": "List of private network to connect with your instance\n"
                },
                "projectId": {
                    "type": "string",
                    "description": "The project_id you want to attach the resource to\n"
                },
                "rootVolume": {
                    "$ref": "#/types/scaleway:index/InstanceServerRootVolume:InstanceServerRootVolume",
                    "description": "Root volume attached to the server on creation\n"
                },
                "securityGroupId": {
                    "type": "string",
                    "description": "The security group the server is attached to\n"
                },
                "state": {
                    "type": "string",
                    "description": "The state of the server should be: started, stopped, standby\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The tags associated with the server\n"
                },
                "type": {
                    "type": "string",
                    "description": "The instance type of the server\n"
                },
                "userData": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "The user data associated with the server\n"
                },
                "zone": {
                    "type": "string",
                    "description": "The zone you want to attach the resource to\n"
                }
            },
            "requiredInputs": [
                "image",
                "type"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering InstanceServer resources.\n",
                "properties": {
                    "additionalVolumeIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The additional volumes attached to the server\n"
                    },
                    "bootType": {
                        "type": "string",
                        "description": "The boot type of the server\n"
                    },
                    "bootscriptId": {
                        "type": "string",
                        "description": "ID of the target bootscript (set boot_type to bootscript)\n"
                    },
                    "cloudInit": {
                        "type": "string",
                        "description": "The cloud init script associated with this server\n"
                    },
                    "enableDynamicIp": {
                        "type": "boolean",
                        "description": "Enable dynamic IP on the server\n"
                    },
                    "enableIpv6": {
                        "type": "boolean",
                        "description": "Determines if IPv6 is enabled for the server\n"
                    },
                    "image": {
                        "type": "string",
                        "description": "The UUID or the label of the base image used by the server\n"
                    },
                    "ipId": {
                        "type": "string",
                        "description": "The ID of the reserved IP for the server\n"
                    },
                    "ipv6Address": {
                        "type": "string",
                        "description": "The default public IPv6 address routed to the server.\n"
                    },
                    "ipv6Gateway": {
                        "type": "string",
                        "description": "The IPv6 gateway address\n"
                    },
                    "ipv6PrefixLength": {
                        "type": "integer",
                        "description": "The IPv6 prefix length routed to the server.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the server\n"
                    },
                    "organizationId": {
                        "type": "string",
                        "description": "The organization_id you want to attach the resource to\n"
                    },
                    "placementGroupId": {
                        "type": "string",
                        "description": "The placement group the server is attached to\n"
                    },
                    "placementGroupPolicyRespected": {
                        "type": "boolean",
                        "description": "True when the placement group policy is respected\n"
                    },
                    "privateIp": {
                        "type": "string",
                        "description": "The Scaleway internal IP address of the server\n"
                    },
                    "privateNetworks": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/scaleway:index/InstanceServerPrivateNetwork:InstanceServerPrivateNetwork"
                        },
                        "description": "List of private network to connect with your instance\n"
                    },
                    "projectId": {
                        "type": "string",
                        "description": "The project_id you want to attach the resource to\n"
                    },
                    "publicIp": {
                        "type": "string",
                        "description": "The public IPv4 address of the server\n"
                    },
                    "rootVolume": {
                        "$ref": "#/types/scaleway:index/InstanceServerRootVolume:InstanceServerRootVolume",
                        "description": "Root volume attached to the server on creation\n"
                    },
                    "securityGroupId": {
                        "type": "string",
                        "description": "The security group the server is attached to\n"
                    },
                    "state": {
                        "type": "string",
                        "description": "The state of the server should be: started, stopped, standby\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The tags associated with the server\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "The instance type of the server\n"
                    },
                    "userData": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "The user data associated with the server\n"
                    },
                    "zone": {
                        "type": "string",
                        "description": "The zone you want to attach the resource to\n"
                    }
                },
                "type": "object"
            }
        },
        "scaleway:index/instanceSnapshot:InstanceSnapshot": {
            "properties": {
                "createdAt": {
                    "type": "string",
                    "description": "The date and time of the creation of the snapshot\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the snapshot\n"
                },
                "organizationId": {
                    "type": "string",
                    "description": "The organization_id you want to attach the resource to\n"
                },
                "projectId": {
                    "type": "string",
                    "description": "The project_id you want to attach the resource to\n"
                },
                "sizeInGb": {
                    "type": "integer",
                    "description": "The size of the snapshot in gigabyte\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The tags associated with the snapshot\n"
                },
                "type": {
                    "type": "string",
                    "description": "The volume type of the snapshot\n"
                },
                "volumeId": {
                    "type": "string",
                    "description": "ID of the volume to take a snapshot from\n"
                },
                "zone": {
                    "type": "string",
                    "description": "The zone you want to attach the resource to\n"
                }
            },
            "required": [
                "createdAt",
                "name",
                "organizationId",
                "projectId",
                "sizeInGb",
                "type",
                "volumeId",
                "zone"
            ],
            "inputProperties": {
                "name": {
                    "type": "string",
                    "description": "The name of the snapshot\n"
                },
                "projectId": {
                    "type": "string",
                    "description": "The project_id you want to attach the resource to\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The tags associated with the snapshot\n"
                },
                "volumeId": {
                    "type": "string",
                    "description": "ID of the volume to take a snapshot from\n"
                },
                "zone": {
                    "type": "string",
                    "description": "The zone you want to attach the resource to\n"
                }
            },
            "requiredInputs": [
                "volumeId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering InstanceSnapshot resources.\n",
                "properties": {
                    "createdAt": {
                        "type": "string",
                        "description": "The date and time of the creation of the snapshot\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the snapshot\n"
                    },
                    "organizationId": {
                        "type": "string",
                        "description": "The organization_id you want to attach the resource to\n"
                    },
                    "projectId": {
                        "type": "string",
                        "description": "The project_id you want to attach the resource to\n"
                    },
                    "sizeInGb": {
                        "type": "integer",
                        "description": "The size of the snapshot in gigabyte\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The tags associated with the snapshot\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "The volume type of the snapshot\n"
                    },
                    "volumeId": {
                        "type": "string",
                        "description": "ID of the volume to take a snapshot from\n"
                    },
                    "zone": {
                        "type": "string",
                        "description": "The zone you want to attach the resource to\n"
                    }
                },
                "type": "object"
            }
        },
        "scaleway:index/instanceVolume:InstanceVolume": {
            "properties": {
                "fromSnapshotId": {
                    "type": "string",
                    "description": "Create a volume based on a image\n"
                },
                "fromVolumeId": {
                    "type": "string",
                    "description": "Create a copy of an existing volume\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the volume\n"
                },
                "organizationId": {
                    "type": "string",
                    "description": "The organization_id you want to attach the resource to\n"
                },
                "projectId": {
                    "type": "string",
                    "description": "The project_id you want to attach the resource to\n"
                },
                "serverId": {
                    "type": "string",
                    "description": "The server associated with this volume\n"
                },
                "sizeInGb": {
                    "type": "integer",
                    "description": "The size of the volume in gigabyte\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The tags associated with the volume\n"
                },
                "type": {
                    "type": "string",
                    "description": "The volume type\n"
                },
                "zone": {
                    "type": "string",
                    "description": "The zone you want to attach the resource to\n"
                }
            },
            "required": [
                "name",
                "organizationId",
                "projectId",
                "serverId",
                "type",
                "zone"
            ],
            "inputProperties": {
                "fromSnapshotId": {
                    "type": "string",
                    "description": "Create a volume based on a image\n"
                },
                "fromVolumeId": {
                    "type": "string",
                    "description": "Create a copy of an existing volume\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the volume\n"
                },
                "projectId": {
                    "type": "string",
                    "description": "The project_id you want to attach the resource to\n"
                },
                "sizeInGb": {
                    "type": "integer",
                    "description": "The size of the volume in gigabyte\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The tags associated with the volume\n"
                },
                "type": {
                    "type": "string",
                    "description": "The volume type\n"
                },
                "zone": {
                    "type": "string",
                    "description": "The zone you want to attach the resource to\n"
                }
            },
            "requiredInputs": [
                "type"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering InstanceVolume resources.\n",
                "properties": {
                    "fromSnapshotId": {
                        "type": "string",
                        "description": "Create a volume based on a image\n"
                    },
                    "fromVolumeId": {
                        "type": "string",
                        "description": "Create a copy of an existing volume\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the volume\n"
                    },
                    "organizationId": {
                        "type": "string",
                        "description": "The organization_id you want to attach the resource to\n"
                    },
                    "projectId": {
                        "type": "string",
                        "description": "The project_id you want to attach the resource to\n"
                    },
                    "serverId": {
                        "type": "string",
                        "description": "The server associated with this volume\n"
                    },
                    "sizeInGb": {
                        "type": "integer",
                        "description": "The size of the volume in gigabyte\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The tags associated with the volume\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "The volume type\n"
                    },
                    "zone": {
                        "type": "string",
                        "description": "The zone you want to attach the resource to\n"
                    }
                },
                "type": "object"
            }
        },
        "scaleway:index/iotDevice:IotDevice": {
            "properties": {
                "allowInsecure": {
                    "type": "boolean",
                    "description": "Allow plain and server-authenticated SSL connections in addition to mutually-authenticated ones\n"
                },
                "allowMultipleConnections": {
                    "type": "boolean",
                    "description": "Allow multiple connections\n"
                },
                "certificate": {
                    "$ref": "#/types/scaleway:index/IotDeviceCertificate:IotDeviceCertificate",
                    "description": "Certificate section of the device\n"
                },
                "createdAt": {
                    "type": "string",
                    "description": "The date and time of the creation of the device\n"
                },
                "description": {
                    "type": "string",
                    "description": "The description of the device\n"
                },
                "hubId": {
                    "type": "string",
                    "description": "The ID of the hub on which this device will be created\n"
                },
                "isConnected": {
                    "type": "boolean",
                    "description": "The MQTT connection status of the device\n"
                },
                "lastActivityAt": {
                    "type": "string",
                    "description": "The date and time of last MQTT activity of the device\n"
                },
                "messageFilters": {
                    "$ref": "#/types/scaleway:index/IotDeviceMessageFilters:IotDeviceMessageFilters",
                    "description": "Rules to authorize or deny the device to publish/subscribe to specific topics\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the device\n"
                },
                "region": {
                    "type": "string",
                    "description": "The region you want to attach the resource to\n"
                },
                "status": {
                    "type": "string",
                    "description": "The status of the device\n"
                },
                "updatedAt": {
                    "type": "string",
                    "description": "The date and time of the last update of the device\n"
                }
            },
            "required": [
                "certificate",
                "createdAt",
                "hubId",
                "isConnected",
                "lastActivityAt",
                "name",
                "region",
                "status",
                "updatedAt"
            ],
            "inputProperties": {
                "allowInsecure": {
                    "type": "boolean",
                    "description": "Allow plain and server-authenticated SSL connections in addition to mutually-authenticated ones\n"
                },
                "allowMultipleConnections": {
                    "type": "boolean",
                    "description": "Allow multiple connections\n"
                },
                "certificate": {
                    "$ref": "#/types/scaleway:index/IotDeviceCertificate:IotDeviceCertificate",
                    "description": "Certificate section of the device\n"
                },
                "description": {
                    "type": "string",
                    "description": "The description of the device\n"
                },
                "hubId": {
                    "type": "string",
                    "description": "The ID of the hub on which this device will be created\n"
                },
                "messageFilters": {
                    "$ref": "#/types/scaleway:index/IotDeviceMessageFilters:IotDeviceMessageFilters",
                    "description": "Rules to authorize or deny the device to publish/subscribe to specific topics\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the device\n"
                },
                "region": {
                    "type": "string",
                    "description": "The region you want to attach the resource to\n"
                }
            },
            "requiredInputs": [
                "hubId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering IotDevice resources.\n",
                "properties": {
                    "allowInsecure": {
                        "type": "boolean",
                        "description": "Allow plain and server-authenticated SSL connections in addition to mutually-authenticated ones\n"
                    },
                    "allowMultipleConnections": {
                        "type": "boolean",
                        "description": "Allow multiple connections\n"
                    },
                    "certificate": {
                        "$ref": "#/types/scaleway:index/IotDeviceCertificate:IotDeviceCertificate",
                        "description": "Certificate section of the device\n"
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "The date and time of the creation of the device\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "The description of the device\n"
                    },
                    "hubId": {
                        "type": "string",
                        "description": "The ID of the hub on which this device will be created\n"
                    },
                    "isConnected": {
                        "type": "boolean",
                        "description": "The MQTT connection status of the device\n"
                    },
                    "lastActivityAt": {
                        "type": "string",
                        "description": "The date and time of last MQTT activity of the device\n"
                    },
                    "messageFilters": {
                        "$ref": "#/types/scaleway:index/IotDeviceMessageFilters:IotDeviceMessageFilters",
                        "description": "Rules to authorize or deny the device to publish/subscribe to specific topics\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the device\n"
                    },
                    "region": {
                        "type": "string",
                        "description": "The region you want to attach the resource to\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "The status of the device\n"
                    },
                    "updatedAt": {
                        "type": "string",
                        "description": "The date and time of the last update of the device\n"
                    }
                },
                "type": "object"
            }
        },
        "scaleway:index/iotHub:IotHub": {
            "properties": {
                "connectedDeviceCount": {
                    "type": "integer",
                    "description": "The current number of connected devices in the Hub\n"
                },
                "createdAt": {
                    "type": "string",
                    "description": "The date and time of the creation of the IoT Hub\n"
                },
                "deviceAutoProvisioning": {
                    "type": "boolean",
                    "description": "Wether to enable the device auto provisioning or not\n"
                },
                "deviceCount": {
                    "type": "integer",
                    "description": "The number of registered devices in the Hub\n"
                },
                "disableEvents": {
                    "type": "boolean",
                    "description": "Whether to enable the hub events or not\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Whether to enable the hub or not\n"
                },
                "endpoint": {
                    "type": "string",
                    "description": "The endpoint to connect the devices to\n"
                },
                "eventsTopicPrefix": {
                    "type": "string",
                    "description": "Topic prefix for the hub events\n"
                },
                "hubCa": {
                    "type": "string",
                    "description": "Custom user provided certificate authority\n"
                },
                "hubCaChallenge": {
                    "type": "string",
                    "description": "Challenge certificate for the user provided hub CA\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the hub\n"
                },
                "organizationId": {
                    "type": "string",
                    "description": "The organization_id you want to attach the resource to\n"
                },
                "productPlan": {
                    "type": "string",
                    "description": "The product plan of the hub\n"
                },
                "projectId": {
                    "type": "string",
                    "description": "The project_id you want to attach the resource to\n"
                },
                "region": {
                    "type": "string",
                    "description": "The region you want to attach the resource to\n"
                },
                "status": {
                    "type": "string",
                    "description": "The status of the hub\n"
                },
                "updatedAt": {
                    "type": "string",
                    "description": "The date and time of the last update of the IoT Hub\n"
                }
            },
            "required": [
                "connectedDeviceCount",
                "createdAt",
                "deviceCount",
                "endpoint",
                "name",
                "organizationId",
                "productPlan",
                "projectId",
                "region",
                "status",
                "updatedAt"
            ],
            "inputProperties": {
                "deviceAutoProvisioning": {
                    "type": "boolean",
                    "description": "Wether to enable the device auto provisioning or not\n"
                },
                "disableEvents": {
                    "type": "boolean",
                    "description": "Whether to enable the hub events or not\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Whether to enable the hub or not\n"
                },
                "eventsTopicPrefix": {
                    "type": "string",
                    "description": "Topic prefix for the hub events\n"
                },
                "hubCa": {
                    "type": "string",
                    "description": "Custom user provided certificate authority\n"
                },
                "hubCaChallenge": {
                    "type": "string",
                    "description": "Challenge certificate for the user provided hub CA\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the hub\n"
                },
                "productPlan": {
                    "type": "string",
                    "description": "The product plan of the hub\n"
                },
                "projectId": {
                    "type": "string",
                    "description": "The project_id you want to attach the resource to\n"
                },
                "region": {
                    "type": "string",
                    "description": "The region you want to attach the resource to\n"
                }
            },
            "requiredInputs": [
                "productPlan"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering IotHub resources.\n",
                "properties": {
                    "connectedDeviceCount": {
                        "type": "integer",
                        "description": "The current number of connected devices in the Hub\n"
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "The date and time of the creation of the IoT Hub\n"
                    },
                    "deviceAutoProvisioning": {
                        "type": "boolean",
                        "description": "Wether to enable the device auto provisioning or not\n"
                    },
                    "deviceCount": {
                        "type": "integer",
                        "description": "The number of registered devices in the Hub\n"
                    },
                    "disableEvents": {
                        "type": "boolean",
                        "description": "Whether to enable the hub events or not\n"
                    },
                    "enabled": {
                        "type": "boolean",
                        "description": "Whether to enable the hub or not\n"
                    },
                    "endpoint": {
                        "type": "string",
                        "description": "The endpoint to connect the devices to\n"
                    },
                    "eventsTopicPrefix": {
                        "type": "string",
                        "description": "Topic prefix for the hub events\n"
                    },
                    "hubCa": {
                        "type": "string",
                        "description": "Custom user provided certificate authority\n"
                    },
                    "hubCaChallenge": {
                        "type": "string",
                        "description": "Challenge certificate for the user provided hub CA\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the hub\n"
                    },
                    "organizationId": {
                        "type": "string",
                        "description": "The organization_id you want to attach the resource to\n"
                    },
                    "productPlan": {
                        "type": "string",
                        "description": "The product plan of the hub\n"
                    },
                    "projectId": {
                        "type": "string",
                        "description": "The project_id you want to attach the resource to\n"
                    },
                    "region": {
                        "type": "string",
                        "description": "The region you want to attach the resource to\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "The status of the hub\n"
                    },
                    "updatedAt": {
                        "type": "string",
                        "description": "The date and time of the last update of the IoT Hub\n"
                    }
                },
                "type": "object"
            }
        },
        "scaleway:index/iotNetwork:IotNetwork": {
            "properties": {
                "createdAt": {
                    "type": "string",
                    "description": "The date and time of the creation of the network\n"
                },
                "endpoint": {
                    "type": "string",
                    "description": "The endpoint to use when interacting with the network\n"
                },
                "hubId": {
                    "type": "string",
                    "description": "The ID of the hub on which this network will be created\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the network\n"
                },
                "secret": {
                    "type": "string",
                    "description": "The endpoint key to keep secret\n"
                },
                "topicPrefix": {
                    "type": "string",
                    "description": "The prefix that will be prepended to all topics for this Network\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type of the network\n"
                }
            },
            "required": [
                "createdAt",
                "endpoint",
                "hubId",
                "name",
                "secret",
                "type"
            ],
            "inputProperties": {
                "hubId": {
                    "type": "string",
                    "description": "The ID of the hub on which this network will be created\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the network\n"
                },
                "topicPrefix": {
                    "type": "string",
                    "description": "The prefix that will be prepended to all topics for this Network\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type of the network\n"
                }
            },
            "requiredInputs": [
                "hubId",
                "type"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering IotNetwork resources.\n",
                "properties": {
                    "createdAt": {
                        "type": "string",
                        "description": "The date and time of the creation of the network\n"
                    },
                    "endpoint": {
                        "type": "string",
                        "description": "The endpoint to use when interacting with the network\n"
                    },
                    "hubId": {
                        "type": "string",
                        "description": "The ID of the hub on which this network will be created\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the network\n"
                    },
                    "secret": {
                        "type": "string",
                        "description": "The endpoint key to keep secret\n"
                    },
                    "topicPrefix": {
                        "type": "string",
                        "description": "The prefix that will be prepended to all topics for this Network\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "The type of the network\n"
                    }
                },
                "type": "object"
            }
        },
        "scaleway:index/iotRoute:IotRoute": {
            "properties": {
                "createdAt": {
                    "type": "string",
                    "description": "The date and time of the creation of the IoT Route\n"
                },
                "database": {
                    "$ref": "#/types/scaleway:index/IotRouteDatabase:IotRouteDatabase",
                    "description": "Database Route parameters\n"
                },
                "hubId": {
                    "type": "string",
                    "description": "The ID of the route's hub\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the route\n"
                },
                "region": {
                    "type": "string",
                    "description": "The region you want to attach the resource to\n"
                },
                "rest": {
                    "$ref": "#/types/scaleway:index/IotRouteRest:IotRouteRest",
                    "description": "Rest Route parameters\n"
                },
                "s3": {
                    "$ref": "#/types/scaleway:index/IotRouteS3:IotRouteS3",
                    "description": "S3 Route parameters\n"
                },
                "topic": {
                    "type": "string",
                    "description": "The Topic the route subscribes to (wildcards allowed)\n"
                }
            },
            "required": [
                "createdAt",
                "hubId",
                "name",
                "region",
                "topic"
            ],
            "inputProperties": {
                "database": {
                    "$ref": "#/types/scaleway:index/IotRouteDatabase:IotRouteDatabase",
                    "description": "Database Route parameters\n"
                },
                "hubId": {
                    "type": "string",
                    "description": "The ID of the route's hub\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the route\n"
                },
                "region": {
                    "type": "string",
                    "description": "The region you want to attach the resource to\n"
                },
                "rest": {
                    "$ref": "#/types/scaleway:index/IotRouteRest:IotRouteRest",
                    "description": "Rest Route parameters\n"
                },
                "s3": {
                    "$ref": "#/types/scaleway:index/IotRouteS3:IotRouteS3",
                    "description": "S3 Route parameters\n"
                },
                "topic": {
                    "type": "string",
                    "description": "The Topic the route subscribes to (wildcards allowed)\n"
                }
            },
            "requiredInputs": [
                "hubId",
                "topic"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering IotRoute resources.\n",
                "properties": {
                    "createdAt": {
                        "type": "string",
                        "description": "The date and time of the creation of the IoT Route\n"
                    },
                    "database": {
                        "$ref": "#/types/scaleway:index/IotRouteDatabase:IotRouteDatabase",
                        "description": "Database Route parameters\n"
                    },
                    "hubId": {
                        "type": "string",
                        "description": "The ID of the route's hub\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the route\n"
                    },
                    "region": {
                        "type": "string",
                        "description": "The region you want to attach the resource to\n"
                    },
                    "rest": {
                        "$ref": "#/types/scaleway:index/IotRouteRest:IotRouteRest",
                        "description": "Rest Route parameters\n"
                    },
                    "s3": {
                        "$ref": "#/types/scaleway:index/IotRouteS3:IotRouteS3",
                        "description": "S3 Route parameters\n"
                    },
                    "topic": {
                        "type": "string",
                        "description": "The Topic the route subscribes to (wildcards allowed)\n"
                    }
                },
                "type": "object"
            }
        },
        "scaleway:index/kubernetesCluster:KubernetesCluster": {
            "properties": {
                "admissionPlugins": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The list of admission plugins to enable on the cluster\n"
                },
                "apiserverCertSans": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Additional Subject Alternative Names for the Kubernetes API server certificate\n"
                },
                "apiserverUrl": {
                    "type": "string",
                    "description": "Kubernetes API server URL\n"
                },
                "autoUpgrade": {
                    "$ref": "#/types/scaleway:index/KubernetesClusterAutoUpgrade:KubernetesClusterAutoUpgrade",
                    "description": "The auto upgrade configuration for the cluster\n"
                },
                "autoscalerConfig": {
                    "$ref": "#/types/scaleway:index/KubernetesClusterAutoscalerConfig:KubernetesClusterAutoscalerConfig",
                    "description": "The autoscaler configuration for the cluster\n"
                },
                "cni": {
                    "type": "string",
                    "description": "The CNI plugin of the cluster\n"
                },
                "createdAt": {
                    "type": "string",
                    "description": "The date and time of the creation of the Kubernetes cluster\n"
                },
                "deleteAdditionalResources": {
                    "type": "boolean",
                    "description": "Delete additional resources like block volumes and loadbalancers on cluster deletion\n"
                },
                "description": {
                    "type": "string",
                    "description": "The description of the cluster\n"
                },
                "featureGates": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The list of feature gates to enable on the cluster\n"
                },
                "kubeconfigs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/scaleway:index/KubernetesClusterKubeconfig:KubernetesClusterKubeconfig"
                    },
                    "description": "The kubeconfig configuration file of the Kubernetes cluster\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the cluster\n"
                },
                "openIdConnectConfig": {
                    "$ref": "#/types/scaleway:index/KubernetesClusterOpenIdConnectConfig:KubernetesClusterOpenIdConnectConfig",
                    "description": "The OpenID Connect configuration of the cluster\n"
                },
                "organizationId": {
                    "type": "string",
                    "description": "The organization_id you want to attach the resource to\n"
                },
                "projectId": {
                    "type": "string",
                    "description": "The project_id you want to attach the resource to\n"
                },
                "region": {
                    "type": "string",
                    "description": "The region you want to attach the resource to\n"
                },
                "status": {
                    "type": "string",
                    "description": "The status of the cluster\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The tags associated with the cluster\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type of cluster\n"
                },
                "updatedAt": {
                    "type": "string",
                    "description": "The date and time of the last update of the Kubernetes cluster\n"
                },
                "upgradeAvailable": {
                    "type": "boolean",
                    "description": "True if an upgrade is available\n"
                },
                "version": {
                    "type": "string",
                    "description": "The version of the cluster\n"
                },
                "wildcardDns": {
                    "type": "string",
                    "description": "Wildcard DNS pointing to all the ready nodes\n"
                }
            },
            "required": [
                "apiserverUrl",
                "autoUpgrade",
                "autoscalerConfig",
                "cni",
                "createdAt",
                "kubeconfigs",
                "name",
                "openIdConnectConfig",
                "organizationId",
                "projectId",
                "region",
                "status",
                "type",
                "updatedAt",
                "upgradeAvailable",
                "version",
                "wildcardDns"
            ],
            "inputProperties": {
                "admissionPlugins": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The list of admission plugins to enable on the cluster\n"
                },
                "apiserverCertSans": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Additional Subject Alternative Names for the Kubernetes API server certificate\n"
                },
                "autoUpgrade": {
                    "$ref": "#/types/scaleway:index/KubernetesClusterAutoUpgrade:KubernetesClusterAutoUpgrade",
                    "description": "The auto upgrade configuration for the cluster\n"
                },
                "autoscalerConfig": {
                    "$ref": "#/types/scaleway:index/KubernetesClusterAutoscalerConfig:KubernetesClusterAutoscalerConfig",
                    "description": "The autoscaler configuration for the cluster\n"
                },
                "cni": {
                    "type": "string",
                    "description": "The CNI plugin of the cluster\n"
                },
                "deleteAdditionalResources": {
                    "type": "boolean",
                    "description": "Delete additional resources like block volumes and loadbalancers on cluster deletion\n"
                },
                "description": {
                    "type": "string",
                    "description": "The description of the cluster\n"
                },
                "featureGates": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The list of feature gates to enable on the cluster\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the cluster\n"
                },
                "openIdConnectConfig": {
                    "$ref": "#/types/scaleway:index/KubernetesClusterOpenIdConnectConfig:KubernetesClusterOpenIdConnectConfig",
                    "description": "The OpenID Connect configuration of the cluster\n"
                },
                "projectId": {
                    "type": "string",
                    "description": "The project_id you want to attach the resource to\n"
                },
                "region": {
                    "type": "string",
                    "description": "The region you want to attach the resource to\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The tags associated with the cluster\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type of cluster\n"
                },
                "version": {
                    "type": "string",
                    "description": "The version of the cluster\n"
                }
            },
            "requiredInputs": [
                "cni",
                "version"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering KubernetesCluster resources.\n",
                "properties": {
                    "admissionPlugins": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The list of admission plugins to enable on the cluster\n"
                    },
                    "apiserverCertSans": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Additional Subject Alternative Names for the Kubernetes API server certificate\n"
                    },
                    "apiserverUrl": {
                        "type": "string",
                        "description": "Kubernetes API server URL\n"
                    },
                    "autoUpgrade": {
                        "$ref": "#/types/scaleway:index/KubernetesClusterAutoUpgrade:KubernetesClusterAutoUpgrade",
                        "description": "The auto upgrade configuration for the cluster\n"
                    },
                    "autoscalerConfig": {
                        "$ref": "#/types/scaleway:index/KubernetesClusterAutoscalerConfig:KubernetesClusterAutoscalerConfig",
                        "description": "The autoscaler configuration for the cluster\n"
                    },
                    "cni": {
                        "type": "string",
                        "description": "The CNI plugin of the cluster\n"
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "The date and time of the creation of the Kubernetes cluster\n"
                    },
                    "deleteAdditionalResources": {
                        "type": "boolean",
                        "description": "Delete additional resources like block volumes and loadbalancers on cluster deletion\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "The description of the cluster\n"
                    },
                    "featureGates": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The list of feature gates to enable on the cluster\n"
                    },
                    "kubeconfigs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/scaleway:index/KubernetesClusterKubeconfig:KubernetesClusterKubeconfig"
                        },
                        "description": "The kubeconfig configuration file of the Kubernetes cluster\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the cluster\n"
                    },
                    "openIdConnectConfig": {
                        "$ref": "#/types/scaleway:index/KubernetesClusterOpenIdConnectConfig:KubernetesClusterOpenIdConnectConfig",
                        "description": "The OpenID Connect configuration of the cluster\n"
                    },
                    "organizationId": {
                        "type": "string",
                        "description": "The organization_id you want to attach the resource to\n"
                    },
                    "projectId": {
                        "type": "string",
                        "description": "The project_id you want to attach the resource to\n"
                    },
                    "region": {
                        "type": "string",
                        "description": "The region you want to attach the resource to\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "The status of the cluster\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The tags associated with the cluster\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "The type of cluster\n"
                    },
                    "updatedAt": {
                        "type": "string",
                        "description": "The date and time of the last update of the Kubernetes cluster\n"
                    },
                    "upgradeAvailable": {
                        "type": "boolean",
                        "description": "True if an upgrade is available\n"
                    },
                    "version": {
                        "type": "string",
                        "description": "The version of the cluster\n"
                    },
                    "wildcardDns": {
                        "type": "string",
                        "description": "Wildcard DNS pointing to all the ready nodes\n"
                    }
                },
                "type": "object"
            }
        },
        "scaleway:index/kubernetesNodePool:KubernetesNodePool": {
            "properties": {
                "autohealing": {
                    "type": "boolean",
                    "description": "Enable the autohealing on the pool\n"
                },
                "autoscaling": {
                    "type": "boolean",
                    "description": "Enable the autoscaling on the pool\n"
                },
                "clusterId": {
                    "type": "string",
                    "description": "The ID of the cluster on which this pool will be created\n"
                },
                "containerRuntime": {
                    "type": "string",
                    "description": "Container runtime for the pool\n"
                },
                "createdAt": {
                    "type": "string",
                    "description": "The date and time of the creation of the pool\n"
                },
                "currentSize": {
                    "type": "integer",
                    "description": "The actual size of the pool\n"
                },
                "kubeletArgs": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "The Kubelet arguments to be used by this pool\n"
                },
                "maxSize": {
                    "type": "integer",
                    "description": "Maximum size of the pool\n"
                },
                "minSize": {
                    "type": "integer",
                    "description": "Minimun size of the pool\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the cluster\n"
                },
                "nodeType": {
                    "type": "string",
                    "description": "Server type of the pool servers\n"
                },
                "nodes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/scaleway:index/KubernetesNodePoolNode:KubernetesNodePoolNode"
                    }
                },
                "placementGroupId": {
                    "type": "string",
                    "description": "ID of the placement group\n"
                },
                "region": {
                    "type": "string",
                    "description": "The region you want to attach the resource to\n"
                },
                "size": {
                    "type": "integer",
                    "description": "Size of the pool\n"
                },
                "status": {
                    "type": "string",
                    "description": "The status of the pool\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The tags associated with the pool\n"
                },
                "updatedAt": {
                    "type": "string",
                    "description": "The date and time of the last update of the pool\n"
                },
                "upgradePolicy": {
                    "$ref": "#/types/scaleway:index/KubernetesNodePoolUpgradePolicy:KubernetesNodePoolUpgradePolicy",
                    "description": "The Pool upgrade policy\n"
                },
                "version": {
                    "type": "string",
                    "description": "The Kubernetes version of the pool\n"
                },
                "waitForPoolReady": {
                    "type": "boolean",
                    "description": "Whether to wait for the pool to be ready\n"
                },
                "zone": {
                    "type": "string",
                    "description": "The zone you want to attach the resource to\n"
                }
            },
            "required": [
                "clusterId",
                "createdAt",
                "currentSize",
                "maxSize",
                "name",
                "nodeType",
                "nodes",
                "region",
                "size",
                "status",
                "updatedAt",
                "upgradePolicy",
                "version",
                "zone"
            ],
            "inputProperties": {
                "autohealing": {
                    "type": "boolean",
                    "description": "Enable the autohealing on the pool\n"
                },
                "autoscaling": {
                    "type": "boolean",
                    "description": "Enable the autoscaling on the pool\n"
                },
                "clusterId": {
                    "type": "string",
                    "description": "The ID of the cluster on which this pool will be created\n"
                },
                "containerRuntime": {
                    "type": "string",
                    "description": "Container runtime for the pool\n"
                },
                "kubeletArgs": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "The Kubelet arguments to be used by this pool\n"
                },
                "maxSize": {
                    "type": "integer",
                    "description": "Maximum size of the pool\n"
                },
                "minSize": {
                    "type": "integer",
                    "description": "Minimun size of the pool\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the cluster\n"
                },
                "nodeType": {
                    "type": "string",
                    "description": "Server type of the pool servers\n"
                },
                "placementGroupId": {
                    "type": "string",
                    "description": "ID of the placement group\n"
                },
                "region": {
                    "type": "string",
                    "description": "The region you want to attach the resource to\n"
                },
                "size": {
                    "type": "integer",
                    "description": "Size of the pool\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The tags associated with the pool\n"
                },
                "upgradePolicy": {
                    "$ref": "#/types/scaleway:index/KubernetesNodePoolUpgradePolicy:KubernetesNodePoolUpgradePolicy",
                    "description": "The Pool upgrade policy\n"
                },
                "waitForPoolReady": {
                    "type": "boolean",
                    "description": "Whether to wait for the pool to be ready\n"
                },
                "zone": {
                    "type": "string",
                    "description": "The zone you want to attach the resource to\n"
                }
            },
            "requiredInputs": [
                "clusterId",
                "nodeType",
                "size"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering KubernetesNodePool resources.\n",
                "properties": {
                    "autohealing": {
                        "type": "boolean",
                        "description": "Enable the autohealing on the pool\n"
                    },
                    "autoscaling": {
                        "type": "boolean",
                        "description": "Enable the autoscaling on the pool\n"
                    },
                    "clusterId": {
                        "type": "string",
                        "description": "The ID of the cluster on which this pool will be created\n"
                    },
                    "containerRuntime": {
                        "type": "string",
                        "description": "Container runtime for the pool\n"
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "The date and time of the creation of the pool\n"
                    },
                    "currentSize": {
                        "type": "integer",
                        "description": "The actual size of the pool\n"
                    },
                    "kubeletArgs": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "The Kubelet arguments to be used by this pool\n"
                    },
                    "maxSize": {
                        "type": "integer",
                        "description": "Maximum size of the pool\n"
                    },
                    "minSize": {
                        "type": "integer",
                        "description": "Minimun size of the pool\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the cluster\n"
                    },
                    "nodeType": {
                        "type": "string",
                        "description": "Server type of the pool servers\n"
                    },
                    "nodes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/scaleway:index/KubernetesNodePoolNode:KubernetesNodePoolNode"
                        }
                    },
                    "placementGroupId": {
                        "type": "string",
                        "description": "ID of the placement group\n"
                    },
                    "region": {
                        "type": "string",
                        "description": "The region you want to attach the resource to\n"
                    },
                    "size": {
                        "type": "integer",
                        "description": "Size of the pool\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "The status of the pool\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The tags associated with the pool\n"
                    },
                    "updatedAt": {
                        "type": "string",
                        "description": "The date and time of the last update of the pool\n"
                    },
                    "upgradePolicy": {
                        "$ref": "#/types/scaleway:index/KubernetesNodePoolUpgradePolicy:KubernetesNodePoolUpgradePolicy",
                        "description": "The Pool upgrade policy\n"
                    },
                    "version": {
                        "type": "string",
                        "description": "The Kubernetes version of the pool\n"
                    },
                    "waitForPoolReady": {
                        "type": "boolean",
                        "description": "Whether to wait for the pool to be ready\n"
                    },
                    "zone": {
                        "type": "string",
                        "description": "The zone you want to attach the resource to\n"
                    }
                },
                "type": "object"
            }
        },
        "scaleway:index/loadbalancer:Loadbalancer": {
            "properties": {
                "ipAddress": {
                    "type": "string",
                    "description": "The load-balance public IP address\n"
                },
                "ipId": {
                    "type": "string",
                    "description": "The load-balance public IP ID\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the lb\n"
                },
                "organizationId": {
                    "type": "string",
                    "description": "The organization_id you want to attach the resource to\n"
                },
                "privateNetworks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/scaleway:index/LoadbalancerPrivateNetwork:LoadbalancerPrivateNetwork"
                    },
                    "description": "List of private network to connect with your load balancer\n"
                },
                "projectId": {
                    "type": "string",
                    "description": "The project_id you want to attach the resource to\n"
                },
                "region": {
                    "type": "string",
                    "description": "The region of the resource\n"
                },
                "releaseIp": {
                    "type": "boolean",
                    "description": "Release the IPs related to this load-balancer\n",
                    "deprecationMessage": "The resource ip will be destroyed by it's own resource. Please set this to `false`"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Array of tags to associate with the load-balancer\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type of load-balancer you want to create\n"
                },
                "zone": {
                    "type": "string",
                    "description": "The zone you want to attach the resource to\n"
                }
            },
            "required": [
                "ipAddress",
                "ipId",
                "name",
                "organizationId",
                "projectId",
                "region",
                "type",
                "zone"
            ],
            "inputProperties": {
                "ipId": {
                    "type": "string",
                    "description": "The load-balance public IP ID\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the lb\n"
                },
                "privateNetworks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/scaleway:index/LoadbalancerPrivateNetwork:LoadbalancerPrivateNetwork"
                    },
                    "description": "List of private network to connect with your load balancer\n"
                },
                "projectId": {
                    "type": "string",
                    "description": "The project_id you want to attach the resource to\n"
                },
                "releaseIp": {
                    "type": "boolean",
                    "description": "Release the IPs related to this load-balancer\n",
                    "deprecationMessage": "The resource ip will be destroyed by it's own resource. Please set this to `false`"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Array of tags to associate with the load-balancer\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type of load-balancer you want to create\n"
                },
                "zone": {
                    "type": "string",
                    "description": "The zone you want to attach the resource to\n"
                }
            },
            "requiredInputs": [
                "ipId",
                "type"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Loadbalancer resources.\n",
                "properties": {
                    "ipAddress": {
                        "type": "string",
                        "description": "The load-balance public IP address\n"
                    },
                    "ipId": {
                        "type": "string",
                        "description": "The load-balance public IP ID\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the lb\n"
                    },
                    "organizationId": {
                        "type": "string",
                        "description": "The organization_id you want to attach the resource to\n"
                    },
                    "privateNetworks": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/scaleway:index/LoadbalancerPrivateNetwork:LoadbalancerPrivateNetwork"
                        },
                        "description": "List of private network to connect with your load balancer\n"
                    },
                    "projectId": {
                        "type": "string",
                        "description": "The project_id you want to attach the resource to\n"
                    },
                    "region": {
                        "type": "string",
                        "description": "The region of the resource\n"
                    },
                    "releaseIp": {
                        "type": "boolean",
                        "description": "Release the IPs related to this load-balancer\n",
                        "deprecationMessage": "The resource ip will be destroyed by it's own resource. Please set this to `false`"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Array of tags to associate with the load-balancer\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "The type of load-balancer you want to create\n"
                    },
                    "zone": {
                        "type": "string",
                        "description": "The zone you want to attach the resource to\n"
                    }
                },
                "type": "object"
            }
        },
        "scaleway:index/loadbalancerBackend:LoadbalancerBackend": {
            "properties": {
                "forwardPort": {
                    "type": "integer",
                    "description": "User sessions will be forwarded to this port of backend servers\n"
                },
                "forwardPortAlgorithm": {
                    "type": "string",
                    "description": "Load balancing algorithm\n"
                },
                "forwardProtocol": {
                    "type": "string",
                    "description": "Backend protocol\n"
                },
                "healthCheckDelay": {
                    "type": "string",
                    "description": "Interval between two HC requests\n"
                },
                "healthCheckHttp": {
                    "$ref": "#/types/scaleway:index/LoadbalancerBackendHealthCheckHttp:LoadbalancerBackendHealthCheckHttp"
                },
                "healthCheckHttps": {
                    "$ref": "#/types/scaleway:index/LoadbalancerBackendHealthCheckHttps:LoadbalancerBackendHealthCheckHttps"
                },
                "healthCheckMaxRetries": {
                    "type": "integer",
                    "description": "Number of allowed failed HC requests before the backend server is marked down\n"
                },
                "healthCheckPort": {
                    "type": "integer",
                    "description": "Port the HC requests will be send to. Default to `forward_port`\n"
                },
                "healthCheckTcp": {
                    "$ref": "#/types/scaleway:index/LoadbalancerBackendHealthCheckTcp:LoadbalancerBackendHealthCheckTcp"
                },
                "healthCheckTimeout": {
                    "type": "string",
                    "description": "Timeout before we consider a HC request failed\n"
                },
                "lbId": {
                    "type": "string",
                    "description": "The load-balancer ID\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the backend\n"
                },
                "onMarkedDownAction": {
                    "type": "string",
                    "description": "Modify what occurs when a backend server is marked down\n"
                },
                "proxyProtocol": {
                    "type": "string",
                    "description": "Type of PROXY protocol to enable\n"
                },
                "sendProxyV2": {
                    "type": "boolean",
                    "description": "Enables PROXY protocol version 2\n",
                    "deprecationMessage": "Please use proxy_protocol instead"
                },
                "serverIps": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Backend server IP addresses list (IPv4 or IPv6)\n"
                },
                "stickySessions": {
                    "type": "string",
                    "description": "Load balancing algorithm\n"
                },
                "stickySessionsCookieName": {
                    "type": "string",
                    "description": "Cookie name for for sticky sessions\n"
                },
                "timeoutConnect": {
                    "type": "string",
                    "description": "Maximum initial server connection establishment time\n"
                },
                "timeoutServer": {
                    "type": "string",
                    "description": "Maximum server connection inactivity time\n"
                },
                "timeoutTunnel": {
                    "type": "string",
                    "description": "Maximum tunnel inactivity time\n"
                }
            },
            "required": [
                "forwardPort",
                "forwardProtocol",
                "healthCheckPort",
                "healthCheckTcp",
                "lbId",
                "name"
            ],
            "inputProperties": {
                "forwardPort": {
                    "type": "integer",
                    "description": "User sessions will be forwarded to this port of backend servers\n"
                },
                "forwardPortAlgorithm": {
                    "type": "string",
                    "description": "Load balancing algorithm\n"
                },
                "forwardProtocol": {
                    "type": "string",
                    "description": "Backend protocol\n"
                },
                "healthCheckDelay": {
                    "type": "string",
                    "description": "Interval between two HC requests\n"
                },
                "healthCheckHttp": {
                    "$ref": "#/types/scaleway:index/LoadbalancerBackendHealthCheckHttp:LoadbalancerBackendHealthCheckHttp"
                },
                "healthCheckHttps": {
                    "$ref": "#/types/scaleway:index/LoadbalancerBackendHealthCheckHttps:LoadbalancerBackendHealthCheckHttps"
                },
                "healthCheckMaxRetries": {
                    "type": "integer",
                    "description": "Number of allowed failed HC requests before the backend server is marked down\n"
                },
                "healthCheckPort": {
                    "type": "integer",
                    "description": "Port the HC requests will be send to. Default to `forward_port`\n"
                },
                "healthCheckTcp": {
                    "$ref": "#/types/scaleway:index/LoadbalancerBackendHealthCheckTcp:LoadbalancerBackendHealthCheckTcp"
                },
                "healthCheckTimeout": {
                    "type": "string",
                    "description": "Timeout before we consider a HC request failed\n"
                },
                "lbId": {
                    "type": "string",
                    "description": "The load-balancer ID\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the backend\n"
                },
                "onMarkedDownAction": {
                    "type": "string",
                    "description": "Modify what occurs when a backend server is marked down\n"
                },
                "proxyProtocol": {
                    "type": "string",
                    "description": "Type of PROXY protocol to enable\n"
                },
                "sendProxyV2": {
                    "type": "boolean",
                    "description": "Enables PROXY protocol version 2\n",
                    "deprecationMessage": "Please use proxy_protocol instead"
                },
                "serverIps": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Backend server IP addresses list (IPv4 or IPv6)\n"
                },
                "stickySessions": {
                    "type": "string",
                    "description": "Load balancing algorithm\n"
                },
                "stickySessionsCookieName": {
                    "type": "string",
                    "description": "Cookie name for for sticky sessions\n"
                },
                "timeoutConnect": {
                    "type": "string",
                    "description": "Maximum initial server connection establishment time\n"
                },
                "timeoutServer": {
                    "type": "string",
                    "description": "Maximum server connection inactivity time\n"
                },
                "timeoutTunnel": {
                    "type": "string",
                    "description": "Maximum tunnel inactivity time\n"
                }
            },
            "requiredInputs": [
                "forwardPort",
                "forwardProtocol",
                "lbId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering LoadbalancerBackend resources.\n",
                "properties": {
                    "forwardPort": {
                        "type": "integer",
                        "description": "User sessions will be forwarded to this port of backend servers\n"
                    },
                    "forwardPortAlgorithm": {
                        "type": "string",
                        "description": "Load balancing algorithm\n"
                    },
                    "forwardProtocol": {
                        "type": "string",
                        "description": "Backend protocol\n"
                    },
                    "healthCheckDelay": {
                        "type": "string",
                        "description": "Interval between two HC requests\n"
                    },
                    "healthCheckHttp": {
                        "$ref": "#/types/scaleway:index/LoadbalancerBackendHealthCheckHttp:LoadbalancerBackendHealthCheckHttp"
                    },
                    "healthCheckHttps": {
                        "$ref": "#/types/scaleway:index/LoadbalancerBackendHealthCheckHttps:LoadbalancerBackendHealthCheckHttps"
                    },
                    "healthCheckMaxRetries": {
                        "type": "integer",
                        "description": "Number of allowed failed HC requests before the backend server is marked down\n"
                    },
                    "healthCheckPort": {
                        "type": "integer",
                        "description": "Port the HC requests will be send to. Default to `forward_port`\n"
                    },
                    "healthCheckTcp": {
                        "$ref": "#/types/scaleway:index/LoadbalancerBackendHealthCheckTcp:LoadbalancerBackendHealthCheckTcp"
                    },
                    "healthCheckTimeout": {
                        "type": "string",
                        "description": "Timeout before we consider a HC request failed\n"
                    },
                    "lbId": {
                        "type": "string",
                        "description": "The load-balancer ID\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the backend\n"
                    },
                    "onMarkedDownAction": {
                        "type": "string",
                        "description": "Modify what occurs when a backend server is marked down\n"
                    },
                    "proxyProtocol": {
                        "type": "string",
                        "description": "Type of PROXY protocol to enable\n"
                    },
                    "sendProxyV2": {
                        "type": "boolean",
                        "description": "Enables PROXY protocol version 2\n",
                        "deprecationMessage": "Please use proxy_protocol instead"
                    },
                    "serverIps": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Backend server IP addresses list (IPv4 or IPv6)\n"
                    },
                    "stickySessions": {
                        "type": "string",
                        "description": "Load balancing algorithm\n"
                    },
                    "stickySessionsCookieName": {
                        "type": "string",
                        "description": "Cookie name for for sticky sessions\n"
                    },
                    "timeoutConnect": {
                        "type": "string",
                        "description": "Maximum initial server connection establishment time\n"
                    },
                    "timeoutServer": {
                        "type": "string",
                        "description": "Maximum server connection inactivity time\n"
                    },
                    "timeoutTunnel": {
                        "type": "string",
                        "description": "Maximum tunnel inactivity time\n"
                    }
                },
                "type": "object"
            }
        },
        "scaleway:index/loadbalancerCertificate:LoadbalancerCertificate": {
            "properties": {
                "commonName": {
                    "type": "string",
                    "description": "The main domain name of the certificate\n"
                },
                "customCertificate": {
                    "$ref": "#/types/scaleway:index/LoadbalancerCertificateCustomCertificate:LoadbalancerCertificateCustomCertificate",
                    "description": "The custom type certificate type configuration\n"
                },
                "fingerprint": {
                    "type": "string",
                    "description": "The identifier (SHA-1) of the certificate\n"
                },
                "lbId": {
                    "type": "string",
                    "description": "The load-balancer ID\n"
                },
                "letsencrypt": {
                    "$ref": "#/types/scaleway:index/LoadbalancerCertificateLetsencrypt:LoadbalancerCertificateLetsencrypt",
                    "description": "The Let's Encrypt type certificate configuration\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the load-balancer certificate\n"
                },
                "notValidAfter": {
                    "type": "string",
                    "description": "The not valid after validity bound timestamp\n"
                },
                "notValidBefore": {
                    "type": "string",
                    "description": "The not valid before validity bound timestamp\n"
                },
                "status": {
                    "type": "string",
                    "description": "The status of certificate\n"
                },
                "subjectAlternativeNames": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The alternative domain names of the certificate\n"
                }
            },
            "required": [
                "commonName",
                "fingerprint",
                "lbId",
                "name",
                "notValidAfter",
                "notValidBefore",
                "status",
                "subjectAlternativeNames"
            ],
            "inputProperties": {
                "customCertificate": {
                    "$ref": "#/types/scaleway:index/LoadbalancerCertificateCustomCertificate:LoadbalancerCertificateCustomCertificate",
                    "description": "The custom type certificate type configuration\n"
                },
                "lbId": {
                    "type": "string",
                    "description": "The load-balancer ID\n"
                },
                "letsencrypt": {
                    "$ref": "#/types/scaleway:index/LoadbalancerCertificateLetsencrypt:LoadbalancerCertificateLetsencrypt",
                    "description": "The Let's Encrypt type certificate configuration\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the load-balancer certificate\n"
                }
            },
            "requiredInputs": [
                "lbId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering LoadbalancerCertificate resources.\n",
                "properties": {
                    "commonName": {
                        "type": "string",
                        "description": "The main domain name of the certificate\n"
                    },
                    "customCertificate": {
                        "$ref": "#/types/scaleway:index/LoadbalancerCertificateCustomCertificate:LoadbalancerCertificateCustomCertificate",
                        "description": "The custom type certificate type configuration\n"
                    },
                    "fingerprint": {
                        "type": "string",
                        "description": "The identifier (SHA-1) of the certificate\n"
                    },
                    "lbId": {
                        "type": "string",
                        "description": "The load-balancer ID\n"
                    },
                    "letsencrypt": {
                        "$ref": "#/types/scaleway:index/LoadbalancerCertificateLetsencrypt:LoadbalancerCertificateLetsencrypt",
                        "description": "The Let's Encrypt type certificate configuration\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the load-balancer certificate\n"
                    },
                    "notValidAfter": {
                        "type": "string",
                        "description": "The not valid after validity bound timestamp\n"
                    },
                    "notValidBefore": {
                        "type": "string",
                        "description": "The not valid before validity bound timestamp\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "The status of certificate\n"
                    },
                    "subjectAlternativeNames": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The alternative domain names of the certificate\n"
                    }
                },
                "type": "object"
            }
        },
        "scaleway:index/loadbalancerFrontend:LoadbalancerFrontend": {
            "properties": {
                "acls": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/scaleway:index/LoadbalancerFrontendAcl:LoadbalancerFrontendAcl"
                    },
                    "description": "ACL rules\n"
                },
                "backendId": {
                    "type": "string",
                    "description": "The load-balancer backend ID\n"
                },
                "certificateId": {
                    "type": "string",
                    "description": "Certificate ID\n",
                    "deprecationMessage": "Please use certificate_ids"
                },
                "certificateIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Collection of Certificate IDs related to the load balancer and domain\n"
                },
                "inboundPort": {
                    "type": "integer",
                    "description": "TCP port to listen on the front side\n"
                },
                "lbId": {
                    "type": "string",
                    "description": "The load-balancer ID\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the frontend\n"
                },
                "timeoutClient": {
                    "type": "string",
                    "description": "Set the maximum inactivity time on the client side\n"
                }
            },
            "required": [
                "backendId",
                "certificateId",
                "inboundPort",
                "lbId",
                "name"
            ],
            "inputProperties": {
                "acls": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/scaleway:index/LoadbalancerFrontendAcl:LoadbalancerFrontendAcl"
                    },
                    "description": "ACL rules\n"
                },
                "backendId": {
                    "type": "string",
                    "description": "The load-balancer backend ID\n"
                },
                "certificateIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Collection of Certificate IDs related to the load balancer and domain\n"
                },
                "inboundPort": {
                    "type": "integer",
                    "description": "TCP port to listen on the front side\n"
                },
                "lbId": {
                    "type": "string",
                    "description": "The load-balancer ID\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the frontend\n"
                },
                "timeoutClient": {
                    "type": "string",
                    "description": "Set the maximum inactivity time on the client side\n"
                }
            },
            "requiredInputs": [
                "backendId",
                "inboundPort",
                "lbId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering LoadbalancerFrontend resources.\n",
                "properties": {
                    "acls": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/scaleway:index/LoadbalancerFrontendAcl:LoadbalancerFrontendAcl"
                        },
                        "description": "ACL rules\n"
                    },
                    "backendId": {
                        "type": "string",
                        "description": "The load-balancer backend ID\n"
                    },
                    "certificateId": {
                        "type": "string",
                        "description": "Certificate ID\n",
                        "deprecationMessage": "Please use certificate_ids"
                    },
                    "certificateIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Collection of Certificate IDs related to the load balancer and domain\n"
                    },
                    "inboundPort": {
                        "type": "integer",
                        "description": "TCP port to listen on the front side\n"
                    },
                    "lbId": {
                        "type": "string",
                        "description": "The load-balancer ID\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the frontend\n"
                    },
                    "timeoutClient": {
                        "type": "string",
                        "description": "Set the maximum inactivity time on the client side\n"
                    }
                },
                "type": "object"
            }
        },
        "scaleway:index/loadbalancerIp:LoadbalancerIp": {
            "properties": {
                "ipAddress": {
                    "type": "string",
                    "description": "The load-balancer public IP address\n"
                },
                "lbId": {
                    "type": "string",
                    "description": "The ID of the load balancer attached to this IP, if any\n"
                },
                "organizationId": {
                    "type": "string",
                    "description": "The organization_id you want to attach the resource to\n"
                },
                "projectId": {
                    "type": "string",
                    "description": "The project_id you want to attach the resource to\n"
                },
                "region": {
                    "type": "string",
                    "description": "The region of the resource\n"
                },
                "reverse": {
                    "type": "string",
                    "description": "The reverse domain name for this IP\n"
                },
                "zone": {
                    "type": "string",
                    "description": "The zone you want to attach the resource to\n"
                }
            },
            "required": [
                "ipAddress",
                "lbId",
                "organizationId",
                "projectId",
                "region",
                "reverse",
                "zone"
            ],
            "inputProperties": {
                "projectId": {
                    "type": "string",
                    "description": "The project_id you want to attach the resource to\n"
                },
                "reverse": {
                    "type": "string",
                    "description": "The reverse domain name for this IP\n"
                },
                "zone": {
                    "type": "string",
                    "description": "The zone you want to attach the resource to\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering LoadbalancerIp resources.\n",
                "properties": {
                    "ipAddress": {
                        "type": "string",
                        "description": "The load-balancer public IP address\n"
                    },
                    "lbId": {
                        "type": "string",
                        "description": "The ID of the load balancer attached to this IP, if any\n"
                    },
                    "organizationId": {
                        "type": "string",
                        "description": "The organization_id you want to attach the resource to\n"
                    },
                    "projectId": {
                        "type": "string",
                        "description": "The project_id you want to attach the resource to\n"
                    },
                    "region": {
                        "type": "string",
                        "description": "The region of the resource\n"
                    },
                    "reverse": {
                        "type": "string",
                        "description": "The reverse domain name for this IP\n"
                    },
                    "zone": {
                        "type": "string",
                        "description": "The zone you want to attach the resource to\n"
                    }
                },
                "type": "object"
            }
        },
        "scaleway:index/loadbalancerRoute:LoadbalancerRoute": {
            "properties": {
                "backendId": {
                    "type": "string",
                    "description": "The backend ID destination of redirection\n"
                },
                "frontendId": {
                    "type": "string",
                    "description": "The frontend ID origin of redirection\n"
                },
                "matchSni": {
                    "type": "string",
                    "description": "The domain to match against\n"
                }
            },
            "required": [
                "backendId",
                "frontendId"
            ],
            "inputProperties": {
                "backendId": {
                    "type": "string",
                    "description": "The backend ID destination of redirection\n"
                },
                "frontendId": {
                    "type": "string",
                    "description": "The frontend ID origin of redirection\n"
                },
                "matchSni": {
                    "type": "string",
                    "description": "The domain to match against\n"
                }
            },
            "requiredInputs": [
                "backendId",
                "frontendId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering LoadbalancerRoute resources.\n",
                "properties": {
                    "backendId": {
                        "type": "string",
                        "description": "The backend ID destination of redirection\n"
                    },
                    "frontendId": {
                        "type": "string",
                        "description": "The frontend ID origin of redirection\n"
                    },
                    "matchSni": {
                        "type": "string",
                        "description": "The domain to match against\n"
                    }
                },
                "type": "object"
            }
        },
        "scaleway:index/objectBucket:ObjectBucket": {
            "properties": {
                "acl": {
                    "type": "string",
                    "description": "ACL of the bucket: either 'public-read' or 'private'.\n"
                },
                "corsRules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/scaleway:index/ObjectBucketCorsRule:ObjectBucketCorsRule"
                    }
                },
                "endpoint": {
                    "type": "string",
                    "description": "Endpoint of the bucket\n"
                },
                "forceDestroy": {
                    "type": "boolean",
                    "description": "Delete objects in bucket\n"
                },
                "lifecycleRules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/scaleway:index/ObjectBucketLifecycleRule:ObjectBucketLifecycleRule"
                    },
                    "description": "Lifecycle configuration is a set of rules that define actions that Scaleway Object Storage applies to a group of objects\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the bucket\n"
                },
                "region": {
                    "type": "string",
                    "description": "The region you want to attach the resource to\n"
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "The tags associated with this bucket\n"
                },
                "versioning": {
                    "$ref": "#/types/scaleway:index/ObjectBucketVersioning:ObjectBucketVersioning",
                    "description": "Allow multiple versions of an object in the same bucket\n"
                }
            },
            "required": [
                "endpoint",
                "name",
                "region",
                "versioning"
            ],
            "inputProperties": {
                "acl": {
                    "type": "string",
                    "description": "ACL of the bucket: either 'public-read' or 'private'.\n"
                },
                "corsRules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/scaleway:index/ObjectBucketCorsRule:ObjectBucketCorsRule"
                    }
                },
                "forceDestroy": {
                    "type": "boolean",
                    "description": "Delete objects in bucket\n"
                },
                "lifecycleRules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/scaleway:index/ObjectBucketLifecycleRule:ObjectBucketLifecycleRule"
                    },
                    "description": "Lifecycle configuration is a set of rules that define actions that Scaleway Object Storage applies to a group of objects\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the bucket\n"
                },
                "region": {
                    "type": "string",
                    "description": "The region you want to attach the resource to\n"
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "The tags associated with this bucket\n"
                },
                "versioning": {
                    "$ref": "#/types/scaleway:index/ObjectBucketVersioning:ObjectBucketVersioning",
                    "description": "Allow multiple versions of an object in the same bucket\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ObjectBucket resources.\n",
                "properties": {
                    "acl": {
                        "type": "string",
                        "description": "ACL of the bucket: either 'public-read' or 'private'.\n"
                    },
                    "corsRules": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/scaleway:index/ObjectBucketCorsRule:ObjectBucketCorsRule"
                        }
                    },
                    "endpoint": {
                        "type": "string",
                        "description": "Endpoint of the bucket\n"
                    },
                    "forceDestroy": {
                        "type": "boolean",
                        "description": "Delete objects in bucket\n"
                    },
                    "lifecycleRules": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/scaleway:index/ObjectBucketLifecycleRule:ObjectBucketLifecycleRule"
                        },
                        "description": "Lifecycle configuration is a set of rules that define actions that Scaleway Object Storage applies to a group of objects\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the bucket\n"
                    },
                    "region": {
                        "type": "string",
                        "description": "The region you want to attach the resource to\n"
                    },
                    "tags": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "The tags associated with this bucket\n"
                    },
                    "versioning": {
                        "$ref": "#/types/scaleway:index/ObjectBucketVersioning:ObjectBucketVersioning",
                        "description": "Allow multiple versions of an object in the same bucket\n"
                    }
                },
                "type": "object"
            }
        },
        "scaleway:index/redisCluster:RedisCluster": {
            "properties": {
                "acls": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/scaleway:index/RedisClusterAcl:RedisClusterAcl"
                    },
                    "description": "List of acl rules.\n"
                },
                "clusterSize": {
                    "type": "integer",
                    "description": "Number of nodes for the cluster.\n"
                },
                "createdAt": {
                    "type": "string",
                    "description": "The date and time of the creation of the Redis cluster\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the redis cluster\n"
                },
                "nodeType": {
                    "type": "string",
                    "description": "Type of node to use for the cluster\n"
                },
                "password": {
                    "type": "string",
                    "description": "Password of the user\n"
                },
                "projectId": {
                    "type": "string",
                    "description": "The project_id you want to attach the resource to\n"
                },
                "settings": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Map of settings to define for the cluster.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of tags [\"tag1\", \"tag2\", ...] attached to a redis cluster\n"
                },
                "tlsEnabled": {
                    "type": "boolean",
                    "description": "Whether or not TLS is enabled.\n"
                },
                "updatedAt": {
                    "type": "string",
                    "description": "The date and time of the last update of the Redis cluster\n"
                },
                "userName": {
                    "type": "string",
                    "description": "Name of the user created when the cluster is created\n"
                },
                "version": {
                    "type": "string",
                    "description": "Redis version of the cluster\n"
                },
                "zone": {
                    "type": "string",
                    "description": "The zone you want to attach the resource to\n"
                }
            },
            "required": [
                "clusterSize",
                "createdAt",
                "name",
                "nodeType",
                "password",
                "projectId",
                "updatedAt",
                "userName",
                "version",
                "zone"
            ],
            "inputProperties": {
                "acls": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/scaleway:index/RedisClusterAcl:RedisClusterAcl"
                    },
                    "description": "List of acl rules.\n"
                },
                "clusterSize": {
                    "type": "integer",
                    "description": "Number of nodes for the cluster.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the redis cluster\n"
                },
                "nodeType": {
                    "type": "string",
                    "description": "Type of node to use for the cluster\n"
                },
                "password": {
                    "type": "string",
                    "description": "Password of the user\n"
                },
                "projectId": {
                    "type": "string",
                    "description": "The project_id you want to attach the resource to\n"
                },
                "settings": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Map of settings to define for the cluster.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of tags [\"tag1\", \"tag2\", ...] attached to a redis cluster\n"
                },
                "tlsEnabled": {
                    "type": "boolean",
                    "description": "Whether or not TLS is enabled.\n"
                },
                "userName": {
                    "type": "string",
                    "description": "Name of the user created when the cluster is created\n"
                },
                "version": {
                    "type": "string",
                    "description": "Redis version of the cluster\n"
                },
                "zone": {
                    "type": "string",
                    "description": "The zone you want to attach the resource to\n"
                }
            },
            "requiredInputs": [
                "nodeType",
                "password",
                "userName",
                "version"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering RedisCluster resources.\n",
                "properties": {
                    "acls": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/scaleway:index/RedisClusterAcl:RedisClusterAcl"
                        },
                        "description": "List of acl rules.\n"
                    },
                    "clusterSize": {
                        "type": "integer",
                        "description": "Number of nodes for the cluster.\n"
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "The date and time of the creation of the Redis cluster\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the redis cluster\n"
                    },
                    "nodeType": {
                        "type": "string",
                        "description": "Type of node to use for the cluster\n"
                    },
                    "password": {
                        "type": "string",
                        "description": "Password of the user\n"
                    },
                    "projectId": {
                        "type": "string",
                        "description": "The project_id you want to attach the resource to\n"
                    },
                    "settings": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "Map of settings to define for the cluster.\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of tags [\"tag1\", \"tag2\", ...] attached to a redis cluster\n"
                    },
                    "tlsEnabled": {
                        "type": "boolean",
                        "description": "Whether or not TLS is enabled.\n"
                    },
                    "updatedAt": {
                        "type": "string",
                        "description": "The date and time of the last update of the Redis cluster\n"
                    },
                    "userName": {
                        "type": "string",
                        "description": "Name of the user created when the cluster is created\n"
                    },
                    "version": {
                        "type": "string",
                        "description": "Redis version of the cluster\n"
                    },
                    "zone": {
                        "type": "string",
                        "description": "The zone you want to attach the resource to\n"
                    }
                },
                "type": "object"
            }
        },
        "scaleway:index/registryNamespace:RegistryNamespace": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "The description of the container registry namespace\n"
                },
                "endpoint": {
                    "type": "string",
                    "description": "The endpoint reachable by docker\n"
                },
                "isPublic": {
                    "type": "boolean",
                    "description": "Define the default visibity policy\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the container registry namespace\n"
                },
                "organizationId": {
                    "type": "string",
                    "description": "The organization_id you want to attach the resource to\n"
                },
                "projectId": {
                    "type": "string",
                    "description": "The project_id you want to attach the resource to\n"
                },
                "region": {
                    "type": "string",
                    "description": "The region you want to attach the resource to\n"
                }
            },
            "required": [
                "endpoint",
                "name",
                "organizationId",
                "projectId",
                "region"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "The description of the container registry namespace\n"
                },
                "isPublic": {
                    "type": "boolean",
                    "description": "Define the default visibity policy\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the container registry namespace\n"
                },
                "projectId": {
                    "type": "string",
                    "description": "The project_id you want to attach the resource to\n"
                },
                "region": {
                    "type": "string",
                    "description": "The region you want to attach the resource to\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering RegistryNamespace resources.\n",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "The description of the container registry namespace\n"
                    },
                    "endpoint": {
                        "type": "string",
                        "description": "The endpoint reachable by docker\n"
                    },
                    "isPublic": {
                        "type": "boolean",
                        "description": "Define the default visibity policy\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the container registry namespace\n"
                    },
                    "organizationId": {
                        "type": "string",
                        "description": "The organization_id you want to attach the resource to\n"
                    },
                    "projectId": {
                        "type": "string",
                        "description": "The project_id you want to attach the resource to\n"
                    },
                    "region": {
                        "type": "string",
                        "description": "The region you want to attach the resource to\n"
                    }
                },
                "type": "object"
            }
        },
        "scaleway:index/vpcGatewayNetwork:VpcGatewayNetwork": {
            "properties": {
                "cleanupDhcp": {
                    "type": "boolean",
                    "description": "Remove DHCP config on this network on destroy\n"
                },
                "createdAt": {
                    "type": "string",
                    "description": "The date and time of the creation of the gateway network\n"
                },
                "dhcpId": {
                    "type": "string",
                    "description": "The ID of the public gateway DHCP config\n"
                },
                "enableDhcp": {
                    "type": "boolean",
                    "description": "Enable DHCP config on this network\n"
                },
                "enableMasquerade": {
                    "type": "boolean",
                    "description": "Enable masquerade on this network\n"
                },
                "gatewayId": {
                    "type": "string",
                    "description": "The ID of the public gateway where connect to\n"
                },
                "macAddress": {
                    "type": "string",
                    "description": "The mac address on this network\n"
                },
                "privateNetworkId": {
                    "type": "string",
                    "description": "The ID of the private network where connect to\n"
                },
                "staticAddress": {
                    "type": "string",
                    "description": "The static IP address in CIDR on this network\n"
                },
                "updatedAt": {
                    "type": "string",
                    "description": "The date and time of the last update of the gateway network\n"
                },
                "zone": {
                    "type": "string",
                    "description": "The zone you want to attach the resource to\n"
                }
            },
            "required": [
                "createdAt",
                "gatewayId",
                "macAddress",
                "privateNetworkId",
                "updatedAt",
                "zone"
            ],
            "inputProperties": {
                "cleanupDhcp": {
                    "type": "boolean",
                    "description": "Remove DHCP config on this network on destroy\n"
                },
                "dhcpId": {
                    "type": "string",
                    "description": "The ID of the public gateway DHCP config\n"
                },
                "enableDhcp": {
                    "type": "boolean",
                    "description": "Enable DHCP config on this network\n"
                },
                "enableMasquerade": {
                    "type": "boolean",
                    "description": "Enable masquerade on this network\n"
                },
                "gatewayId": {
                    "type": "string",
                    "description": "The ID of the public gateway where connect to\n"
                },
                "privateNetworkId": {
                    "type": "string",
                    "description": "The ID of the private network where connect to\n"
                },
                "staticAddress": {
                    "type": "string",
                    "description": "The static IP address in CIDR on this network\n"
                },
                "zone": {
                    "type": "string",
                    "description": "The zone you want to attach the resource to\n"
                }
            },
            "requiredInputs": [
                "gatewayId",
                "privateNetworkId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering VpcGatewayNetwork resources.\n",
                "properties": {
                    "cleanupDhcp": {
                        "type": "boolean",
                        "description": "Remove DHCP config on this network on destroy\n"
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "The date and time of the creation of the gateway network\n"
                    },
                    "dhcpId": {
                        "type": "string",
                        "description": "The ID of the public gateway DHCP config\n"
                    },
                    "enableDhcp": {
                        "type": "boolean",
                        "description": "Enable DHCP config on this network\n"
                    },
                    "enableMasquerade": {
                        "type": "boolean",
                        "description": "Enable masquerade on this network\n"
                    },
                    "gatewayId": {
                        "type": "string",
                        "description": "The ID of the public gateway where connect to\n"
                    },
                    "macAddress": {
                        "type": "string",
                        "description": "The mac address on this network\n"
                    },
                    "privateNetworkId": {
                        "type": "string",
                        "description": "The ID of the private network where connect to\n"
                    },
                    "staticAddress": {
                        "type": "string",
                        "description": "The static IP address in CIDR on this network\n"
                    },
                    "updatedAt": {
                        "type": "string",
                        "description": "The date and time of the last update of the gateway network\n"
                    },
                    "zone": {
                        "type": "string",
                        "description": "The zone you want to attach the resource to\n"
                    }
                },
                "type": "object"
            }
        },
        "scaleway:index/vpcPrivateNetwork:VpcPrivateNetwork": {
            "properties": {
                "createdAt": {
                    "type": "string",
                    "description": "The date and time of the creation of the private network\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the private network\n"
                },
                "organizationId": {
                    "type": "string",
                    "description": "The organization_id you want to attach the resource to\n"
                },
                "projectId": {
                    "type": "string",
                    "description": "The project_id you want to attach the resource to\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The tags associated with private network\n"
                },
                "updatedAt": {
                    "type": "string",
                    "description": "The date and time of the last update of the private network\n"
                },
                "zone": {
                    "type": "string",
                    "description": "The zone you want to attach the resource to\n"
                }
            },
            "required": [
                "createdAt",
                "name",
                "organizationId",
                "projectId",
                "updatedAt",
                "zone"
            ],
            "inputProperties": {
                "name": {
                    "type": "string",
                    "description": "The name of the private network\n"
                },
                "projectId": {
                    "type": "string",
                    "description": "The project_id you want to attach the resource to\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The tags associated with private network\n"
                },
                "zone": {
                    "type": "string",
                    "description": "The zone you want to attach the resource to\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering VpcPrivateNetwork resources.\n",
                "properties": {
                    "createdAt": {
                        "type": "string",
                        "description": "The date and time of the creation of the private network\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the private network\n"
                    },
                    "organizationId": {
                        "type": "string",
                        "description": "The organization_id you want to attach the resource to\n"
                    },
                    "projectId": {
                        "type": "string",
                        "description": "The project_id you want to attach the resource to\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The tags associated with private network\n"
                    },
                    "updatedAt": {
                        "type": "string",
                        "description": "The date and time of the last update of the private network\n"
                    },
                    "zone": {
                        "type": "string",
                        "description": "The zone you want to attach the resource to\n"
                    }
                },
                "type": "object"
            }
        },
        "scaleway:index/vpcPublicGateway:VpcPublicGateway": {
            "properties": {
                "createdAt": {
                    "type": "string",
                    "description": "The date and time of the creation of the public gateway\n"
                },
                "ipId": {
                    "type": "string",
                    "description": "attach an existing IP to the gateway\n"
                },
                "name": {
                    "type": "string",
                    "description": "name of the gateway\n"
                },
                "organizationId": {
                    "type": "string",
                    "description": "The organization_id you want to attach the resource to\n"
                },
                "projectId": {
                    "type": "string",
                    "description": "The project_id you want to attach the resource to\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The tags associated with public gateway\n"
                },
                "type": {
                    "type": "string",
                    "description": "gateway type\n"
                },
                "updatedAt": {
                    "type": "string",
                    "description": "The date and time of the last update of the public gateway\n"
                },
                "upstreamDnsServers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "override the gateway's default recursive DNS servers, if DNS features are enabled\n"
                },
                "zone": {
                    "type": "string",
                    "description": "The zone you want to attach the resource to\n"
                }
            },
            "required": [
                "createdAt",
                "ipId",
                "name",
                "organizationId",
                "projectId",
                "type",
                "updatedAt",
                "zone"
            ],
            "inputProperties": {
                "ipId": {
                    "type": "string",
                    "description": "attach an existing IP to the gateway\n"
                },
                "name": {
                    "type": "string",
                    "description": "name of the gateway\n"
                },
                "projectId": {
                    "type": "string",
                    "description": "The project_id you want to attach the resource to\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The tags associated with public gateway\n"
                },
                "type": {
                    "type": "string",
                    "description": "gateway type\n"
                },
                "upstreamDnsServers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "override the gateway's default recursive DNS servers, if DNS features are enabled\n"
                },
                "zone": {
                    "type": "string",
                    "description": "The zone you want to attach the resource to\n"
                }
            },
            "requiredInputs": [
                "type"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering VpcPublicGateway resources.\n",
                "properties": {
                    "createdAt": {
                        "type": "string",
                        "description": "The date and time of the creation of the public gateway\n"
                    },
                    "ipId": {
                        "type": "string",
                        "description": "attach an existing IP to the gateway\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "name of the gateway\n"
                    },
                    "organizationId": {
                        "type": "string",
                        "description": "The organization_id you want to attach the resource to\n"
                    },
                    "projectId": {
                        "type": "string",
                        "description": "The project_id you want to attach the resource to\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The tags associated with public gateway\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "gateway type\n"
                    },
                    "updatedAt": {
                        "type": "string",
                        "description": "The date and time of the last update of the public gateway\n"
                    },
                    "upstreamDnsServers": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "override the gateway's default recursive DNS servers, if DNS features are enabled\n"
                    },
                    "zone": {
                        "type": "string",
                        "description": "The zone you want to attach the resource to\n"
                    }
                },
                "type": "object"
            }
        },
        "scaleway:index/vpcPublicGatewayDhcp:VpcPublicGatewayDhcp": {
            "properties": {
                "address": {
                    "type": "string",
                    "description": "The address of the DHCP server. This will be the gateway's address in the private network. Defaults to the first address\nof the subnet\n"
                },
                "createdAt": {
                    "type": "string",
                    "description": "The date and time of the creation of the public gateway.\n"
                },
                "dnsLocalName": {
                    "type": "string",
                    "description": "TLD given to hostnames in the Private Network. Allowed characters are `a-z0-9-.`. Defaults to the slugified Private\nNetwork name if created along a GatewayNetwork, or else to `priv`.\n"
                },
                "dnsSearches": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Additional DNS search paths.\n"
                },
                "dnsServersOverrides": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Override the DNS server list pushed to DHCP clients, instead of the gateway itself.\n"
                },
                "enableDynamic": {
                    "type": "boolean",
                    "description": "Whether to enable dynamic pooling of IPs. By turning the dynamic pool off, only pre-existing DHCP reservations will be\nhanded out. Defaults to true.\n"
                },
                "organizationId": {
                    "type": "string",
                    "description": "The organization_id you want to attach the resource to\n"
                },
                "poolHigh": {
                    "type": "string",
                    "description": "High IP (included) of the dynamic address pool. Defaults to the last address of the subnet.\n"
                },
                "poolLow": {
                    "type": "string",
                    "description": "Low IP (included) of the dynamic address pool. Defaults to the second address of the subnet.\n"
                },
                "projectId": {
                    "type": "string",
                    "description": "The project_id you want to attach the resource to\n"
                },
                "pushDefaultRoute": {
                    "type": "boolean",
                    "description": "Whether the gateway should push a default route to DHCP clients or only hand out IPs. Defaults to true.\n"
                },
                "pushDnsServer": {
                    "type": "boolean",
                    "description": "Whether the gateway should push custom DNS servers to clients. This allows for instance hostname -\u003e IP resolution.\nDefaults to true.\n"
                },
                "rebindTimer": {
                    "type": "integer",
                    "description": "After how long, in seconds, a DHCP client will query for a new lease if previous renews fail. Must be 30s lower than\n`valid_lifetime`. Defaults to 51m (3060s).\n"
                },
                "renewTimer": {
                    "type": "integer",
                    "description": "After how long, in seconds, a renew will be attempted. Must be 30s lower than `rebind_timer`. Defaults to 50m (3000s).\n"
                },
                "subnet": {
                    "type": "string",
                    "description": "Subnet for the DHCP server\n"
                },
                "updatedAt": {
                    "type": "string",
                    "description": "The date and time of the last update of the public gateway.\n"
                },
                "validLifetime": {
                    "type": "integer",
                    "description": "For how long, in seconds, will DHCP entries will be valid. Defaults to 1h (3600s).\n"
                },
                "zone": {
                    "type": "string",
                    "description": "The zone you want to attach the resource to\n"
                }
            },
            "required": [
                "address",
                "createdAt",
                "dnsLocalName",
                "enableDynamic",
                "organizationId",
                "poolHigh",
                "poolLow",
                "projectId",
                "pushDefaultRoute",
                "pushDnsServer",
                "rebindTimer",
                "renewTimer",
                "subnet",
                "updatedAt",
                "validLifetime",
                "zone"
            ],
            "inputProperties": {
                "address": {
                    "type": "string",
                    "description": "The address of the DHCP server. This will be the gateway's address in the private network. Defaults to the first address\nof the subnet\n"
                },
                "dnsLocalName": {
                    "type": "string",
                    "description": "TLD given to hostnames in the Private Network. Allowed characters are `a-z0-9-.`. Defaults to the slugified Private\nNetwork name if created along a GatewayNetwork, or else to `priv`.\n"
                },
                "dnsSearches": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Additional DNS search paths.\n"
                },
                "dnsServersOverrides": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Override the DNS server list pushed to DHCP clients, instead of the gateway itself.\n"
                },
                "enableDynamic": {
                    "type": "boolean",
                    "description": "Whether to enable dynamic pooling of IPs. By turning the dynamic pool off, only pre-existing DHCP reservations will be\nhanded out. Defaults to true.\n"
                },
                "poolHigh": {
                    "type": "string",
                    "description": "High IP (included) of the dynamic address pool. Defaults to the last address of the subnet.\n"
                },
                "poolLow": {
                    "type": "string",
                    "description": "Low IP (included) of the dynamic address pool. Defaults to the second address of the subnet.\n"
                },
                "projectId": {
                    "type": "string",
                    "description": "The project_id you want to attach the resource to\n"
                },
                "pushDefaultRoute": {
                    "type": "boolean",
                    "description": "Whether the gateway should push a default route to DHCP clients or only hand out IPs. Defaults to true.\n"
                },
                "pushDnsServer": {
                    "type": "boolean",
                    "description": "Whether the gateway should push custom DNS servers to clients. This allows for instance hostname -\u003e IP resolution.\nDefaults to true.\n"
                },
                "rebindTimer": {
                    "type": "integer",
                    "description": "After how long, in seconds, a DHCP client will query for a new lease if previous renews fail. Must be 30s lower than\n`valid_lifetime`. Defaults to 51m (3060s).\n"
                },
                "renewTimer": {
                    "type": "integer",
                    "description": "After how long, in seconds, a renew will be attempted. Must be 30s lower than `rebind_timer`. Defaults to 50m (3000s).\n"
                },
                "subnet": {
                    "type": "string",
                    "description": "Subnet for the DHCP server\n"
                },
                "validLifetime": {
                    "type": "integer",
                    "description": "For how long, in seconds, will DHCP entries will be valid. Defaults to 1h (3600s).\n"
                },
                "zone": {
                    "type": "string",
                    "description": "The zone you want to attach the resource to\n"
                }
            },
            "requiredInputs": [
                "subnet"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering VpcPublicGatewayDhcp resources.\n",
                "properties": {
                    "address": {
                        "type": "string",
                        "description": "The address of the DHCP server. This will be the gateway's address in the private network. Defaults to the first address\nof the subnet\n"
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "The date and time of the creation of the public gateway.\n"
                    },
                    "dnsLocalName": {
                        "type": "string",
                        "description": "TLD given to hostnames in the Private Network. Allowed characters are `a-z0-9-.`. Defaults to the slugified Private\nNetwork name if created along a GatewayNetwork, or else to `priv`.\n"
                    },
                    "dnsSearches": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Additional DNS search paths.\n"
                    },
                    "dnsServersOverrides": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Override the DNS server list pushed to DHCP clients, instead of the gateway itself.\n"
                    },
                    "enableDynamic": {
                        "type": "boolean",
                        "description": "Whether to enable dynamic pooling of IPs. By turning the dynamic pool off, only pre-existing DHCP reservations will be\nhanded out. Defaults to true.\n"
                    },
                    "organizationId": {
                        "type": "string",
                        "description": "The organization_id you want to attach the resource to\n"
                    },
                    "poolHigh": {
                        "type": "string",
                        "description": "High IP (included) of the dynamic address pool. Defaults to the last address of the subnet.\n"
                    },
                    "poolLow": {
                        "type": "string",
                        "description": "Low IP (included) of the dynamic address pool. Defaults to the second address of the subnet.\n"
                    },
                    "projectId": {
                        "type": "string",
                        "description": "The project_id you want to attach the resource to\n"
                    },
                    "pushDefaultRoute": {
                        "type": "boolean",
                        "description": "Whether the gateway should push a default route to DHCP clients or only hand out IPs. Defaults to true.\n"
                    },
                    "pushDnsServer": {
                        "type": "boolean",
                        "description": "Whether the gateway should push custom DNS servers to clients. This allows for instance hostname -\u003e IP resolution.\nDefaults to true.\n"
                    },
                    "rebindTimer": {
                        "type": "integer",
                        "description": "After how long, in seconds, a DHCP client will query for a new lease if previous renews fail. Must be 30s lower than\n`valid_lifetime`. Defaults to 51m (3060s).\n"
                    },
                    "renewTimer": {
                        "type": "integer",
                        "description": "After how long, in seconds, a renew will be attempted. Must be 30s lower than `rebind_timer`. Defaults to 50m (3000s).\n"
                    },
                    "subnet": {
                        "type": "string",
                        "description": "Subnet for the DHCP server\n"
                    },
                    "updatedAt": {
                        "type": "string",
                        "description": "The date and time of the last update of the public gateway.\n"
                    },
                    "validLifetime": {
                        "type": "integer",
                        "description": "For how long, in seconds, will DHCP entries will be valid. Defaults to 1h (3600s).\n"
                    },
                    "zone": {
                        "type": "string",
                        "description": "The zone you want to attach the resource to\n"
                    }
                },
                "type": "object"
            }
        },
        "scaleway:index/vpcPublicGatewayDhcpReservation:VpcPublicGatewayDhcpReservation": {
            "properties": {
                "createdAt": {
                    "type": "string",
                    "description": "The configuration creation date.\n"
                },
                "gatewayNetworkId": {
                    "type": "string",
                    "description": "The ID of the owning GatewayNetwork (UUID format).\n"
                },
                "hostname": {
                    "type": "string",
                    "description": "The Hostname of the client machine.\n"
                },
                "ipAddress": {
                    "type": "string",
                    "description": "The IP address to give to the machine (IPv4 address).\n"
                },
                "macAddress": {
                    "type": "string",
                    "description": "The MAC address to give a static entry to.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The reservation type, either static (DHCP reservation) or dynamic (DHCP lease). Possible values are reservation and\nlease\n"
                },
                "updatedAt": {
                    "type": "string",
                    "description": "The configuration last modification date.\n"
                },
                "zone": {
                    "type": "string",
                    "description": "The zone you want to attach the resource to\n"
                }
            },
            "required": [
                "createdAt",
                "gatewayNetworkId",
                "hostname",
                "ipAddress",
                "macAddress",
                "type",
                "updatedAt",
                "zone"
            ],
            "inputProperties": {
                "gatewayNetworkId": {
                    "type": "string",
                    "description": "The ID of the owning GatewayNetwork (UUID format).\n"
                },
                "ipAddress": {
                    "type": "string",
                    "description": "The IP address to give to the machine (IPv4 address).\n"
                },
                "macAddress": {
                    "type": "string",
                    "description": "The MAC address to give a static entry to.\n"
                },
                "zone": {
                    "type": "string",
                    "description": "The zone you want to attach the resource to\n"
                }
            },
            "requiredInputs": [
                "gatewayNetworkId",
                "ipAddress",
                "macAddress"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering VpcPublicGatewayDhcpReservation resources.\n",
                "properties": {
                    "createdAt": {
                        "type": "string",
                        "description": "The configuration creation date.\n"
                    },
                    "gatewayNetworkId": {
                        "type": "string",
                        "description": "The ID of the owning GatewayNetwork (UUID format).\n"
                    },
                    "hostname": {
                        "type": "string",
                        "description": "The Hostname of the client machine.\n"
                    },
                    "ipAddress": {
                        "type": "string",
                        "description": "The IP address to give to the machine (IPv4 address).\n"
                    },
                    "macAddress": {
                        "type": "string",
                        "description": "The MAC address to give a static entry to.\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "The reservation type, either static (DHCP reservation) or dynamic (DHCP lease). Possible values are reservation and\nlease\n"
                    },
                    "updatedAt": {
                        "type": "string",
                        "description": "The configuration last modification date.\n"
                    },
                    "zone": {
                        "type": "string",
                        "description": "The zone you want to attach the resource to\n"
                    }
                },
                "type": "object"
            }
        },
        "scaleway:index/vpcPublicGatewayIp:VpcPublicGatewayIp": {
            "properties": {
                "address": {
                    "type": "string",
                    "description": "the IP itself\n"
                },
                "createdAt": {
                    "type": "string",
                    "description": "The date and time of the creation of the public gateway IP\n"
                },
                "organizationId": {
                    "type": "string",
                    "description": "The organization_id you want to attach the resource to\n"
                },
                "projectId": {
                    "type": "string",
                    "description": "The project_id you want to attach the resource to\n"
                },
                "reverse": {
                    "type": "string",
                    "description": "reverse domain name for the IP address\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The tags associated with public gateway IP\n"
                },
                "updatedAt": {
                    "type": "string",
                    "description": "The date and time of the last update of the public gateway IP\n"
                },
                "zone": {
                    "type": "string",
                    "description": "The zone you want to attach the resource to\n"
                }
            },
            "required": [
                "address",
                "createdAt",
                "organizationId",
                "projectId",
                "reverse",
                "updatedAt",
                "zone"
            ],
            "inputProperties": {
                "projectId": {
                    "type": "string",
                    "description": "The project_id you want to attach the resource to\n"
                },
                "reverse": {
                    "type": "string",
                    "description": "reverse domain name for the IP address\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The tags associated with public gateway IP\n"
                },
                "zone": {
                    "type": "string",
                    "description": "The zone you want to attach the resource to\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering VpcPublicGatewayIp resources.\n",
                "properties": {
                    "address": {
                        "type": "string",
                        "description": "the IP itself\n"
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "The date and time of the creation of the public gateway IP\n"
                    },
                    "organizationId": {
                        "type": "string",
                        "description": "The organization_id you want to attach the resource to\n"
                    },
                    "projectId": {
                        "type": "string",
                        "description": "The project_id you want to attach the resource to\n"
                    },
                    "reverse": {
                        "type": "string",
                        "description": "reverse domain name for the IP address\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The tags associated with public gateway IP\n"
                    },
                    "updatedAt": {
                        "type": "string",
                        "description": "The date and time of the last update of the public gateway IP\n"
                    },
                    "zone": {
                        "type": "string",
                        "description": "The zone you want to attach the resource to\n"
                    }
                },
                "type": "object"
            }
        },
        "scaleway:index/vpcPublicGatewayPatRule:VpcPublicGatewayPatRule": {
            "properties": {
                "createdAt": {
                    "type": "string",
                    "description": "The date and time of the creation of the PAT rule\n"
                },
                "gatewayId": {
                    "type": "string",
                    "description": "The ID of the gateway this PAT rule is applied to\n"
                },
                "organizationId": {
                    "type": "string",
                    "description": "The organization_id you want to attach the resource to\n"
                },
                "privateIp": {
                    "type": "string",
                    "description": "The private IP used in the PAT rule\n"
                },
                "privatePort": {
                    "type": "integer",
                    "description": "The private port used in the PAT rule\n"
                },
                "protocol": {
                    "type": "string",
                    "description": "The protocol used in the PAT rule\n"
                },
                "publicPort": {
                    "type": "integer",
                    "description": "The public port used in the PAT rule\n"
                },
                "updatedAt": {
                    "type": "string",
                    "description": "The date and time of the last update of the PAT rule\n"
                },
                "zone": {
                    "type": "string",
                    "description": "The zone you want to attach the resource to\n"
                }
            },
            "required": [
                "createdAt",
                "gatewayId",
                "organizationId",
                "privateIp",
                "privatePort",
                "publicPort",
                "updatedAt",
                "zone"
            ],
            "inputProperties": {
                "gatewayId": {
                    "type": "string",
                    "description": "The ID of the gateway this PAT rule is applied to\n"
                },
                "privateIp": {
                    "type": "string",
                    "description": "The private IP used in the PAT rule\n"
                },
                "privatePort": {
                    "type": "integer",
                    "description": "The private port used in the PAT rule\n"
                },
                "protocol": {
                    "type": "string",
                    "description": "The protocol used in the PAT rule\n"
                },
                "publicPort": {
                    "type": "integer",
                    "description": "The public port used in the PAT rule\n"
                },
                "zone": {
                    "type": "string",
                    "description": "The zone you want to attach the resource to\n"
                }
            },
            "requiredInputs": [
                "gatewayId",
                "privateIp",
                "privatePort",
                "publicPort"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering VpcPublicGatewayPatRule resources.\n",
                "properties": {
                    "createdAt": {
                        "type": "string",
                        "description": "The date and time of the creation of the PAT rule\n"
                    },
                    "gatewayId": {
                        "type": "string",
                        "description": "The ID of the gateway this PAT rule is applied to\n"
                    },
                    "organizationId": {
                        "type": "string",
                        "description": "The organization_id you want to attach the resource to\n"
                    },
                    "privateIp": {
                        "type": "string",
                        "description": "The private IP used in the PAT rule\n"
                    },
                    "privatePort": {
                        "type": "integer",
                        "description": "The private port used in the PAT rule\n"
                    },
                    "protocol": {
                        "type": "string",
                        "description": "The protocol used in the PAT rule\n"
                    },
                    "publicPort": {
                        "type": "integer",
                        "description": "The public port used in the PAT rule\n"
                    },
                    "updatedAt": {
                        "type": "string",
                        "description": "The date and time of the last update of the PAT rule\n"
                    },
                    "zone": {
                        "type": "string",
                        "description": "The zone you want to attach the resource to\n"
                    }
                },
                "type": "object"
            }
        }
    },
    "functions": {
        "scaleway:index/getAccountSshKey:getAccountSshKey": {
            "inputs": {
                "description": "A collection of arguments for invoking getAccountSshKey.\n",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "sshKeyId": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getAccountSshKey.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "organizationId": {
                        "type": "string"
                    },
                    "projectId": {
                        "type": "string"
                    },
                    "publicKey": {
                        "type": "string"
                    },
                    "sshKeyId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "organizationId",
                    "projectId",
                    "publicKey",
                    "id"
                ]
            }
        },
        "scaleway:index/getBaremetalOffer:getBaremetalOffer": {
            "inputs": {
                "description": "A collection of arguments for invoking getBaremetalOffer.\n",
                "properties": {
                    "includeDisabled": {
                        "type": "boolean"
                    },
                    "name": {
                        "type": "string"
                    },
                    "offerId": {
                        "type": "string"
                    },
                    "zone": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getBaremetalOffer.\n",
                "properties": {
                    "bandwidth": {
                        "type": "integer"
                    },
                    "commercialRange": {
                        "type": "string"
                    },
                    "cpu": {
                        "$ref": "#/types/scaleway:index/getBaremetalOfferCpu:getBaremetalOfferCpu"
                    },
                    "disks": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/scaleway:index/getBaremetalOfferDisk:getBaremetalOfferDisk"
                        }
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "includeDisabled": {
                        "type": "boolean"
                    },
                    "memories": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/scaleway:index/getBaremetalOfferMemory:getBaremetalOfferMemory"
                        }
                    },
                    "name": {
                        "type": "string"
                    },
                    "offerId": {
                        "type": "string"
                    },
                    "stock": {
                        "type": "string"
                    },
                    "zone": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "bandwidth",
                    "commercialRange",
                    "cpu",
                    "disks",
                    "memories",
                    "stock",
                    "zone",
                    "id"
                ]
            }
        },
        "scaleway:index/getBaremetalOs:getBaremetalOs": {
            "inputs": {
                "description": "A collection of arguments for invoking getBaremetalOs.\n",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "osId": {
                        "type": "string"
                    },
                    "version": {
                        "type": "string"
                    },
                    "zone": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getBaremetalOs.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "osId": {
                        "type": "string"
                    },
                    "version": {
                        "type": "string"
                    },
                    "zone": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "zone",
                    "id"
                ]
            }
        },
        "scaleway:index/getBaremetalServer:getBaremetalServer": {
            "inputs": {
                "description": "A collection of arguments for invoking getBaremetalServer.\n",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "serverId": {
                        "type": "string"
                    },
                    "zone": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getBaremetalServer.\n",
                "properties": {
                    "description": {
                        "type": "string"
                    },
                    "domain": {
                        "type": "string"
                    },
                    "hostname": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "ips": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/scaleway:index/getBaremetalServerIp:getBaremetalServerIp"
                        }
                    },
                    "name": {
                        "type": "string"
                    },
                    "offer": {
                        "type": "string"
                    },
                    "offerId": {
                        "type": "string"
                    },
                    "organizationId": {
                        "type": "string"
                    },
                    "os": {
                        "type": "string"
                    },
                    "osId": {
                        "type": "string"
                    },
                    "projectId": {
                        "type": "string"
                    },
                    "serverId": {
                        "type": "string"
                    },
                    "sshKeyIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "zone": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "description",
                    "domain",
                    "hostname",
                    "ips",
                    "offer",
                    "offerId",
                    "organizationId",
                    "os",
                    "osId",
                    "projectId",
                    "sshKeyIds",
                    "tags",
                    "id"
                ]
            }
        },
        "scaleway:index/getContainer:getContainer": {
            "inputs": {
                "description": "A collection of arguments for invoking getContainer.\n",
                "properties": {
                    "containerId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "namespaceId": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "namespaceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getContainer.\n",
                "properties": {
                    "containerId": {
                        "type": "string"
                    },
                    "cpuLimit": {
                        "type": "integer"
                    },
                    "cronStatus": {
                        "type": "string"
                    },
                    "deploy": {
                        "type": "boolean"
                    },
                    "description": {
                        "type": "string"
                    },
                    "domainName": {
                        "type": "string"
                    },
                    "environmentVariables": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "errorMessage": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "maxConcurrency": {
                        "type": "integer"
                    },
                    "maxScale": {
                        "type": "integer"
                    },
                    "memoryLimit": {
                        "type": "integer"
                    },
                    "minScale": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "namespaceId": {
                        "type": "string"
                    },
                    "port": {
                        "type": "integer"
                    },
                    "privacy": {
                        "type": "string"
                    },
                    "protocol": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "registryImage": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    },
                    "timeout": {
                        "type": "integer"
                    }
                },
                "type": "object",
                "required": [
                    "cpuLimit",
                    "cronStatus",
                    "deploy",
                    "description",
                    "domainName",
                    "environmentVariables",
                    "errorMessage",
                    "maxConcurrency",
                    "maxScale",
                    "memoryLimit",
                    "minScale",
                    "namespaceId",
                    "port",
                    "privacy",
                    "protocol",
                    "registryImage",
                    "status",
                    "timeout",
                    "id"
                ]
            }
        },
        "scaleway:index/getContainerNamespace:getContainerNamespace": {
            "inputs": {
                "description": "A collection of arguments for invoking getContainerNamespace.\n",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "namespaceId": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getContainerNamespace.\n",
                "properties": {
                    "description": {
                        "type": "string"
                    },
                    "environmentVariables": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "namespaceId": {
                        "type": "string"
                    },
                    "organizationId": {
                        "type": "string"
                    },
                    "projectId": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "registryEndpoint": {
                        "type": "string"
                    },
                    "registryNamespaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "description",
                    "environmentVariables",
                    "organizationId",
                    "projectId",
                    "registryEndpoint",
                    "registryNamespaceId",
                    "id"
                ]
            }
        },
        "scaleway:index/getDatabase:getDatabase": {
            "inputs": {
                "description": "A collection of arguments for invoking getDatabase.\n",
                "properties": {
                    "instanceId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "instanceId",
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getDatabase.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "instanceId": {
                        "type": "string"
                    },
                    "managed": {
                        "type": "boolean"
                    },
                    "name": {
                        "type": "string"
                    },
                    "owner": {
                        "type": "string"
                    },
                    "size": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "instanceId",
                    "managed",
                    "name",
                    "owner",
                    "size",
                    "id"
                ]
            }
        },
        "scaleway:index/getDatabaseAcl:getDatabaseAcl": {
            "inputs": {
                "description": "A collection of arguments for invoking getDatabaseAcl.\n",
                "properties": {
                    "instanceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "instanceId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getDatabaseAcl.\n",
                "properties": {
                    "aclRules": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/scaleway:index/getDatabaseAclAclRule:getDatabaseAclAclRule"
                        }
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "instanceId": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "aclRules",
                    "instanceId",
                    "region",
                    "id"
                ]
            }
        },
        "scaleway:index/getDatabaseInstance:getDatabaseInstance": {
            "inputs": {
                "description": "A collection of arguments for invoking getDatabaseInstance.\n",
                "properties": {
                    "instanceId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getDatabaseInstance.\n",
                "properties": {
                    "backupSameRegion": {
                        "type": "boolean"
                    },
                    "backupScheduleFrequency": {
                        "type": "integer"
                    },
                    "backupScheduleRetention": {
                        "type": "integer"
                    },
                    "certificate": {
                        "type": "string"
                    },
                    "disableBackup": {
                        "type": "boolean"
                    },
                    "endpointIp": {
                        "type": "string"
                    },
                    "endpointPort": {
                        "type": "integer"
                    },
                    "engine": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "instanceId": {
                        "type": "string"
                    },
                    "isHaCluster": {
                        "type": "boolean"
                    },
                    "loadBalancers": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/scaleway:index/getDatabaseInstanceLoadBalancer:getDatabaseInstanceLoadBalancer"
                        }
                    },
                    "name": {
                        "type": "string"
                    },
                    "nodeType": {
                        "type": "string"
                    },
                    "organizationId": {
                        "type": "string"
                    },
                    "password": {
                        "type": "string"
                    },
                    "privateNetworks": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/scaleway:index/getDatabaseInstancePrivateNetwork:getDatabaseInstancePrivateNetwork"
                        }
                    },
                    "projectId": {
                        "type": "string"
                    },
                    "readReplicas": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/scaleway:index/getDatabaseInstanceReadReplica:getDatabaseInstanceReadReplica"
                        }
                    },
                    "region": {
                        "type": "string"
                    },
                    "settings": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "userName": {
                        "type": "string"
                    },
                    "volumeSizeInGb": {
                        "type": "integer"
                    },
                    "volumeType": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "backupSameRegion",
                    "backupScheduleFrequency",
                    "backupScheduleRetention",
                    "certificate",
                    "disableBackup",
                    "endpointIp",
                    "endpointPort",
                    "engine",
                    "isHaCluster",
                    "loadBalancers",
                    "nodeType",
                    "organizationId",
                    "password",
                    "privateNetworks",
                    "projectId",
                    "readReplicas",
                    "region",
                    "settings",
                    "tags",
                    "userName",
                    "volumeSizeInGb",
                    "volumeType",
                    "id"
                ]
            }
        },
        "scaleway:index/getDatabasePrivilege:getDatabasePrivilege": {
            "inputs": {
                "description": "A collection of arguments for invoking getDatabasePrivilege.\n",
                "properties": {
                    "databaseName": {
                        "type": "string"
                    },
                    "instanceId": {
                        "type": "string"
                    },
                    "userName": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "databaseName",
                    "instanceId",
                    "userName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getDatabasePrivilege.\n",
                "properties": {
                    "databaseName": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "instanceId": {
                        "type": "string"
                    },
                    "permission": {
                        "type": "string"
                    },
                    "userName": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "databaseName",
                    "instanceId",
                    "permission",
                    "userName",
                    "id"
                ]
            }
        },
        "scaleway:index/getDomainRecord:getDomainRecord": {
            "inputs": {
                "description": "A collection of arguments for invoking getDomainRecord.\n",
                "properties": {
                    "data": {
                        "type": "string"
                    },
                    "dnsZone": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "recordId": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getDomainRecord.\n",
                "properties": {
                    "data": {
                        "type": "string"
                    },
                    "dnsZone": {
                        "type": "string"
                    },
                    "geoIps": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/scaleway:index/getDomainRecordGeoIp:getDomainRecordGeoIp"
                        }
                    },
                    "httpServices": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/scaleway:index/getDomainRecordHttpService:getDomainRecordHttpService"
                        }
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "keepEmptyZone": {
                        "type": "boolean"
                    },
                    "name": {
                        "type": "string"
                    },
                    "priority": {
                        "type": "integer"
                    },
                    "projectId": {
                        "type": "string"
                    },
                    "recordId": {
                        "type": "string"
                    },
                    "rootZone": {
                        "type": "boolean"
                    },
                    "ttl": {
                        "type": "integer"
                    },
                    "type": {
                        "type": "string"
                    },
                    "views": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/scaleway:index/getDomainRecordView:getDomainRecordView"
                        }
                    },
                    "weighteds": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/scaleway:index/getDomainRecordWeighted:getDomainRecordWeighted"
                        }
                    }
                },
                "type": "object",
                "required": [
                    "geoIps",
                    "httpServices",
                    "keepEmptyZone",
                    "priority",
                    "projectId",
                    "rootZone",
                    "ttl",
                    "views",
                    "weighteds",
                    "id"
                ]
            }
        },
        "scaleway:index/getDomainZone:getDomainZone": {
            "inputs": {
                "description": "A collection of arguments for invoking getDomainZone.\n",
                "properties": {
                    "domain": {
                        "type": "string"
                    },
                    "subdomain": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getDomainZone.\n",
                "properties": {
                    "domain": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "message": {
                        "type": "string"
                    },
                    "ns": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "nsDefaults": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "nsMasters": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "projectId": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    },
                    "subdomain": {
                        "type": "string"
                    },
                    "updatedAt": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "message",
                    "ns",
                    "nsDefaults",
                    "nsMasters",
                    "projectId",
                    "status",
                    "updatedAt",
                    "id"
                ]
            }
        },
        "scaleway:index/getFunctionNamespace:getFunctionNamespace": {
            "inputs": {
                "description": "A collection of arguments for invoking getFunctionNamespace.\n",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "namespaceId": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getFunctionNamespace.\n",
                "properties": {
                    "description": {
                        "type": "string"
                    },
                    "environmentVariables": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "namespaceId": {
                        "type": "string"
                    },
                    "organizationId": {
                        "type": "string"
                    },
                    "projectId": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "registryEndpoint": {
                        "type": "string"
                    },
                    "registryNamespaceId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "description",
                    "environmentVariables",
                    "organizationId",
                    "projectId",
                    "registryEndpoint",
                    "registryNamespaceId",
                    "id"
                ]
            }
        },
        "scaleway:index/getInstanceImage:getInstanceImage": {
            "inputs": {
                "description": "A collection of arguments for invoking getInstanceImage.\n",
                "properties": {
                    "architecture": {
                        "type": "string"
                    },
                    "imageId": {
                        "type": "string"
                    },
                    "latest": {
                        "type": "boolean"
                    },
                    "name": {
                        "type": "string"
                    },
                    "projectId": {
                        "type": "string"
                    },
                    "zone": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getInstanceImage.\n",
                "properties": {
                    "additionalVolumeIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "architecture": {
                        "type": "string"
                    },
                    "creationDate": {
                        "type": "string"
                    },
                    "defaultBootscriptId": {
                        "type": "string"
                    },
                    "fromServerId": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "imageId": {
                        "type": "string"
                    },
                    "latest": {
                        "type": "boolean"
                    },
                    "modificationDate": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "organizationId": {
                        "type": "string"
                    },
                    "projectId": {
                        "type": "string"
                    },
                    "public": {
                        "type": "boolean"
                    },
                    "rootVolumeId": {
                        "type": "string"
                    },
                    "state": {
                        "type": "string"
                    },
                    "zone": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "additionalVolumeIds",
                    "creationDate",
                    "defaultBootscriptId",
                    "fromServerId",
                    "modificationDate",
                    "organizationId",
                    "projectId",
                    "public",
                    "rootVolumeId",
                    "state",
                    "zone",
                    "id"
                ]
            }
        },
        "scaleway:index/getInstanceIp:getInstanceIp": {
            "inputs": {
                "description": "A collection of arguments for invoking getInstanceIp.\n",
                "properties": {
                    "address": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getInstanceIp.\n",
                "properties": {
                    "address": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "organizationId": {
                        "type": "string"
                    },
                    "projectId": {
                        "type": "string"
                    },
                    "reverse": {
                        "type": "string"
                    },
                    "serverId": {
                        "type": "string"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "zone": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "organizationId",
                    "projectId",
                    "reverse",
                    "serverId",
                    "tags",
                    "zone"
                ]
            }
        },
        "scaleway:index/getInstanceSecurityGroup:getInstanceSecurityGroup": {
            "inputs": {
                "description": "A collection of arguments for invoking getInstanceSecurityGroup.\n",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "securityGroupId": {
                        "type": "string"
                    },
                    "zone": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getInstanceSecurityGroup.\n",
                "properties": {
                    "description": {
                        "type": "string"
                    },
                    "enableDefaultSecurity": {
                        "type": "boolean"
                    },
                    "externalRules": {
                        "type": "boolean"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "inboundDefaultPolicy": {
                        "type": "string"
                    },
                    "inboundRules": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/scaleway:index/getInstanceSecurityGroupInboundRule:getInstanceSecurityGroupInboundRule"
                        }
                    },
                    "name": {
                        "type": "string"
                    },
                    "organizationId": {
                        "type": "string"
                    },
                    "outboundDefaultPolicy": {
                        "type": "string"
                    },
                    "outboundRules": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/scaleway:index/getInstanceSecurityGroupOutboundRule:getInstanceSecurityGroupOutboundRule"
                        }
                    },
                    "projectId": {
                        "type": "string"
                    },
                    "securityGroupId": {
                        "type": "string"
                    },
                    "stateful": {
                        "type": "boolean"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "zone": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "description",
                    "enableDefaultSecurity",
                    "externalRules",
                    "inboundDefaultPolicy",
                    "inboundRules",
                    "organizationId",
                    "outboundDefaultPolicy",
                    "outboundRules",
                    "projectId",
                    "stateful",
                    "tags",
                    "id"
                ]
            }
        },
        "scaleway:index/getInstanceServer:getInstanceServer": {
            "inputs": {
                "description": "A collection of arguments for invoking getInstanceServer.\n",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "serverId": {
                        "type": "string"
                    },
                    "zone": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getInstanceServer.\n",
                "properties": {
                    "additionalVolumeIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "bootType": {
                        "type": "string"
                    },
                    "bootscriptId": {
                        "type": "string"
                    },
                    "cloudInit": {
                        "type": "string"
                    },
                    "enableDynamicIp": {
                        "type": "boolean"
                    },
                    "enableIpv6": {
                        "type": "boolean"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "image": {
                        "type": "string"
                    },
                    "ipId": {
                        "type": "string"
                    },
                    "ipv6Address": {
                        "type": "string"
                    },
                    "ipv6Gateway": {
                        "type": "string"
                    },
                    "ipv6PrefixLength": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "organizationId": {
                        "type": "string"
                    },
                    "placementGroupId": {
                        "type": "string"
                    },
                    "placementGroupPolicyRespected": {
                        "type": "boolean"
                    },
                    "privateIp": {
                        "type": "string"
                    },
                    "privateNetworks": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/scaleway:index/getInstanceServerPrivateNetwork:getInstanceServerPrivateNetwork"
                        }
                    },
                    "projectId": {
                        "type": "string"
                    },
                    "publicIp": {
                        "type": "string"
                    },
                    "rootVolumes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/scaleway:index/getInstanceServerRootVolume:getInstanceServerRootVolume"
                        }
                    },
                    "securityGroupId": {
                        "type": "string"
                    },
                    "serverId": {
                        "type": "string"
                    },
                    "state": {
                        "type": "string"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "type": {
                        "type": "string"
                    },
                    "userData": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "zone": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "additionalVolumeIds",
                    "bootType",
                    "bootscriptId",
                    "cloudInit",
                    "enableDynamicIp",
                    "enableIpv6",
                    "image",
                    "ipId",
                    "ipv6Address",
                    "ipv6Gateway",
                    "ipv6PrefixLength",
                    "organizationId",
                    "placementGroupId",
                    "placementGroupPolicyRespected",
                    "privateIp",
                    "privateNetworks",
                    "projectId",
                    "publicIp",
                    "rootVolumes",
                    "securityGroupId",
                    "state",
                    "tags",
                    "type",
                    "userData",
                    "id"
                ]
            }
        },
        "scaleway:index/getInstanceVolume:getInstanceVolume": {
            "inputs": {
                "description": "A collection of arguments for invoking getInstanceVolume.\n",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "volumeId": {
                        "type": "string"
                    },
                    "zone": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getInstanceVolume.\n",
                "properties": {
                    "fromSnapshotId": {
                        "type": "string"
                    },
                    "fromVolumeId": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "organizationId": {
                        "type": "string"
                    },
                    "projectId": {
                        "type": "string"
                    },
                    "serverId": {
                        "type": "string"
                    },
                    "sizeInGb": {
                        "type": "integer"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "type": {
                        "type": "string"
                    },
                    "volumeId": {
                        "type": "string"
                    },
                    "zone": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "fromSnapshotId",
                    "fromVolumeId",
                    "organizationId",
                    "projectId",
                    "serverId",
                    "sizeInGb",
                    "tags",
                    "type",
                    "id"
                ]
            }
        },
        "scaleway:index/getIotDevice:getIotDevice": {
            "inputs": {
                "description": "A collection of arguments for invoking getIotDevice.\n",
                "properties": {
                    "deviceId": {
                        "type": "string"
                    },
                    "hubId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getIotDevice.\n",
                "properties": {
                    "allowInsecure": {
                        "type": "boolean"
                    },
                    "allowMultipleConnections": {
                        "type": "boolean"
                    },
                    "certificates": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/scaleway:index/getIotDeviceCertificate:getIotDeviceCertificate"
                        }
                    },
                    "createdAt": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "deviceId": {
                        "type": "string"
                    },
                    "hubId": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "isConnected": {
                        "type": "boolean"
                    },
                    "lastActivityAt": {
                        "type": "string"
                    },
                    "messageFilters": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/scaleway:index/getIotDeviceMessageFilter:getIotDeviceMessageFilter"
                        }
                    },
                    "name": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    },
                    "updatedAt": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "allowInsecure",
                    "allowMultipleConnections",
                    "certificates",
                    "createdAt",
                    "description",
                    "hubId",
                    "isConnected",
                    "lastActivityAt",
                    "messageFilters",
                    "status",
                    "updatedAt",
                    "id"
                ]
            }
        },
        "scaleway:index/getIotHub:getIotHub": {
            "inputs": {
                "description": "A collection of arguments for invoking getIotHub.\n",
                "properties": {
                    "hubId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getIotHub.\n",
                "properties": {
                    "connectedDeviceCount": {
                        "type": "integer"
                    },
                    "createdAt": {
                        "type": "string"
                    },
                    "deviceAutoProvisioning": {
                        "type": "boolean"
                    },
                    "deviceCount": {
                        "type": "integer"
                    },
                    "disableEvents": {
                        "type": "boolean"
                    },
                    "enabled": {
                        "type": "boolean"
                    },
                    "endpoint": {
                        "type": "string"
                    },
                    "eventsTopicPrefix": {
                        "type": "string"
                    },
                    "hubCa": {
                        "type": "string"
                    },
                    "hubCaChallenge": {
                        "type": "string"
                    },
                    "hubId": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "organizationId": {
                        "type": "string"
                    },
                    "productPlan": {
                        "type": "string"
                    },
                    "projectId": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    },
                    "updatedAt": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "connectedDeviceCount",
                    "createdAt",
                    "deviceAutoProvisioning",
                    "deviceCount",
                    "disableEvents",
                    "enabled",
                    "endpoint",
                    "eventsTopicPrefix",
                    "hubCa",
                    "hubCaChallenge",
                    "organizationId",
                    "productPlan",
                    "projectId",
                    "status",
                    "updatedAt",
                    "id"
                ]
            }
        },
        "scaleway:index/getKubernetesCluster:getKubernetesCluster": {
            "inputs": {
                "description": "A collection of arguments for invoking getKubernetesCluster.\n",
                "properties": {
                    "clusterId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getKubernetesCluster.\n",
                "properties": {
                    "admissionPlugins": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "apiserverCertSans": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "apiserverUrl": {
                        "type": "string"
                    },
                    "autoUpgrades": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/scaleway:index/getKubernetesClusterAutoUpgrade:getKubernetesClusterAutoUpgrade"
                        }
                    },
                    "autoscalerConfigs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/scaleway:index/getKubernetesClusterAutoscalerConfig:getKubernetesClusterAutoscalerConfig"
                        }
                    },
                    "clusterId": {
                        "type": "string"
                    },
                    "cni": {
                        "type": "string"
                    },
                    "createdAt": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "featureGates": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "kubeconfigs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/scaleway:index/getKubernetesClusterKubeconfig:getKubernetesClusterKubeconfig"
                        }
                    },
                    "name": {
                        "type": "string"
                    },
                    "openIdConnectConfigs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/scaleway:index/getKubernetesClusterOpenIdConnectConfig:getKubernetesClusterOpenIdConnectConfig"
                        }
                    },
                    "organizationId": {
                        "type": "string"
                    },
                    "projectId": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "type": {
                        "type": "string"
                    },
                    "updatedAt": {
                        "type": "string"
                    },
                    "upgradeAvailable": {
                        "type": "boolean"
                    },
                    "version": {
                        "type": "string"
                    },
                    "wildcardDns": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "admissionPlugins",
                    "apiserverCertSans",
                    "apiserverUrl",
                    "autoUpgrades",
                    "autoscalerConfigs",
                    "cni",
                    "createdAt",
                    "description",
                    "featureGates",
                    "kubeconfigs",
                    "openIdConnectConfigs",
                    "organizationId",
                    "projectId",
                    "status",
                    "tags",
                    "type",
                    "updatedAt",
                    "upgradeAvailable",
                    "version",
                    "wildcardDns",
                    "id"
                ]
            }
        },
        "scaleway:index/getKubernetesNodePool:getKubernetesNodePool": {
            "inputs": {
                "description": "A collection of arguments for invoking getKubernetesNodePool.\n",
                "properties": {
                    "clusterId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "poolId": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "size": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getKubernetesNodePool.\n",
                "properties": {
                    "autohealing": {
                        "type": "boolean"
                    },
                    "autoscaling": {
                        "type": "boolean"
                    },
                    "clusterId": {
                        "type": "string"
                    },
                    "containerRuntime": {
                        "type": "string"
                    },
                    "createdAt": {
                        "type": "string"
                    },
                    "currentSize": {
                        "type": "integer"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "kubeletArgs": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "maxSize": {
                        "type": "integer"
                    },
                    "minSize": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "nodeType": {
                        "type": "string"
                    },
                    "nodes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/scaleway:index/getKubernetesNodePoolNode:getKubernetesNodePoolNode"
                        }
                    },
                    "placementGroupId": {
                        "type": "string"
                    },
                    "poolId": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "size": {
                        "type": "integer"
                    },
                    "status": {
                        "type": "string"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "updatedAt": {
                        "type": "string"
                    },
                    "upgradePolicies": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/scaleway:index/getKubernetesNodePoolUpgradePolicy:getKubernetesNodePoolUpgradePolicy"
                        }
                    },
                    "version": {
                        "type": "string"
                    },
                    "waitForPoolReady": {
                        "type": "boolean"
                    },
                    "zone": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "autohealing",
                    "autoscaling",
                    "containerRuntime",
                    "createdAt",
                    "currentSize",
                    "kubeletArgs",
                    "maxSize",
                    "minSize",
                    "nodeType",
                    "nodes",
                    "placementGroupId",
                    "status",
                    "tags",
                    "updatedAt",
                    "upgradePolicies",
                    "version",
                    "waitForPoolReady",
                    "zone",
                    "id"
                ]
            }
        },
        "scaleway:index/getLoadbalancer:getLoadbalancer": {
            "inputs": {
                "description": "A collection of arguments for invoking getLoadbalancer.\n",
                "properties": {
                    "lbId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "releaseIp": {
                        "type": "boolean"
                    },
                    "zone": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getLoadbalancer.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "ipAddress": {
                        "type": "string"
                    },
                    "ipId": {
                        "type": "string"
                    },
                    "lbId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "organizationId": {
                        "type": "string"
                    },
                    "privateNetworks": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/scaleway:index/getLoadbalancerPrivateNetwork:getLoadbalancerPrivateNetwork"
                        }
                    },
                    "projectId": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "releaseIp": {
                        "type": "boolean"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "type": {
                        "type": "string"
                    },
                    "zone": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "ipAddress",
                    "ipId",
                    "organizationId",
                    "privateNetworks",
                    "projectId",
                    "region",
                    "tags",
                    "type",
                    "id"
                ]
            }
        },
        "scaleway:index/getLoadbalancerCertificate:getLoadbalancerCertificate": {
            "inputs": {
                "description": "A collection of arguments for invoking getLoadbalancerCertificate.\n",
                "properties": {
                    "certificateId": {
                        "type": "string"
                    },
                    "lbId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getLoadbalancerCertificate.\n",
                "properties": {
                    "certificateId": {
                        "type": "string"
                    },
                    "commonName": {
                        "type": "string"
                    },
                    "customCertificates": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/scaleway:index/getLoadbalancerCertificateCustomCertificate:getLoadbalancerCertificateCustomCertificate"
                        }
                    },
                    "fingerprint": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "lbId": {
                        "type": "string"
                    },
                    "letsencrypts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/scaleway:index/getLoadbalancerCertificateLetsencrypt:getLoadbalancerCertificateLetsencrypt"
                        }
                    },
                    "name": {
                        "type": "string"
                    },
                    "notValidAfter": {
                        "type": "string"
                    },
                    "notValidBefore": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    },
                    "subjectAlternativeNames": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "type": "object",
                "required": [
                    "commonName",
                    "customCertificates",
                    "fingerprint",
                    "letsencrypts",
                    "notValidAfter",
                    "notValidBefore",
                    "status",
                    "subjectAlternativeNames",
                    "id"
                ]
            }
        },
        "scaleway:index/getLoadbalancerIp:getLoadbalancerIp": {
            "inputs": {
                "description": "A collection of arguments for invoking getLoadbalancerIp.\n",
                "properties": {
                    "ipAddress": {
                        "type": "string"
                    },
                    "ipId": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getLoadbalancerIp.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "ipAddress": {
                        "type": "string"
                    },
                    "ipId": {
                        "type": "string"
                    },
                    "lbId": {
                        "type": "string"
                    },
                    "organizationId": {
                        "type": "string"
                    },
                    "projectId": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "reverse": {
                        "type": "string"
                    },
                    "zone": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "lbId",
                    "organizationId",
                    "projectId",
                    "region",
                    "reverse",
                    "zone",
                    "id"
                ]
            }
        },
        "scaleway:index/getMarketplaceImage:getMarketplaceImage": {
            "inputs": {
                "description": "A collection of arguments for invoking getMarketplaceImage.\n",
                "properties": {
                    "instanceType": {
                        "type": "string"
                    },
                    "label": {
                        "type": "string"
                    },
                    "zone": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "label"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getMarketplaceImage.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "instanceType": {
                        "type": "string"
                    },
                    "label": {
                        "type": "string"
                    },
                    "zone": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "label",
                    "zone",
                    "id"
                ]
            }
        },
        "scaleway:index/getObjectBucket:getObjectBucket": {
            "inputs": {
                "description": "A collection of arguments for invoking getObjectBucket.\n",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getObjectBucket.\n",
                "properties": {
                    "acl": {
                        "type": "string"
                    },
                    "corsRules": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/scaleway:index/getObjectBucketCorsRule:getObjectBucketCorsRule"
                        }
                    },
                    "endpoint": {
                        "type": "string"
                    },
                    "forceDestroy": {
                        "type": "boolean"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "lifecycleRules": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/scaleway:index/getObjectBucketLifecycleRule:getObjectBucketLifecycleRule"
                        }
                    },
                    "name": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "tags": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "versionings": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/scaleway:index/getObjectBucketVersioning:getObjectBucketVersioning"
                        }
                    }
                },
                "type": "object",
                "required": [
                    "acl",
                    "corsRules",
                    "endpoint",
                    "forceDestroy",
                    "lifecycleRules",
                    "tags",
                    "versionings",
                    "id"
                ]
            }
        },
        "scaleway:index/getRedisCluster:getRedisCluster": {
            "inputs": {
                "description": "A collection of arguments for invoking getRedisCluster.\n",
                "properties": {
                    "clusterId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "zone": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getRedisCluster.\n",
                "properties": {
                    "acls": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/scaleway:index/getRedisClusterAcl:getRedisClusterAcl"
                        }
                    },
                    "clusterId": {
                        "type": "string"
                    },
                    "clusterSize": {
                        "type": "integer"
                    },
                    "createdAt": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "nodeType": {
                        "type": "string"
                    },
                    "password": {
                        "type": "string"
                    },
                    "projectId": {
                        "type": "string"
                    },
                    "settings": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "tlsEnabled": {
                        "type": "boolean"
                    },
                    "updatedAt": {
                        "type": "string"
                    },
                    "userName": {
                        "type": "string"
                    },
                    "version": {
                        "type": "string"
                    },
                    "zone": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "acls",
                    "clusterSize",
                    "createdAt",
                    "nodeType",
                    "password",
                    "projectId",
                    "settings",
                    "tags",
                    "tlsEnabled",
                    "updatedAt",
                    "userName",
                    "version",
                    "id"
                ]
            }
        },
        "scaleway:index/getRegistryImage:getRegistryImage": {
            "inputs": {
                "description": "A collection of arguments for invoking getRegistryImage.\n",
                "properties": {
                    "imageId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "namespaceId": {
                        "type": "string"
                    },
                    "projectId": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getRegistryImage.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "imageId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "namespaceId": {
                        "type": "string"
                    },
                    "organizationId": {
                        "type": "string"
                    },
                    "projectId": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "size": {
                        "type": "integer"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "visibility": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "namespaceId",
                    "organizationId",
                    "projectId",
                    "region",
                    "size",
                    "tags",
                    "visibility",
                    "id"
                ]
            }
        },
        "scaleway:index/getRegistryNamespace:getRegistryNamespace": {
            "inputs": {
                "description": "A collection of arguments for invoking getRegistryNamespace.\n",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "namespaceId": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getRegistryNamespace.\n",
                "properties": {
                    "description": {
                        "type": "string"
                    },
                    "endpoint": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "isPublic": {
                        "type": "boolean"
                    },
                    "name": {
                        "type": "string"
                    },
                    "namespaceId": {
                        "type": "string"
                    },
                    "organizationId": {
                        "type": "string"
                    },
                    "projectId": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "description",
                    "endpoint",
                    "isPublic",
                    "organizationId",
                    "projectId",
                    "id"
                ]
            }
        },
        "scaleway:index/getVpcPrivateNetwork:getVpcPrivateNetwork": {
            "inputs": {
                "description": "A collection of arguments for invoking getVpcPrivateNetwork.\n",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "privateNetworkId": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getVpcPrivateNetwork.\n",
                "properties": {
                    "createdAt": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "organizationId": {
                        "type": "string"
                    },
                    "privateNetworkId": {
                        "type": "string"
                    },
                    "projectId": {
                        "type": "string"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "updatedAt": {
                        "type": "string"
                    },
                    "zone": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "createdAt",
                    "organizationId",
                    "projectId",
                    "tags",
                    "updatedAt",
                    "zone",
                    "id"
                ]
            }
        },
        "scaleway:index/getVpcPublicGateway:getVpcPublicGateway": {
            "inputs": {
                "description": "A collection of arguments for invoking getVpcPublicGateway.\n",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "publicGatewayId": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getVpcPublicGateway.\n",
                "properties": {
                    "createdAt": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "ipId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "organizationId": {
                        "type": "string"
                    },
                    "projectId": {
                        "type": "string"
                    },
                    "publicGatewayId": {
                        "type": "string"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "type": {
                        "type": "string"
                    },
                    "updatedAt": {
                        "type": "string"
                    },
                    "upstreamDnsServers": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "zone": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "createdAt",
                    "ipId",
                    "organizationId",
                    "projectId",
                    "tags",
                    "type",
                    "updatedAt",
                    "upstreamDnsServers",
                    "zone",
                    "id"
                ]
            }
        },
        "scaleway:index/getVpcPublicGatewayDhcp:getVpcPublicGatewayDhcp": {
            "inputs": {
                "description": "A collection of arguments for invoking getVpcPublicGatewayDhcp.\n",
                "properties": {
                    "dhcpId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "dhcpId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getVpcPublicGatewayDhcp.\n",
                "properties": {
                    "address": {
                        "type": "string"
                    },
                    "createdAt": {
                        "type": "string"
                    },
                    "dhcpId": {
                        "type": "string"
                    },
                    "dnsLocalName": {
                        "type": "string"
                    },
                    "dnsSearches": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "dnsServersOverrides": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "enableDynamic": {
                        "type": "boolean"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "organizationId": {
                        "type": "string"
                    },
                    "poolHigh": {
                        "type": "string"
                    },
                    "poolLow": {
                        "type": "string"
                    },
                    "projectId": {
                        "type": "string"
                    },
                    "pushDefaultRoute": {
                        "type": "boolean"
                    },
                    "pushDnsServer": {
                        "type": "boolean"
                    },
                    "rebindTimer": {
                        "type": "integer"
                    },
                    "renewTimer": {
                        "type": "integer"
                    },
                    "subnet": {
                        "type": "string"
                    },
                    "updatedAt": {
                        "type": "string"
                    },
                    "validLifetime": {
                        "type": "integer"
                    },
                    "zone": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "address",
                    "createdAt",
                    "dhcpId",
                    "dnsLocalName",
                    "dnsSearches",
                    "dnsServersOverrides",
                    "enableDynamic",
                    "organizationId",
                    "poolHigh",
                    "poolLow",
                    "projectId",
                    "pushDefaultRoute",
                    "pushDnsServer",
                    "rebindTimer",
                    "renewTimer",
                    "subnet",
                    "updatedAt",
                    "validLifetime",
                    "zone",
                    "id"
                ]
            }
        },
        "scaleway:index/getVpcPublicGatewayIp:getVpcPublicGatewayIp": {
            "inputs": {
                "description": "A collection of arguments for invoking getVpcPublicGatewayIp.\n",
                "properties": {
                    "ipId": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getVpcPublicGatewayIp.\n",
                "properties": {
                    "address": {
                        "type": "string"
                    },
                    "createdAt": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "ipId": {
                        "type": "string"
                    },
                    "organizationId": {
                        "type": "string"
                    },
                    "projectId": {
                        "type": "string"
                    },
                    "reverse": {
                        "type": "string"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "updatedAt": {
                        "type": "string"
                    },
                    "zone": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "address",
                    "createdAt",
                    "organizationId",
                    "projectId",
                    "reverse",
                    "tags",
                    "updatedAt",
                    "zone",
                    "id"
                ]
            }
        },
        "scaleway:index/getVpcPublicPatRule:getVpcPublicPatRule": {
            "inputs": {
                "description": "A collection of arguments for invoking getVpcPublicPatRule.\n",
                "properties": {
                    "patRuleId": {
                        "type": "string"
                    },
                    "zone": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "patRuleId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getVpcPublicPatRule.\n",
                "properties": {
                    "createdAt": {
                        "type": "string"
                    },
                    "gatewayId": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "organizationId": {
                        "type": "string"
                    },
                    "patRuleId": {
                        "type": "string"
                    },
                    "privateIp": {
                        "type": "string"
                    },
                    "privatePort": {
                        "type": "integer"
                    },
                    "protocol": {
                        "type": "string"
                    },
                    "publicPort": {
                        "type": "integer"
                    },
                    "updatedAt": {
                        "type": "string"
                    },
                    "zone": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "createdAt",
                    "gatewayId",
                    "organizationId",
                    "patRuleId",
                    "privateIp",
                    "privatePort",
                    "protocol",
                    "publicPort",
                    "updatedAt",
                    "id"
                ]
            }
        }
    }
}